Microchip MPLAB XC8 Compiler V1.37 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v1.37\dat\en_msgs.txt -cs \
  -h+dist/default/production\Assignment1Mech2.production.sym \
  --cmf=dist/default/production\Assignment1Mech2.production.cmf -z \
  -Q16F877A -oC:\Users\JohnMac\AppData\Local\Temp\s3l8.2 \
  -Mdist/default/production/Assignment1Mech2.production.map -E1 -ver=XC8 \
  -ASTACK=0110h-016fh -pstack=STACK -ACODE=00h-07FFhx4 -ASTRCODE=00h-01FFFh \
  -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 -AENTRY=00h-0FFhx32 \
  -ACOMMON=070h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=CODE -ACONFIG=02007h-02007h -pconfig=CONFIG -DCONFIG=2 \
  -AIDLOC=02000h-02003h -pidloc=IDLOC -DIDLOC=2 -AEEDATA=00h-0FFh/02100h \
  -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 \
  -DENTRY=2 -k C:\Users\JohnMac\AppData\Local\Temp\s3l8.obj \
  dist/default/production\Assignment1Mech2.production.obj 

Object code version is 3.11

Machine type is 16F877A



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\JohnMac\AppData\Local\Temp\s3l8.obj
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        1     400E       0
dist/default/production\Assignment1Mech2.production.obj
                cinit                                15       15       19        8       0
                intentry                              4        4        E        8       0
                text15                              60A      60A       34        8       0
                text14                              63E      63E       17        8       0
                text13                              655      655       16        8       0
                text12                              36C      36C       6E        8       0
                text11                              226      226       B8        8       0
                text10                              49D      49D       5F        8       0
                text9                               3DA      3DA       63        8       0
                text8                                2E       2E      109        8       0
                text7                               68C      68C        A        8       0
                text6                               58C      58C       42        8       0
                text5                               2DE      2DE       8E        8       0
                text4                               5CE      5CE       3C        8       0
                text3                               4FC      4FC       4A        8       0
                text2                               43D      43D       60        8       0
                text1                               137      137       EF        8       0
                maintext                            546      546       46        8       0
                cstackBANK0                          20       20       50       20       1
                cstackCOMMON                         71       71        5       70       1
                cstackBANK1                          B0       B0        D       A0       1
                inittext                            66B      66B       11        8       0
                dataBANK1                            A0       A0       10       A0       1
                bssBANK1                             BD       BD        2       A0       1
                bssCOMMON                            76       76        4       70       1
                bitbssCOMMON                        380       70        7       70       1     8
                idataBANK1                          67C      67C       10        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       19         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text15                              60A      60A       34         0
                text14                              63E      63E       17         0
                text13                              655      655       16         0
                text12                              36C      36C       6E         0
                text11                              226      226       B8         0
                text10                              49D      49D       5F         0
                text9                               3DA      3DA       63         0
                text8                                2E       2E      109         0
                text7                               68C      68C        A         0
                text6                               58C      58C       42         0
                text5                               2DE      2DE       8E         0
                text4                               5CE      5CE       3C         0
                text3                               4FC      4FC       4A         0
                text2                               43D      43D       60         0
                text1                               137      137       EF         0
                maintext                            546      546       46         0
                inittext                            66B      66B       11         0
                idataBANK1                          67C      67C       10         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         71       71        5         1
                bssCOMMON                            76       76        4         1
                bitbssCOMMON                        380       70        7         1

        CLASS   BANK0          
                cstackBANK0                          20       20       50         1

        CLASS   BANK1          
                cstackBANK1                          B0       B0        D         1
                dataBANK1                            A0       A0       10         1
                bssBANK1                             BD       BD        2         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        1         0

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  000692  000696         8       0  CODE        2
                cstackBANK0                    000020  000050  000070        20       1  BANK0       1
                bitbssCOMMON                   000070  00000A  00007A        70       1  COMMON      1
                dataBANK1                      0000A0  00001F  0000BF        A0       1  BANK1       1
                config                         002007  000001  002008      400E       0  CONFIG      2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00BF-00EF             31           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         0696-1FFF            800
        COMMON           007A-007D              4           1
        CONST            0003-0003              1           2
                         0696-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         0696-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              00BF-00EF             31           1
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         0696-1FFF           196A
        STRING           0003-0003              1           2
                         0696-1FFF            100

                                  Symbol Table

?___altoft                cstackBANK0  0028
?___ftadd                 cstackBANK0  005A
?___ftdiv                 cstackBANK0  0033
?___ftneg                 cstackBANK0  0030
?___ftpack                cstackBANK0  0020
?___fttol                 cstackBANK0  0043
?_round                   cstackBANK0  0067
?_trunc                   cstackBANK0  0051
_GIE                      (abs)        005F
_PORTC                    (abs)        0007
_PS0                      (abs)        0408
_PS1                      (abs)        0409
_PS2                      (abs)        040A
_PSA                      (abs)        040B
_RB0                      (abs)        0030
_RB1                      (abs)        0031
_RB2                      (abs)        0032
_RB3                      (abs)        0033
_RB4                      (abs)        0034
_T0CS                     (abs)        040D
_T0IF                     (abs)        005A
_T0SE                     (abs)        040C
_TMR0                     (abs)        0001
_TMR0IE                   (abs)        005D
_TRISB                    (abs)        0086
_TRISC                    (abs)        0087
__CFG_BOREN$OFF           (abs)        0000
__CFG_CP$OFF              (abs)        0000
__CFG_CPD$OFF             (abs)        0000
__CFG_FOSC$HS             (abs)        0000
__CFG_LVP$OFF             (abs)        0000
__CFG_PWRTE$OFF           (abs)        0000
__CFG_WDTE$OFF            (abs)        0000
__CFG_WRT$OFF             (abs)        0000
__Habs1                   abs1         0000
__Hbank0                  bank0        0000
__Hbank1                  bank1        0000
__Hbank2                  bank2        0000
__Hbank3                  bank3        0000
__HbitbssCOMMON           bitbssCOMMON 0000
__HbssBANK1               bssBANK1     0000
__HbssCOMMON              bssCOMMON    0000
__Hcinit                  cinit        002E
__Hclrtext                clrtext      0000
__Hcode                   code         0000
__Hcommon                 common       0000
__Hconfig                 config       2008
__HcstackBANK0            cstackBANK0  0000
__HcstackBANK1            cstackBANK1  0000
__HcstackCOMMON           cstackCOMMON 0000
__HdataBANK1              dataBANK1    0000
__Heeprom_data            eeprom_data  0000
__Hend_init               end_init     0015
__Hfunctab                functab      0000
__HidataBANK1             idataBANK1   0000
__Hidloc                  idloc        0000
__Hinit                   init         0012
__Hinittext               inittext     0000
__Hintentry               intentry     0012
__Hmaintext               maintext     0000
__Hpowerup                powerup      0000
__Hram                    ram          0000
__Hreset_vec              reset_vec    0003
__Hsfr0                   sfr0         0000
__Hsfr1                   sfr1         0000
__Hsfr2                   sfr2         0000
__Hsfr3                   sfr3         0000
__Hspace_0                (abs)        2008
__Hspace_1                (abs)        0387
__Hspace_2                (abs)        0000
__Hspace_3                (abs)        0000
__Hstack                  stack        0000
__Hstrings                strings      0000
__Htext                   text         0000
__Labs1                   abs1         0000
__Lbank0                  bank0        0000
__Lbank1                  bank1        0000
__Lbank2                  bank2        0000
__Lbank3                  bank3        0000
__LbitbssCOMMON           bitbssCOMMON 0000
__LbssBANK1               bssBANK1     0000
__LbssCOMMON              bssCOMMON    0000
__Lcinit                  cinit        0015
__Lclrtext                clrtext      0000
__Lcode                   code         0000
__Lcommon                 common       0000
__Lconfig                 config       2007
__LcstackBANK0            cstackBANK0  0000
__LcstackBANK1            cstackBANK1  0000
__LcstackCOMMON           cstackCOMMON 0000
__LdataBANK1              dataBANK1    0000
__Leeprom_data            eeprom_data  0000
__Lend_init               end_init     0012
__Lfunctab                functab      0000
__LidataBANK1             idataBANK1   0000
__Lidloc                  idloc        0000
__Linit                   init         0012
__Linittext               inittext     0000
__Lintentry               intentry     0004
__Lmaintext               maintext     0000
__Lpowerup                powerup      0000
__Lram                    ram          0000
__Lreset_vec              reset_vec    0000
__Lsfr0                   sfr0         0000
__Lsfr1                   sfr1         0000
__Lsfr2                   sfr2         0000
__Lsfr3                   sfr3         0000
__Lspace_0                (abs)        0000
__Lspace_1                (abs)        0000
__Lspace_2                (abs)        0000
__Lspace_3                (abs)        0000
__Lstack                  stack        0000
__Lstrings                strings      0000
__Ltext                   text         0000
__S0                      (abs)        2008
__S1                      (abs)        00BF
__S2                      (abs)        0000
__S3                      (abs)        0000
___altoft                 text6        058C
___altoft@c               cstackBANK0  0028
___altoft@exp             cstackBANK0  002E
___altoft@sign            cstackBANK0  002F
___ftadd                  text8        002E
___ftadd@exp1             cstackBANK0  0066
___ftadd@exp2             cstackBANK0  0065
___ftadd@f1               cstackBANK0  005A
___ftadd@f2               cstackBANK0  005D
___ftadd@sign             cstackBANK0  0064
___ftdiv                  text11       0226
___ftdiv@cntr             cstackBANK0  003D
___ftdiv@exp              cstackBANK0  0041
___ftdiv@f1               cstackBANK0  0036
___ftdiv@f2               cstackBANK0  0033
___ftdiv@f3               cstackBANK0  003E
___ftdiv@sign             cstackBANK0  0042
___ftge                   text10       049D
___ftge@ff1               cstackBANK0  0020
___ftge@ff2               cstackBANK0  0023
___ftneg                  text7        068C
___ftneg@f1               cstackBANK0  0030
___ftpack                 text12       036C
___ftpack@arg             cstackBANK0  0020
___ftpack@exp             cstackBANK0  0023
___ftpack@sign            cstackBANK0  0024
___fttol                  text5        02DE
___fttol@exp1             cstackBANK0  0050
___fttol@f1               cstackBANK0  0043
___fttol@lval             cstackBANK0  004C
___fttol@sign1            cstackBANK0  004B
___int_sp                 stack        0000
___latbits                (abs)        0002
___sp                     stack        0000
__end_of___altoft         text6        05CE
__end_of___ftadd          text8        0137
__end_of___ftdiv          text11       02DE
__end_of___ftge           text10       04FC
__end_of___ftneg          text7        0696
__end_of___ftpack         text12       03DA
__end_of___fttol          text5        036C
__end_of__initialization  cinit        002A
__end_of_debounceButtons  text15       063E
__end_of_frexp            text4        060A
__end_of_initialise       text13       066B
__end_of_isr              text14       0655
__end_of_main             maintext     058C
__end_of_move             text9        043D
__end_of_moveDeg          text1        0226
__end_of_round            text2        049D
__end_of_trunc            text3        0546
__initialization          cinit        0015
__pbitbssCOMMON           bitbssCOMMON 0380
__pbssBANK1               bssBANK1     00BD
__pbssCOMMON              bssCOMMON    0076
__pcstackBANK0            cstackBANK0  0020
__pcstackBANK1            cstackBANK1  00B0
__pcstackCOMMON           cstackCOMMON 0071
__pdataBANK1              dataBANK1    00A0
__pidataBANK1             idataBANK1   067C
__pintentry               intentry     0004
__pmaintext               maintext     0546
__ptext1                  text1        0137
__ptext10                 text10       049D
__ptext11                 text11       0226
__ptext12                 text12       036C
__ptext13                 text13       0655
__ptext14                 text14       063E
__ptext15                 text15       060A
__ptext2                  text2        043D
__ptext3                  text3        04FC
__ptext4                  text4        05CE
__ptext5                  text5        02DE
__ptext6                  text6        058C
__ptext7                  text7        068C
__ptext8                  text8        002E
__ptext9                  text9        03DA
__size_of___altoft        (abs)        0000
__size_of___ftadd         (abs)        0000
__size_of___ftdiv         (abs)        0000
__size_of___ftge          (abs)        0000
__size_of___ftneg         (abs)        0000
__size_of___ftpack        (abs)        0000
__size_of___fttol         (abs)        0000
__size_of_debounceButtons (abs)        0000
__size_of_frexp           (abs)        0000
__size_of_initialise      (abs)        0000
__size_of_isr             (abs)        0000
__size_of_main            (abs)        0000
__size_of_move            (abs)        0000
__size_of_moveDeg         (abs)        0000
__size_of_round           (abs)        0000
__size_of_trunc           (abs)        0000
_allSteps                 dataBANK1    00A0
_cstep                    bssCOMMON    0076
_debounceButtons          text15       060A
_frexp                    text4        05CE
_initialise               text13       0655
_isr                      text14       063E
_main                     maintext     0546
_motorToggle              bitbssCOMMON 0380
_move                     text9        03DA
_moveDeg                  text1        0137
_moveDeg$535              cstackBANK1  00B1
_moveDeg$536              cstackBANK1  00B4
_moveDeg$537              cstackBANK1  00B7
_pb0Pressed               bitbssCOMMON 0381
_pb0Released              bitbssCOMMON 0382
_pb1Pressed               bitbssCOMMON 0383
_pb1Released              bitbssCOMMON 0384
_pb2Pressed               bitbssCOMMON 0385
_pb2Released              bitbssCOMMON 0386
_round                    text2        043D
_rtcCounter               bssCOMMON    0077
_rtcCounter2              bssCOMMON    0078
_rtcCounter3              bssCOMMON    0079
_trunc                    text3        04FC
btemp                     (abs)        007E
end_of_initialization     cinit        002A
frexp@eptr                cstackBANK0  0023
frexp@value               cstackBANK0  0020
init_fetch0               inittext     066B
init_ram0                 inittext     066F
interrupt_function        intentry     0004
intlevel0                 functab      0000
intlevel1                 functab      0000
intlevel2                 functab      0000
intlevel3                 functab      0000
intlevel4                 functab      0000
intlevel5                 functab      0000
ltemp                     (abs)        007E
ltemp0                    (abs)        007E
ltemp1                    (abs)        0082
ltemp2                    (abs)        0086
ltemp3                    (abs)        0080
move@direction            cstackBANK0  0020
move@i                    cstackBANK0  0025
move@steps                cstackBANK0  0024
moveDeg@deg               cstackBANK0  006D
moveDeg@stepsToMove       cstackBANK1  00BA
reset_vec                 reset_vec    0000
round@f                   cstackBANK0  006A
round@x                   cstackBANK0  0067
saved_w                   (abs)        007E
stackhi                   (abs)        0000
stacklo                   (abs)        0000
start                     init         0012
start_initialization      cinit        0015
trunc@expon               cstackBANK0  0058
trunc@i                   cstackBANK0  0055
trunc@x                   cstackBANK0  0051
ttemp                     (abs)        007E
ttemp0                    (abs)        007E
ttemp1                    (abs)        0081
ttemp2                    (abs)        0084
ttemp3                    (abs)        0087
ttemp4                    (abs)        007F
wtemp                     (abs)        007E
wtemp0                    (abs)        007E
wtemp1                    (abs)        0080
wtemp2                    (abs)        0082
wtemp3                    (abs)        0084
wtemp4                    (abs)        0086
wtemp5                    (abs)        0088
wtemp6                    (abs)        007F


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 41 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       2       0       0
      Totals:         0       0       2       0       0
Total ram usage:        2 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_initialise
		_move
		_moveDeg
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _moveDeg *****************
 Defined at:
		line 46 in file "motor.c"
 Parameters:    Size  Location     Type
  deg             3   77[BANK0 ] void 
 Auto vars:     Size  Location     Type
  stepsToMove     1   10[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       0      10       0       0
      Temps:          0       0       1       0       0
      Totals:         0       3      11       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___ftdiv
		___ftge
		___ftneg
		___fttol
		_move
		_round
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _round *****************
 Defined at:
		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c"
 Parameters:    Size  Location     Type
  x               3   71[BANK0 ] void 
 Auto vars:     Size  Location     Type
  f               3   74[BANK0 ] void 
 Return value:  Size  Location     Type
                  3   71[BANK0 ] void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___ftadd
		___ftneg
		_trunc
 This function is called by:
		_moveDeg
 This function uses a non-reentrant model


 *************** function _trunc *****************
 Defined at:
		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c"
 Parameters:    Size  Location     Type
  x               3   49[BANK0 ] void 
 Auto vars:     Size  Location     Type
  i               3   53[BANK0 ] void 
  expon           2   56[BANK0 ] int 
 Return value:  Size  Location     Type
                  3   49[BANK0 ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       5       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       9       0       0       0
Total ram usage:        9 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		___altoft
		___fttol
		_frexp
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function _frexp *****************
 Defined at:
		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
 Parameters:    Size  Location     Type
  value           3    0[BANK0 ] int 
  eptr            1    3[BANK0 ] PTR int 
		 -> trunc@expon(2), 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK0 ] PTR int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___fttol *****************
 Defined at:
		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
 Parameters:    Size  Location     Type
  f1              3   35[BANK0 ] float 
 Auto vars:     Size  Location     Type
  lval            4   44[BANK0 ] unsigned long 
  exp1            1   48[BANK0 ] unsigned char 
  sign1           1   43[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   35[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_moveDeg
		_trunc
 This function uses a non-reentrant model


 *************** function ___altoft *****************
 Defined at:
		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
 Parameters:    Size  Location     Type
  c               4    8[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1   15[BANK0 ] unsigned char 
  exp             1   14[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3    8[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_trunc
 This function uses a non-reentrant model


 *************** function ___ftneg *****************
 Defined at:
		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
 Parameters:    Size  Location     Type
  f1              3   16[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3   16[BANK0 ] float 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       3       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_moveDeg
		_round
 This function uses a non-reentrant model


 *************** function ___ftadd *****************
 Defined at:
		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
 Parameters:    Size  Location     Type
  f1              3   58[BANK0 ] float 
  f2              3   61[BANK0 ] float 
 Auto vars:     Size  Location     Type
  exp1            1   70[BANK0 ] unsigned char 
  exp2            1   69[BANK0 ] unsigned char 
  sign            1   68[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   58[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       3       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_round
 This function uses a non-reentrant model


 *************** function _move *****************
 Defined at:
		line 18 in file "motor.c"
 Parameters:    Size  Location     Type
  steps           1    wreg     unsigned char 
  direction       1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  steps           1    4[BANK0 ] unsigned char 
  i               1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
		_moveDeg
 This function uses a non-reentrant model


 *************** function ___ftge *****************
 Defined at:
		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
 Parameters:    Size  Location     Type
  ff1             3    0[BANK0 ] float 
  ff2             3    3[BANK0 ] float 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
		None               void
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       6       0       0       0
      Totals:         0      12       0       0       0
Total ram usage:       12 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_moveDeg
 This function uses a non-reentrant model


 *************** function ___ftdiv *****************
 Defined at:
		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
 Parameters:    Size  Location     Type
  f2              3   19[BANK0 ] float 
  f1              3   22[BANK0 ] float 
 Auto vars:     Size  Location     Type
  f3              3   30[BANK0 ] float 
  sign            1   34[BANK0 ] unsigned char 
  exp             1   33[BANK0 ] unsigned char 
  cntr            1   29[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  3   19[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       6       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      16       0       0       0
Total ram usage:       16 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___ftpack
 This function is called by:
		_moveDeg
 This function uses a non-reentrant model


 *************** function ___ftpack *****************
 Defined at:
		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
 Parameters:    Size  Location     Type
  arg             3    0[BANK0 ] unsigned um
  exp             1    3[BANK0 ] unsigned char 
  sign            1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  3    0[BANK0 ] float 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       5       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       8       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		___altoft
		___ftadd
		___ftdiv
 This function uses a non-reentrant model


 *************** function _initialise *****************
 Defined at:
		line 19 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 12 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		_debounceButtons
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _debounceButtons *****************
 Defined at:
		line 6 in file "timer0.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_isr
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c
		___altoft      		CODE           	058C	0000	67

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c estimated size: 67

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c
		___ftdiv       		CODE           	0226	0000	185

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c estimated size: 185

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c
		___ftge        		CODE           	049D	0000	96

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c estimated size: 96

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c
		___fttol       		CODE           	02DE	0000	143

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c estimated size: 143

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c
		___ftadd       		CODE           	002E	0000	266

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c estimated size: 266

timer0.c
		_debounceButtons		CODE           	060A	0000	53

timer0.c estimated size: 53

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c
		_trunc         		CODE           	04FC	0000	75

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c estimated size: 75

motor.c
		_move          		CODE           	03DA	0000	100
		_moveDeg       		CODE           	0137	0000	240

motor.c estimated size: 340

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c
		___ftneg       		CODE           	068C	0000	11

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c estimated size: 11

shared
		__initialization		CODE           	0015	0000	22

shared estimated size: 22

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c
		_round         		CODE           	043D	0000	97

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c estimated size: 97

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c
		_frexp         		CODE           	05CE	0000	61

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c estimated size: 61

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c
		___ftpack      		CODE           	036C	0000	111

C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c estimated size: 111

main.c
		_main          		CODE           	0546	0000	71
		_isr           		CODE           	063E	0000	24
		_initialise    		CODE           	0655	0000	23

main.c estimated size: 118

