

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Apr 01 21:21:54 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0088                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK1
   214  067C                     __pidataBANK1:	
   215                           
   216                           ;initializer for _allSteps
   217  067C  343C               	retlw	60
   218  067D  3400               	retlw	0
   219  067E  342E               	retlw	46
   220  067F  3400               	retlw	0
   221  0680  342B               	retlw	43
   222  0681  3400               	retlw	0
   223  0682  3427               	retlw	39
   224  0683  3400               	retlw	0
   225  0684  3435               	retlw	53
   226  0685  3400               	retlw	0
   227  0686  3417               	retlw	23
   228  0687  3400               	retlw	0
   229  0688  341B               	retlw	27
   230  0689  3400               	retlw	0
   231  068A  341E               	retlw	30
   232  068B  3400               	retlw	0
   233  0007                     _PORTC	set	7
   234  0001                     _TMR0	set	1
   235  005F                     _GIE	set	95
   236  0030                     _RB0	set	48
   237  0031                     _RB1	set	49
   238  0032                     _RB2	set	50
   239  0033                     _RB3	set	51
   240  0034                     _RB4	set	52
   241  005A                     _T0IF	set	90
   242  005D                     _TMR0IE	set	93
   243  0086                     _TRISB	set	134
   244  0087                     _TRISC	set	135
   245  0408                     _PS0	set	1032
   246  0409                     _PS1	set	1033
   247  040A                     _PS2	set	1034
   248  040B                     _PSA	set	1035
   249  040D                     _T0CS	set	1037
   250  040C                     _T0SE	set	1036
   251                           
   252                           ; #config settings
   253  0000                     
   254                           	psect	cinit
   255  0015                     start_initialization:	
   256  0015                     __initialization:	
   257                           
   258                           ; Clear objects allocated to BITCOMMON
   259  0015  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   260                           
   261                           ; Clear objects allocated to COMMON
   262  0016  01F6               	clrf	__pbssCOMMON& (0+127)
   263  0017  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   264  0018  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   265  0019  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   266                           
   267                           ; Clear objects allocated to BANK1
   268  001A  1683               	bsf	3,5	;RP0=1, select bank1
   269  001B  1303               	bcf	3,6	;RP1=0, select bank1
   270  001C  01BD               	clrf	__pbssBANK1& (0+127)
   271  001D  01BE               	clrf	(__pbssBANK1+1)& (0+127)
   272                           
   273                           ; Initialize objects allocated to BANK1
   274  001E  1383               	bcf	3,7	;select IRP bank0
   275  001F  30B0               	movlw	low (__pdataBANK1+16)
   276  0020  00FD               	movwf	btemp+-1
   277  0021  3006               	movlw	high __pidataBANK1
   278  0022  00FE               	movwf	btemp
   279  0023  307C               	movlw	low __pidataBANK1
   280  0024  00FF               	movwf	btemp+1
   281  0025  30A0               	movlw	low __pdataBANK1
   282  0026  0084               	movwf	4
   283  0027  120A  118A  266F   	fcall	init_ram0
   284  002A                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  002A                     __end_of__initialization:	
   288  002A  0183               	clrf	3
   289  002B  120A  118A  2D46   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bitbssCOMMON
   292  0380                     __pbitbssCOMMON:	
   293  0380                     _motorToggle:	
   294  0380                     	ds	1
   295  0381                     _pb0Pressed:	
   296  0381                     	ds	1
   297  0382                     _pb0Released:	
   298  0382                     	ds	1
   299  0383                     _pb1Pressed:	
   300  0383                     	ds	1
   301  0384                     _pb1Released:	
   302  0384                     	ds	1
   303  0385                     _pb2Pressed:	
   304  0385                     	ds	1
   305  0386                     _pb2Released:	
   306  0386                     	ds	1
   307                           
   308                           	psect	bssCOMMON
   309  0076                     __pbssCOMMON:	
   310  0076                     _cstep:	
   311  0076                     	ds	1
   312  0077                     _rtcCounter:	
   313  0077                     	ds	1
   314  0078                     _rtcCounter2:	
   315  0078                     	ds	1
   316  0079                     _rtcCounter3:	
   317  0079                     	ds	1
   318                           
   319                           	psect	bssBANK1
   320  00BD                     __pbssBANK1:	
   321  00BD                     _errno:	
   322  00BD                     	ds	2
   323                           
   324                           	psect	dataBANK1
   325  00A0                     __pdataBANK1:	
   326  00A0                     _allSteps:	
   327  00A0                     	ds	16
   328                           
   329                           	psect	inittext
   330  066B                     init_fetch0:	
   331                           ;	Called with low address in FSR and high address in W
   332                           
   333  066B  087E               	movf	126,w
   334  066C  008A               	movwf	10
   335  066D  087F               	movf	127,w
   336  066E  0082               	movwf	2
   337  066F                     init_ram0:	
   338                           ;Called with:
   339                           ;	high address of idata address in btemp 
   340                           ;	low address of idata address in btemp+1 
   341                           ;	low address of data in FSR
   342                           ;	high address + 1 of data in btemp-1
   343                           
   344  066F  266B  120A  118A   	fcall	init_fetch0
   345  0672  0080               	movwf	0
   346  0673  0A84               	incf	4,f
   347  0674  0804               	movf	4,w
   348  0675  067D               	xorwf	125,w
   349  0676  1903               	btfsc	3,2
   350  0677  3400               	retlw	0
   351  0678  0AFF               	incf	127,f
   352  0679  1903               	btfsc	3,2
   353  067A  0AFE               	incf	126,f
   354  067B  2E6F               	goto	init_ram0
   355                           
   356                           	psect	cstackBANK1
   357  00B0                     __pcstackBANK1:	
   358  00B0                     ??_moveDeg:	
   359                           
   360                           ; 1 bytes @ 0x0
   361  00B0                     	ds	1
   362  00B1                     _moveDeg$535:	
   363                           
   364                           ; 3 bytes @ 0x1
   365  00B1                     	ds	3
   366  00B4                     _moveDeg$536:	
   367                           
   368                           ; 3 bytes @ 0x4
   369  00B4                     	ds	3
   370  00B7                     _moveDeg$537:	
   371                           
   372                           ; 3 bytes @ 0x7
   373  00B7                     	ds	3
   374  00BA                     moveDeg@stepsToMove:	
   375                           
   376                           ; 1 bytes @ 0xA
   377  00BA                     	ds	1
   378  00BB                     ??_main:	
   379                           
   380                           ; 1 bytes @ 0xB
   381  00BB                     	ds	2
   382                           
   383                           	psect	cstackCOMMON
   384  0071                     __pcstackCOMMON:	
   385  0071                     ?_debounceButtons:	
   386  0071                     ??_debounceButtons:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0071                     ?_isr:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0071                     ?_initialise:	
   393                           ; 1 bytes @ 0x0
   394                           
   395  0071                     ?_main:	
   396                           ; 1 bytes @ 0x0
   397                           
   398                           
   399                           ; 1 bytes @ 0x0
   400  0071                     	ds	1
   401  0072                     ??_isr:	
   402                           
   403                           ; 1 bytes @ 0x1
   404  0072                     	ds	4
   405                           
   406                           	psect	cstackBANK0
   407  0020                     __pcstackBANK0:	
   408  0020                     ?___ftge:	
   409  0020                     ?_move:	
   410                           ; 1 bit 
   411                           
   412  0020                     ??_initialise:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0020                     ?___ftpack:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0020                     ?_frexp:	
   419                           ; 3 bytes @ 0x0
   420                           
   421  0020                     move@direction:	
   422                           ; 3 bytes @ 0x0
   423                           
   424  0020                     ___ftpack@arg:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0020                     ___ftge@ff1:	
   428                           ; 3 bytes @ 0x0
   429                           
   430  0020                     frexp@value:	
   431                           ; 3 bytes @ 0x0
   432                           
   433                           
   434                           ; 3 bytes @ 0x0
   435  0020                     	ds	1
   436  0021                     ??_move:	
   437                           
   438                           ; 1 bytes @ 0x1
   439  0021                     	ds	2
   440  0023                     ___ftpack@exp:	
   441  0023                     frexp@eptr:	
   442                           ; 1 bytes @ 0x3
   443                           
   444  0023                     ___ftge@ff2:	
   445                           ; 1 bytes @ 0x3
   446                           
   447                           
   448                           ; 3 bytes @ 0x3
   449  0023                     	ds	1
   450  0024                     ??_frexp:	
   451  0024                     move@steps:	
   452                           ; 1 bytes @ 0x4
   453                           
   454  0024                     ___ftpack@sign:	
   455                           ; 1 bytes @ 0x4
   456                           
   457                           
   458                           ; 1 bytes @ 0x4
   459  0024                     	ds	1
   460  0025                     ??___ftpack:	
   461  0025                     move@i:	
   462                           ; 1 bytes @ 0x5
   463                           
   464                           
   465                           ; 1 bytes @ 0x5
   466  0025                     	ds	1
   467  0026                     ??___ftge:	
   468                           
   469                           ; 1 bytes @ 0x6
   470  0026                     	ds	2
   471  0028                     ?___altoft:	
   472  0028                     ___altoft@c:	
   473                           ; 3 bytes @ 0x8
   474                           
   475                           
   476                           ; 4 bytes @ 0x8
   477  0028                     	ds	4
   478  002C                     ??___altoft:	
   479                           
   480                           ; 1 bytes @ 0xC
   481  002C                     	ds	2
   482  002E                     ___altoft@exp:	
   483                           
   484                           ; 1 bytes @ 0xE
   485  002E                     	ds	1
   486  002F                     ___altoft@sign:	
   487                           
   488                           ; 1 bytes @ 0xF
   489  002F                     	ds	1
   490  0030                     ?___ftneg:	
   491  0030                     ___ftneg@f1:	
   492                           ; 3 bytes @ 0x10
   493                           
   494                           
   495                           ; 3 bytes @ 0x10
   496  0030                     	ds	3
   497  0033                     ??___ftneg:	
   498  0033                     ?___ftdiv:	
   499                           ; 1 bytes @ 0x13
   500                           
   501  0033                     ___ftdiv@f2:	
   502                           ; 3 bytes @ 0x13
   503                           
   504                           
   505                           ; 3 bytes @ 0x13
   506  0033                     	ds	3
   507  0036                     ___ftdiv@f1:	
   508                           
   509                           ; 3 bytes @ 0x16
   510  0036                     	ds	3
   511  0039                     ??___ftdiv:	
   512                           
   513                           ; 1 bytes @ 0x19
   514  0039                     	ds	4
   515  003D                     ___ftdiv@cntr:	
   516                           
   517                           ; 1 bytes @ 0x1D
   518  003D                     	ds	1
   519  003E                     ___ftdiv@f3:	
   520                           
   521                           ; 3 bytes @ 0x1E
   522  003E                     	ds	3
   523  0041                     ___ftdiv@exp:	
   524                           
   525                           ; 1 bytes @ 0x21
   526  0041                     	ds	1
   527  0042                     ___ftdiv@sign:	
   528                           
   529                           ; 1 bytes @ 0x22
   530  0042                     	ds	1
   531  0043                     ?___fttol:	
   532  0043                     ___fttol@f1:	
   533                           ; 4 bytes @ 0x23
   534                           
   535                           
   536                           ; 3 bytes @ 0x23
   537  0043                     	ds	4
   538  0047                     ??___fttol:	
   539                           
   540                           ; 1 bytes @ 0x27
   541  0047                     	ds	4
   542  004B                     ___fttol@sign1:	
   543                           
   544                           ; 1 bytes @ 0x2B
   545  004B                     	ds	1
   546  004C                     ___fttol@lval:	
   547                           
   548                           ; 4 bytes @ 0x2C
   549  004C                     	ds	4
   550  0050                     ___fttol@exp1:	
   551                           
   552                           ; 1 bytes @ 0x30
   553  0050                     	ds	1
   554  0051                     ?_trunc:	
   555  0051                     trunc@x:	
   556                           ; 3 bytes @ 0x31
   557                           
   558                           
   559                           ; 3 bytes @ 0x31
   560  0051                     	ds	3
   561  0054                     ??_trunc:	
   562                           
   563                           ; 1 bytes @ 0x34
   564  0054                     	ds	1
   565  0055                     trunc@i:	
   566                           
   567                           ; 3 bytes @ 0x35
   568  0055                     	ds	3
   569  0058                     trunc@expon:	
   570                           
   571                           ; 2 bytes @ 0x38
   572  0058                     	ds	2
   573  005A                     ?___ftadd:	
   574  005A                     ___ftadd@f1:	
   575                           ; 3 bytes @ 0x3A
   576                           
   577                           
   578                           ; 3 bytes @ 0x3A
   579  005A                     	ds	3
   580  005D                     ___ftadd@f2:	
   581                           
   582                           ; 3 bytes @ 0x3D
   583  005D                     	ds	3
   584  0060                     ??___ftadd:	
   585                           
   586                           ; 1 bytes @ 0x40
   587  0060                     	ds	4
   588  0064                     ___ftadd@sign:	
   589                           
   590                           ; 1 bytes @ 0x44
   591  0064                     	ds	1
   592  0065                     ___ftadd@exp2:	
   593                           
   594                           ; 1 bytes @ 0x45
   595  0065                     	ds	1
   596  0066                     ___ftadd@exp1:	
   597                           
   598                           ; 1 bytes @ 0x46
   599  0066                     	ds	1
   600  0067                     ?_round:	
   601  0067                     round@x:	
   602                           ; 3 bytes @ 0x47
   603                           
   604                           
   605                           ; 3 bytes @ 0x47
   606  0067                     	ds	3
   607  006A                     ??_round:	
   608  006A                     round@f:	
   609                           ; 1 bytes @ 0x4A
   610                           
   611                           
   612                           ; 3 bytes @ 0x4A
   613  006A                     	ds	3
   614  006D                     ?_moveDeg:	
   615  006D                     moveDeg@deg:	
   616                           ; 1 bytes @ 0x4D
   617                           
   618                           
   619                           ; 3 bytes @ 0x4D
   620  006D                     	ds	3
   621                           
   622                           	psect	maintext
   623  0546                     __pmaintext:	
   624 ;;
   625 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   626 ;;
   627 ;; *************** function _main *****************
   628 ;; Defined at:
   629 ;;		line 41 in file "main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;                  1    wreg      void 
   636 ;; Registers used:
   637 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : B00/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   643 ;;      Params:         0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0
   645 ;;      Temps:          0       0       2       0       0
   646 ;;      Totals:         0       0       2       0       0
   647 ;;Total ram usage:        2 bytes
   648 ;; Hardware stack levels required when called:    7
   649 ;; This function calls:
   650 ;;		_initialise
   651 ;;		_move
   652 ;;		_moveDeg
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           
   659                           ;psect for function _main
   660  0546                     _main:	
   661                           
   662                           ;main.c: 43: initialise();
   663                           
   664                           ;incstack = 0
   665                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   666  0546  120A  118A  2655  120A  118A  	fcall	_initialise
   667  054B                     l1734:	
   668                           ;main.c: 45: while(1){
   669                           
   670                           
   671                           ;main.c: 46: if(pb0Pressed){
   672  054B  1CF0               	btfss	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   673  054C  2D57               	goto	l1740
   674                           
   675                           ;main.c: 47: move(1,0);
   676  054D  1283               	bcf	3,5	;RP0=0, select bank0
   677  054E  1303               	bcf	3,6	;RP1=0, select bank0
   678  054F  01A0               	clrf	move@direction
   679  0550  3001               	movlw	1
   680  0551  120A  118A  23DA  120A  118A  	fcall	_move
   681                           
   682                           ;main.c: 48: pb0Pressed = 0;
   683  0556  10F0               	bcf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   684  0557                     l1740:	
   685                           
   686                           ;main.c: 49: }
   687                           ;main.c: 50: if(pb1Pressed){
   688  0557  1DF0               	btfss	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   689  0558  2D64               	goto	l1746
   690                           
   691                           ;main.c: 51: move(1,1);
   692  0559  1283               	bcf	3,5	;RP0=0, select bank0
   693  055A  1303               	bcf	3,6	;RP1=0, select bank0
   694  055B  01A0               	clrf	move@direction
   695  055C  0AA0               	incf	move@direction,f
   696  055D  3001               	movlw	1
   697  055E  120A  118A  23DA  120A  118A  	fcall	_move
   698                           
   699                           ;main.c: 52: pb1Pressed = 0;
   700  0563  11F0               	bcf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   701  0564                     l1746:	
   702                           
   703                           ;main.c: 53: }
   704                           ;main.c: 54: if(pb2Pressed){
   705  0564  1EF0               	btfss	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
   706  0565  2D80               	goto	l1758
   707                           
   708                           ;main.c: 55: if(motorToggle){
   709  0566  1C70               	btfss	_motorToggle/(0+8),_motorToggle& (0+7)
   710  0567  2D70               	goto	l1752
   711                           
   712                           ;main.c: 56: moveDeg(-180);
   713  0568  3000               	movlw	0
   714  0569  1283               	bcf	3,5	;RP0=0, select bank0
   715  056A  1303               	bcf	3,6	;RP1=0, select bank0
   716  056B  00ED               	movwf	moveDeg@deg
   717  056C  3034               	movlw	52
   718  056D  00EE               	movwf	moveDeg@deg+1
   719  056E  30C3               	movlw	195
   720  056F  2D77               	goto	L1
   721  0570                     l1752:	
   722                           ;main.c: 57: }
   723                           
   724                           
   725                           ;main.c: 58: else{
   726                           ;main.c: 59: moveDeg(180);
   727  0570  3000               	movlw	0
   728  0571  1283               	bcf	3,5	;RP0=0, select bank0
   729  0572  1303               	bcf	3,6	;RP1=0, select bank0
   730  0573  00ED               	movwf	moveDeg@deg
   731  0574  3034               	movlw	52
   732  0575  00EE               	movwf	moveDeg@deg+1
   733  0576  3043               	movlw	67
   734  0577                     L1:	
   735  0577  00EF               	movwf	moveDeg@deg+2
   736  0578  120A  118A  2137  120A  118A  	fcall	_moveDeg
   737                           
   738                           ;main.c: 60: }
   739                           ;main.c: 61: motorToggle = !motorToggle;
   740  057D  3001               	movlw	(0+1) shl (_motorToggle& (0+7))
   741  057E  06F0               	xorwf	_motorToggle/(0+8),f
   742                           
   743                           ;main.c: 62: pb2Pressed = 0;
   744  057F  12F0               	bcf	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
   745  0580                     l1758:	
   746                           
   747                           ;main.c: 63: }
   748                           ;main.c: 64: _delay((unsigned long)((20)*(20000000/4000.0)));
   749  0580  3082               	movlw	130
   750  0581  1683               	bsf	3,5	;RP0=1, select bank1
   751  0582  1303               	bcf	3,6	;RP1=0, select bank1
   752  0583  00BC               	movwf	(??_main^(0+128)+1)
   753  0584  30DD               	movlw	221
   754  0585  00BB               	movwf	??_main^(0+128)
   755  0586                     u2367:	
   756  0586  0BBB               	decfsz	??_main^(0+128),f
   757  0587  2D86               	goto	u2367
   758  0588  0BBC               	decfsz	(??_main^(0+128)+1),f
   759  0589  2D86               	goto	u2367
   760  058A  2D8B               	nop2
   761  058B  2D4B               	goto	l1734
   762  058C                     __end_of_main:	
   763                           
   764                           	psect	text1
   765  0137                     __ptext1:	
   766 ;; *************** function _moveDeg *****************
   767 ;; Defined at:
   768 ;;		line 46 in file "motor.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;  deg             3   77[BANK0 ] void 
   771 ;; Auto vars:     Size  Location     Type
   772 ;;  stepsToMove     1   10[BANK1 ] unsigned char 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       3       0       0       0
   783 ;;      Locals:         0       0      10       0       0
   784 ;;      Temps:          0       0       1       0       0
   785 ;;      Totals:         0       3      11       0       0
   786 ;;Total ram usage:       14 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    6
   789 ;; This function calls:
   790 ;;		___ftdiv
   791 ;;		___ftge
   792 ;;		___ftneg
   793 ;;		___fttol
   794 ;;		_move
   795 ;;		_round
   796 ;; This function is called by:
   797 ;;		_main
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _moveDeg
   803  0137                     _moveDeg:	
   804                           
   805                           ;motor.c: 47: char stepsToMove;
   806                           ;motor.c: 48: if(deg<0){
   807                           
   808                           ;incstack = 0
   809                           ; Regs used in _moveDeg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   810  0137  1283               	bcf	3,5	;RP0=0, select bank0
   811  0138  1303               	bcf	3,6	;RP1=0, select bank0
   812  0139  086D               	movf	moveDeg@deg,w
   813  013A  00A0               	movwf	___ftge@ff1
   814  013B  086E               	movf	moveDeg@deg+1,w
   815  013C  00A1               	movwf	___ftge@ff1+1
   816  013D  086F               	movf	moveDeg@deg+2,w
   817  013E  00A2               	movwf	___ftge@ff1+2
   818  013F  3000               	movlw	0
   819  0140  00A3               	movwf	___ftge@ff2
   820  0141  3000               	movlw	0
   821  0142  00A4               	movwf	___ftge@ff2+1
   822  0143  3000               	movlw	0
   823  0144  00A5               	movwf	___ftge@ff2+2
   824  0145  120A  118A  249D  120A  118A  	fcall	___ftge
   825  014A  1803               	btfsc	3,0
   826  014B  29CC               	goto	l1726
   827                           
   828                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   829  014C  1283               	bcf	3,5	;RP0=0, select bank0
   830  014D  1303               	bcf	3,6	;RP1=0, select bank0
   831  014E  086D               	movf	moveDeg@deg,w
   832  014F  00B0               	movwf	___ftneg@f1
   833  0150  086E               	movf	moveDeg@deg+1,w
   834  0151  00B1               	movwf	___ftneg@f1+1
   835  0152  086F               	movf	moveDeg@deg+2,w
   836  0153  00B2               	movwf	___ftneg@f1+2
   837  0154  120A  118A  268C  120A  118A  	fcall	___ftneg
   838  0159  1283               	bcf	3,5	;RP0=0, select bank0
   839  015A  1303               	bcf	3,6	;RP1=0, select bank0
   840  015B  0830               	movf	?___ftneg,w
   841  015C  00B6               	movwf	___ftdiv@f1
   842  015D  0831               	movf	?___ftneg+1,w
   843  015E  00B7               	movwf	___ftdiv@f1+1
   844  015F  0832               	movf	?___ftneg+2,w
   845  0160  00B8               	movwf	___ftdiv@f1+2
   846  0161  3000               	movlw	0
   847  0162  00B3               	movwf	___ftdiv@f2
   848  0163  3070               	movlw	112
   849  0164  00B4               	movwf	___ftdiv@f2+1
   850  0165  3040               	movlw	64
   851  0166  00B5               	movwf	___ftdiv@f2+2
   852  0167  120A  118A  2226  120A  118A  	fcall	___ftdiv
   853  016C  1283               	bcf	3,5	;RP0=0, select bank0
   854  016D  1303               	bcf	3,6	;RP1=0, select bank0
   855  016E  0833               	movf	?___ftdiv,w
   856  016F  1683               	bsf	3,5	;RP0=1, select bank1
   857  0170  1303               	bcf	3,6	;RP1=0, select bank1
   858  0171  00B1               	movwf	_moveDeg$535^(0+128)
   859  0172  1283               	bcf	3,5	;RP0=0, select bank0
   860  0173  1303               	bcf	3,6	;RP1=0, select bank0
   861  0174  0834               	movf	?___ftdiv+1,w
   862  0175  1683               	bsf	3,5	;RP0=1, select bank1
   863  0176  1303               	bcf	3,6	;RP1=0, select bank1
   864  0177  00B2               	movwf	(_moveDeg$535+1)^(0+128)
   865  0178  1283               	bcf	3,5	;RP0=0, select bank0
   866  0179  1303               	bcf	3,6	;RP1=0, select bank0
   867  017A  0835               	movf	?___ftdiv+2,w
   868  017B  1683               	bsf	3,5	;RP0=1, select bank1
   869  017C  1303               	bcf	3,6	;RP1=0, select bank1
   870  017D  00B3               	movwf	(_moveDeg$535+2)^(0+128)
   871                           
   872                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   873  017E  0831               	movf	_moveDeg$535^(0+128),w
   874  017F  1283               	bcf	3,5	;RP0=0, select bank0
   875  0180  1303               	bcf	3,6	;RP1=0, select bank0
   876  0181  00E7               	movwf	round@x
   877  0182  1683               	bsf	3,5	;RP0=1, select bank1
   878  0183  1303               	bcf	3,6	;RP1=0, select bank1
   879  0184  0832               	movf	(_moveDeg$535+1)^(0+128),w
   880  0185  1283               	bcf	3,5	;RP0=0, select bank0
   881  0186  1303               	bcf	3,6	;RP1=0, select bank0
   882  0187  00E8               	movwf	round@x+1
   883  0188  1683               	bsf	3,5	;RP0=1, select bank1
   884  0189  1303               	bcf	3,6	;RP1=0, select bank1
   885  018A  0833               	movf	(_moveDeg$535+2)^(0+128),w
   886  018B  1283               	bcf	3,5	;RP0=0, select bank0
   887  018C  1303               	bcf	3,6	;RP1=0, select bank0
   888  018D  00E9               	movwf	round@x+2
   889  018E  120A  118A  243D  120A  118A  	fcall	_round
   890  0193  1283               	bcf	3,5	;RP0=0, select bank0
   891  0194  1303               	bcf	3,6	;RP1=0, select bank0
   892  0195  0867               	movf	?_round,w
   893  0196  1683               	bsf	3,5	;RP0=1, select bank1
   894  0197  1303               	bcf	3,6	;RP1=0, select bank1
   895  0198  00B4               	movwf	_moveDeg$536^(0+128)
   896  0199  1283               	bcf	3,5	;RP0=0, select bank0
   897  019A  1303               	bcf	3,6	;RP1=0, select bank0
   898  019B  0868               	movf	?_round+1,w
   899  019C  1683               	bsf	3,5	;RP0=1, select bank1
   900  019D  1303               	bcf	3,6	;RP1=0, select bank1
   901  019E  00B5               	movwf	(_moveDeg$536+1)^(0+128)
   902  019F  1283               	bcf	3,5	;RP0=0, select bank0
   903  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   904  01A1  0869               	movf	?_round+2,w
   905  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   906  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   907  01A4  00B6               	movwf	(_moveDeg$536+2)^(0+128)
   908                           
   909                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   910  01A5  0834               	movf	_moveDeg$536^(0+128),w
   911  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   912  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   913  01A8  00C3               	movwf	___fttol@f1
   914  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   915  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   916  01AB  0835               	movf	(_moveDeg$536+1)^(0+128),w
   917  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   918  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   919  01AE  00C4               	movwf	___fttol@f1+1
   920  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   921  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   922  01B1  0836               	movf	(_moveDeg$536+2)^(0+128),w
   923  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   924  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   925  01B4  00C5               	movwf	___fttol@f1+2
   926  01B5  120A  118A  22DE  120A  118A  	fcall	___fttol
   927  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   928  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   929  01BC  0843               	movf	?___fttol,w
   930  01BD  1683               	bsf	3,5	;RP0=1, select bank1
   931  01BE  1303               	bcf	3,6	;RP1=0, select bank1
   932  01BF  00B0               	movwf	??_moveDeg^(0+128)
   933  01C0  0830               	movf	??_moveDeg^(0+128),w
   934  01C1  00BA               	movwf	moveDeg@stepsToMove^(0+128)
   935                           
   936                           ;motor.c: 50: move(stepsToMove,0);
   937  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   938  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   939  01C4  01A0               	clrf	move@direction
   940  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   941  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   942  01C7  083A               	movf	moveDeg@stepsToMove^(0+128),w
   943  01C8  120A  118A  23DA   	fcall	_move
   944                           
   945                           ;motor.c: 51: }
   946  01CB  0008               	return
   947  01CC                     l1726:	
   948                           
   949                           ;motor.c: 52: else{
   950                           ;motor.c: 53: stepsToMove = (char) round(deg/(7.5/2.0));
   951  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   952  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   953  01CE  086D               	movf	moveDeg@deg,w
   954  01CF  00B6               	movwf	___ftdiv@f1
   955  01D0  086E               	movf	moveDeg@deg+1,w
   956  01D1  00B7               	movwf	___ftdiv@f1+1
   957  01D2  086F               	movf	moveDeg@deg+2,w
   958  01D3  00B8               	movwf	___ftdiv@f1+2
   959  01D4  3000               	movlw	0
   960  01D5  00B3               	movwf	___ftdiv@f2
   961  01D6  3070               	movlw	112
   962  01D7  00B4               	movwf	___ftdiv@f2+1
   963  01D8  3040               	movlw	64
   964  01D9  00B5               	movwf	___ftdiv@f2+2
   965  01DA  120A  118A  2226  120A  118A  	fcall	___ftdiv
   966  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   967  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   968  01E1  0833               	movf	?___ftdiv,w
   969  01E2  00E7               	movwf	round@x
   970  01E3  0834               	movf	?___ftdiv+1,w
   971  01E4  00E8               	movwf	round@x+1
   972  01E5  0835               	movf	?___ftdiv+2,w
   973  01E6  00E9               	movwf	round@x+2
   974  01E7  120A  118A  243D  120A  118A  	fcall	_round
   975  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   976  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   977  01EE  0867               	movf	?_round,w
   978  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   979  01F0  1303               	bcf	3,6	;RP1=0, select bank1
   980  01F1  00B7               	movwf	_moveDeg$537^(0+128)
   981  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   982  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   983  01F4  0868               	movf	?_round+1,w
   984  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   985  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   986  01F7  00B8               	movwf	(_moveDeg$537+1)^(0+128)
   987  01F8  1283               	bcf	3,5	;RP0=0, select bank0
   988  01F9  1303               	bcf	3,6	;RP1=0, select bank0
   989  01FA  0869               	movf	?_round+2,w
   990  01FB  1683               	bsf	3,5	;RP0=1, select bank1
   991  01FC  1303               	bcf	3,6	;RP1=0, select bank1
   992  01FD  00B9               	movwf	(_moveDeg$537+2)^(0+128)
   993                           
   994                           ;motor.c: 52: else{
   995                           ;motor.c: 53: stepsToMove = (char) round(deg/(7.5/2.0));
   996  01FE  0837               	movf	_moveDeg$537^(0+128),w
   997  01FF  1283               	bcf	3,5	;RP0=0, select bank0
   998  0200  1303               	bcf	3,6	;RP1=0, select bank0
   999  0201  00C3               	movwf	___fttol@f1
  1000  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1001  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1002  0204  0838               	movf	(_moveDeg$537+1)^(0+128),w
  1003  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1004  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1005  0207  00C4               	movwf	___fttol@f1+1
  1006  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1007  0209  1303               	bcf	3,6	;RP1=0, select bank1
  1008  020A  0839               	movf	(_moveDeg$537+2)^(0+128),w
  1009  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1010  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1011  020D  00C5               	movwf	___fttol@f1+2
  1012  020E  120A  118A  22DE  120A  118A  	fcall	___fttol
  1013  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1014  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1015  0215  0843               	movf	?___fttol,w
  1016  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1017  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1018  0218  00B0               	movwf	??_moveDeg^(0+128)
  1019  0219  0830               	movf	??_moveDeg^(0+128),w
  1020  021A  00BA               	movwf	moveDeg@stepsToMove^(0+128)
  1021                           
  1022                           ;motor.c: 54: move(stepsToMove,1);
  1023  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1024  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1025  021D  01A0               	clrf	move@direction
  1026  021E  0AA0               	incf	move@direction,f
  1027  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0221  083A               	movf	moveDeg@stepsToMove^(0+128),w
  1030  0222  120A  118A  23DA   	fcall	_move
  1031  0225  0008               	return
  1032  0226                     __end_of_moveDeg:	
  1033                           
  1034                           	psect	text2
  1035  043D                     __ptext2:	
  1036 ;; *************** function _round *****************
  1037 ;; Defined at:
  1038 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  x               3   71[BANK0 ] void 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  f               3   74[BANK0 ] void 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  3   71[BANK0 ] void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1052 ;;      Params:         0       3       0       0       0
  1053 ;;      Locals:         0       3       0       0       0
  1054 ;;      Temps:          0       0       0       0       0
  1055 ;;      Totals:         0       6       0       0       0
  1056 ;;Total ram usage:        6 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    5
  1059 ;; This function calls:
  1060 ;;		___ftadd
  1061 ;;		___ftneg
  1062 ;;		_trunc
  1063 ;; This function is called by:
  1064 ;;		_moveDeg
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _round
  1070  043D                     _round:	
  1071                           
  1072                           ;incstack = 0
  1073                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1074  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1075  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1076  043F  0867               	movf	round@x,w
  1077  0440  00DA               	movwf	___ftadd@f1
  1078  0441  0868               	movf	round@x+1,w
  1079  0442  00DB               	movwf	___ftadd@f1+1
  1080  0443  0869               	movf	round@x+2,w
  1081  0444  00DC               	movwf	___ftadd@f1+2
  1082  0445  0867               	movf	round@x,w
  1083  0446  00D1               	movwf	trunc@x
  1084  0447  0868               	movf	round@x+1,w
  1085  0448  00D2               	movwf	trunc@x+1
  1086  0449  0869               	movf	round@x+2,w
  1087  044A  00D3               	movwf	trunc@x+2
  1088  044B  120A  118A  24FC  120A  118A  	fcall	_trunc
  1089  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0452  0851               	movf	?_trunc,w
  1092  0453  00B0               	movwf	___ftneg@f1
  1093  0454  0852               	movf	?_trunc+1,w
  1094  0455  00B1               	movwf	___ftneg@f1+1
  1095  0456  0853               	movf	?_trunc+2,w
  1096  0457  00B2               	movwf	___ftneg@f1+2
  1097  0458  120A  118A  268C  120A  118A  	fcall	___ftneg
  1098  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1099  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1100  045F  0830               	movf	?___ftneg,w
  1101  0460  00DD               	movwf	___ftadd@f2
  1102  0461  0831               	movf	?___ftneg+1,w
  1103  0462  00DE               	movwf	___ftadd@f2+1
  1104  0463  0832               	movf	?___ftneg+2,w
  1105  0464  00DF               	movwf	___ftadd@f2+2
  1106  0465  120A  118A  202E  120A  118A  	fcall	___ftadd
  1107  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1108  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1109  046C  085A               	movf	?___ftadd,w
  1110  046D  00EA               	movwf	round@f
  1111  046E  085B               	movf	?___ftadd+1,w
  1112  046F  00EB               	movwf	round@f+1
  1113  0470  085C               	movf	?___ftadd+2,w
  1114  0471  00EC               	movwf	round@f+2
  1115  0472  086A               	movf	round@f,w
  1116  0473  00DA               	movwf	___ftadd@f1
  1117  0474  086B               	movf	round@f+1,w
  1118  0475  00DB               	movwf	___ftadd@f1+1
  1119  0476  086C               	movf	round@f+2,w
  1120  0477  00DC               	movwf	___ftadd@f1+2
  1121  0478  0867               	movf	round@x,w
  1122  0479  00DD               	movwf	___ftadd@f2
  1123  047A  0868               	movf	round@x+1,w
  1124  047B  00DE               	movwf	___ftadd@f2+1
  1125  047C  0869               	movf	round@x+2,w
  1126  047D  00DF               	movwf	___ftadd@f2+2
  1127  047E  120A  118A  202E  120A  118A  	fcall	___ftadd
  1128  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0485  085A               	movf	?___ftadd,w
  1131  0486  00E7               	movwf	round@x
  1132  0487  085B               	movf	?___ftadd+1,w
  1133  0488  00E8               	movwf	round@x+1
  1134  0489  085C               	movf	?___ftadd+2,w
  1135  048A  00E9               	movwf	round@x+2
  1136  048B  0867               	movf	round@x,w
  1137  048C  00D1               	movwf	trunc@x
  1138  048D  0868               	movf	round@x+1,w
  1139  048E  00D2               	movwf	trunc@x+1
  1140  048F  0869               	movf	round@x+2,w
  1141  0490  00D3               	movwf	trunc@x+2
  1142  0491  120A  118A  24FC   	fcall	_trunc
  1143  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1144  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1145  0496  0851               	movf	?_trunc,w
  1146  0497  00E7               	movwf	?_round
  1147  0498  0852               	movf	?_trunc+1,w
  1148  0499  00E8               	movwf	?_round+1
  1149  049A  0853               	movf	?_trunc+2,w
  1150  049B  00E9               	movwf	?_round+2
  1151  049C  0008               	return
  1152  049D                     __end_of_round:	
  1153                           
  1154                           	psect	text3
  1155  04FC                     __ptext3:	
  1156 ;; *************** function _trunc *****************
  1157 ;; Defined at:
  1158 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;  x               3   49[BANK0 ] void 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  i               3   53[BANK0 ] void 
  1163 ;;  expon           2   56[BANK0 ] int 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  3   49[BANK0 ] int 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       3       0       0       0
  1174 ;;      Locals:         0       5       0       0       0
  1175 ;;      Temps:          0       1       0       0       0
  1176 ;;      Totals:         0       9       0       0       0
  1177 ;;Total ram usage:        9 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    4
  1180 ;; This function calls:
  1181 ;;		___altoft
  1182 ;;		___fttol
  1183 ;;		_frexp
  1184 ;; This function is called by:
  1185 ;;		_round
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           
  1190                           ;psect for function _trunc
  1191  04FC                     _trunc:	
  1192                           
  1193                           ;incstack = 0
  1194                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1195  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1196  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1197  04FE  0851               	movf	trunc@x,w
  1198  04FF  00A0               	movwf	frexp@value
  1199  0500  0852               	movf	trunc@x+1,w
  1200  0501  00A1               	movwf	frexp@value+1
  1201  0502  0853               	movf	trunc@x+2,w
  1202  0503  00A2               	movwf	frexp@value+2
  1203  0504  3058               	movlw	(low (trunc@expon| 0))& (0+255)
  1204  0505  00D4               	movwf	??_trunc
  1205  0506  0854               	movf	??_trunc,w
  1206  0507  00A3               	movwf	frexp@eptr
  1207  0508  120A  118A  25CE  120A  118A  	fcall	_frexp
  1208  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1209  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1210  050F  1FD9               	btfss	trunc@expon+1,7
  1211  0510  2D18               	goto	l1592
  1212  0511  3000               	movlw	0
  1213  0512  00D1               	movwf	?_trunc
  1214  0513  3000               	movlw	0
  1215  0514  00D2               	movwf	?_trunc+1
  1216  0515  3000               	movlw	0
  1217  0516  00D3               	movwf	?_trunc+2
  1218  0517  0008               	return
  1219  0518                     l1592:	
  1220  0518  3000               	movlw	0
  1221  0519  0259               	subwf	trunc@expon+1,w
  1222  051A  3015               	movlw	21
  1223  051B  1903               	skipnz
  1224  051C  0258               	subwf	trunc@expon,w
  1225  051D  1803               	btfsc	3,0
  1226  051E  0008               	return
  1227  051F  0851               	movf	trunc@x,w
  1228  0520  00C3               	movwf	___fttol@f1
  1229  0521  0852               	movf	trunc@x+1,w
  1230  0522  00C4               	movwf	___fttol@f1+1
  1231  0523  0853               	movf	trunc@x+2,w
  1232  0524  00C5               	movwf	___fttol@f1+2
  1233  0525  120A  118A  22DE  120A  118A  	fcall	___fttol
  1234  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1235  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1236  052C  0846               	movf	?___fttol+3,w
  1237  052D  00AB               	movwf	___altoft@c+3
  1238  052E  0845               	movf	?___fttol+2,w
  1239  052F  00AA               	movwf	___altoft@c+2
  1240  0530  0844               	movf	?___fttol+1,w
  1241  0531  00A9               	movwf	___altoft@c+1
  1242  0532  0843               	movf	?___fttol,w
  1243  0533  00A8               	movwf	___altoft@c
  1244  0534  120A  118A  258C   	fcall	___altoft
  1245  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1246  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1247  0539  0828               	movf	?___altoft,w
  1248  053A  00D5               	movwf	trunc@i
  1249  053B  0829               	movf	?___altoft+1,w
  1250  053C  00D6               	movwf	trunc@i+1
  1251  053D  082A               	movf	?___altoft+2,w
  1252  053E  00D7               	movwf	trunc@i+2
  1253  053F  0855               	movf	trunc@i,w
  1254  0540  00D1               	movwf	?_trunc
  1255  0541  0856               	movf	trunc@i+1,w
  1256  0542  00D2               	movwf	?_trunc+1
  1257  0543  0857               	movf	trunc@i+2,w
  1258  0544  00D3               	movwf	?_trunc+2
  1259  0545  0008               	return
  1260  0546                     __end_of_trunc:	
  1261                           
  1262                           	psect	text4
  1263  05CE                     __ptext4:	
  1264 ;; *************** function _frexp *****************
  1265 ;; Defined at:
  1266 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  value           3    0[BANK0 ] int 
  1269 ;;  eptr            1    3[BANK0 ] PTR int 
  1270 ;;		 -> trunc@expon(2), 
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  3    0[BANK0 ] PTR int 
  1275 ;; Registers used:
  1276 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       4       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       2       0       0       0
  1285 ;;      Totals:         0       6       0       0       0
  1286 ;;Total ram usage:        6 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    2
  1289 ;; This function calls:
  1290 ;;		Nothing
  1291 ;; This function is called by:
  1292 ;;		_trunc
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _frexp
  1298  05CE                     _frexp:	
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1302  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1303  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1304  05D0  0822               	movf	frexp@value+2,w
  1305  05D1  0421               	iorwf	frexp@value+1,w
  1306  05D2  0420               	iorwf	frexp@value,w
  1307  05D3  1D03               	skipz
  1308  05D4  2DDC               	goto	l1496
  1309  05D5  0823               	movf	frexp@eptr,w
  1310  05D6  0084               	movwf	4
  1311  05D7  1383               	bcf	3,7	;select IRP bank0
  1312  05D8  0180               	clrf	0
  1313  05D9  0A84               	incf	4,f
  1314  05DA  0180               	clrf	0
  1315                           
  1316                           ;	Return value of _frexp is never used
  1317  05DB  0008               	return
  1318  05DC                     l1496:	
  1319  05DC  0822               	movf	frexp@value+2,w
  1320  05DD  397F               	andlw	127
  1321  05DE  00A4               	movwf	??_frexp
  1322  05DF  01A5               	clrf	??_frexp+1
  1323  05E0  1003               	clrc
  1324  05E1  0DA4               	rlf	??_frexp,f
  1325  05E2  0DA5               	rlf	??_frexp+1,f
  1326  05E3  0823               	movf	frexp@eptr,w
  1327  05E4  0084               	movwf	4
  1328  05E5  0824               	movf	??_frexp,w
  1329  05E6  1383               	bcf	3,7	;select IRP bank0
  1330  05E7  0080               	movwf	0
  1331  05E8  0A84               	incf	4,f
  1332  05E9  0825               	movf	??_frexp+1,w
  1333  05EA  0080               	movwf	0
  1334  05EB  0D21               	rlf	frexp@value+1,w
  1335  05EC  0D21               	rlf	frexp@value+1,w
  1336  05ED  3901               	andlw	1
  1337  05EE  00A4               	movwf	??_frexp
  1338  05EF  01A5               	clrf	??_frexp+1
  1339  05F0  0823               	movf	frexp@eptr,w
  1340  05F1  0084               	movwf	4
  1341  05F2  0824               	movf	??_frexp,w
  1342  05F3  0480               	iorwf	0,f
  1343  05F4  0A84               	incf	4,f
  1344  05F5  0825               	movf	??_frexp+1,w
  1345  05F6  0480               	iorwf	0,f
  1346  05F7  0823               	movf	frexp@eptr,w
  1347  05F8  0084               	movwf	4
  1348  05F9  3082               	movlw	130
  1349  05FA  0780               	addwf	0,f
  1350  05FB  0F84               	incfsz	4,f
  1351  05FC  0800               	movf	0,w
  1352  05FD  1803               	skipnc
  1353  05FE  0A00               	incf	0,w
  1354  05FF  00FF               	movwf	127
  1355  0600  30FF               	movlw	255
  1356  0601  077F               	addwf	127,w
  1357  0602  0080               	movwf	0
  1358  0603  0384               	decf	4,f
  1359  0604  0822               	movf	frexp@value+2,w
  1360  0605  3980               	andlw	-128
  1361  0606  383F               	iorlw	63
  1362  0607  00A2               	movwf	frexp@value+2
  1363  0608  13A1               	bcf	frexp@value+1,7
  1364  0609  0008               	return
  1365  060A                     __end_of_frexp:	
  1366                           ;	Return value of _frexp is never used
  1367                           
  1368                           
  1369                           	psect	text5
  1370  02DE                     __ptext5:	
  1371 ;; *************** function ___fttol *****************
  1372 ;; Defined at:
  1373 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;  f1              3   35[BANK0 ] float 
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;  lval            4   44[BANK0 ] unsigned long 
  1378 ;;  exp1            1   48[BANK0 ] unsigned char 
  1379 ;;  sign1           1   43[BANK0 ] unsigned char 
  1380 ;; Return value:  Size  Location     Type
  1381 ;;                  4   35[BANK0 ] long 
  1382 ;; Registers used:
  1383 ;;		wreg, status,2, status,0
  1384 ;; Tracked objects:
  1385 ;;		On entry : 0/0
  1386 ;;		On exit  : 0/0
  1387 ;;		Unchanged: 0/0
  1388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1389 ;;      Params:         0       4       0       0       0
  1390 ;;      Locals:         0       6       0       0       0
  1391 ;;      Temps:          0       4       0       0       0
  1392 ;;      Totals:         0      14       0       0       0
  1393 ;;Total ram usage:       14 bytes
  1394 ;; Hardware stack levels used:    1
  1395 ;; Hardware stack levels required when called:    2
  1396 ;; This function calls:
  1397 ;;		Nothing
  1398 ;; This function is called by:
  1399 ;;		_moveDeg
  1400 ;;		_trunc
  1401 ;; This function uses a non-reentrant model
  1402 ;;
  1403                           
  1404                           
  1405                           ;psect for function ___fttol
  1406  02DE                     ___fttol:	
  1407                           
  1408                           ;incstack = 0
  1409                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1410  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1411  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1412  02E0  0843               	movf	___fttol@f1,w
  1413  02E1  00C7               	movwf	??___fttol
  1414  02E2  0844               	movf	___fttol@f1+1,w
  1415  02E3  00C8               	movwf	??___fttol+1
  1416  02E4  0845               	movf	___fttol@f1+2,w
  1417  02E5  00C9               	movwf	??___fttol+2
  1418  02E6  1003               	clrc
  1419  02E7  0D48               	rlf	??___fttol+1,w
  1420  02E8  0D49               	rlf	??___fttol+2,w
  1421  02E9  00CA               	movwf	??___fttol+3
  1422  02EA  084A               	movf	??___fttol+3,w
  1423  02EB  00D0               	movwf	___fttol@exp1
  1424  02EC  0850               	movf	___fttol@exp1,w
  1425  02ED  1D03               	btfss	3,2
  1426  02EE  2AF8               	goto	l1142
  1427  02EF  3000               	movlw	0
  1428  02F0  00C6               	movwf	?___fttol+3
  1429  02F1  3000               	movlw	0
  1430  02F2  00C5               	movwf	?___fttol+2
  1431  02F3  3000               	movlw	0
  1432  02F4  00C4               	movwf	?___fttol+1
  1433  02F5  3000               	movlw	0
  1434  02F6  00C3               	movwf	?___fttol
  1435  02F7  0008               	return
  1436  02F8                     l1142:	
  1437  02F8  0843               	movf	___fttol@f1,w
  1438  02F9  00C7               	movwf	??___fttol
  1439  02FA  0844               	movf	___fttol@f1+1,w
  1440  02FB  00C8               	movwf	??___fttol+1
  1441  02FC  0845               	movf	___fttol@f1+2,w
  1442  02FD  00C9               	movwf	??___fttol+2
  1443  02FE  3017               	movlw	23
  1444  02FF                     u1075:	
  1445  02FF  1003               	clrc
  1446  0300  0CC9               	rrf	??___fttol+2,f
  1447  0301  0CC8               	rrf	??___fttol+1,f
  1448  0302  0CC7               	rrf	??___fttol,f
  1449  0303  3EFF               	addlw	-1
  1450  0304  1D03               	skipz
  1451  0305  2AFF               	goto	u1075
  1452  0306  0847               	movf	??___fttol,w
  1453  0307  00CA               	movwf	??___fttol+3
  1454  0308  084A               	movf	??___fttol+3,w
  1455  0309  00CB               	movwf	___fttol@sign1
  1456  030A  17C4               	bsf	___fttol@f1+1,7
  1457  030B  30FF               	movlw	255
  1458  030C  05C3               	andwf	___fttol@f1,f
  1459  030D  30FF               	movlw	255
  1460  030E  05C4               	andwf	___fttol@f1+1,f
  1461  030F  3000               	movlw	0
  1462  0310  05C5               	andwf	___fttol@f1+2,f
  1463  0311  0843               	movf	___fttol@f1,w
  1464  0312  00CC               	movwf	___fttol@lval
  1465  0313  0844               	movf	___fttol@f1+1,w
  1466  0314  00CD               	movwf	___fttol@lval+1
  1467  0315  0845               	movf	___fttol@f1+2,w
  1468  0316  00CE               	movwf	___fttol@lval+2
  1469  0317  01CF               	clrf	___fttol@lval+3
  1470  0318  308E               	movlw	142
  1471  0319  02D0               	subwf	___fttol@exp1,f
  1472  031A  1FD0               	btfss	___fttol@exp1,7
  1473  031B  2B3A               	goto	l1162
  1474  031C  0850               	movf	___fttol@exp1,w
  1475  031D  3A80               	xorlw	128
  1476  031E  3E8F               	addlw	143
  1477  031F  1803               	skipnc
  1478  0320  2B2A               	goto	l1160
  1479  0321  3000               	movlw	0
  1480  0322  00C6               	movwf	?___fttol+3
  1481  0323  3000               	movlw	0
  1482  0324  00C5               	movwf	?___fttol+2
  1483  0325  3000               	movlw	0
  1484  0326  00C4               	movwf	?___fttol+1
  1485  0327  3000               	movlw	0
  1486  0328  00C3               	movwf	?___fttol
  1487  0329  0008               	return
  1488  032A                     l1160:	
  1489  032A  3001               	movlw	1
  1490  032B                     u1105:	
  1491  032B  1003               	clrc
  1492  032C  0CCF               	rrf	___fttol@lval+3,f
  1493  032D  0CCE               	rrf	___fttol@lval+2,f
  1494  032E  0CCD               	rrf	___fttol@lval+1,f
  1495  032F  0CCC               	rrf	___fttol@lval,f
  1496  0330  3EFF               	addlw	-1
  1497  0331  1D03               	skipz
  1498  0332  2B2B               	goto	u1105
  1499  0333  3001               	movlw	1
  1500  0334  00C7               	movwf	??___fttol
  1501  0335  0847               	movf	??___fttol,w
  1502  0336  07D0               	addwf	___fttol@exp1,f
  1503  0337  1903               	btfsc	3,2
  1504  0338  2B55               	goto	l1170
  1505  0339  2B2A               	goto	l1160
  1506  033A                     l1162:	
  1507  033A  3018               	movlw	24
  1508  033B  0250               	subwf	___fttol@exp1,w
  1509  033C  1C03               	skipc
  1510  033D  2B52               	goto	l480
  1511  033E  3000               	movlw	0
  1512  033F  00C6               	movwf	?___fttol+3
  1513  0340  3000               	movlw	0
  1514  0341  00C5               	movwf	?___fttol+2
  1515  0342  3000               	movlw	0
  1516  0343  00C4               	movwf	?___fttol+1
  1517  0344  3000               	movlw	0
  1518  0345  00C3               	movwf	?___fttol
  1519  0346  0008               	return
  1520  0347                     l1168:	
  1521  0347  3001               	movlw	1
  1522  0348  00C7               	movwf	??___fttol
  1523  0349                     u1135:	
  1524  0349  1003               	clrc
  1525  034A  0DCC               	rlf	___fttol@lval,f
  1526  034B  0DCD               	rlf	___fttol@lval+1,f
  1527  034C  0DCE               	rlf	___fttol@lval+2,f
  1528  034D  0DCF               	rlf	___fttol@lval+3,f
  1529  034E  0BC7               	decfsz	??___fttol,f
  1530  034F  2B49               	goto	u1135
  1531  0350  3001               	movlw	1
  1532  0351  02D0               	subwf	___fttol@exp1,f
  1533  0352                     l480:	
  1534  0352  0850               	movf	___fttol@exp1,w
  1535  0353  1D03               	btfss	3,2
  1536  0354  2B47               	goto	l1168
  1537  0355                     l1170:	
  1538  0355  084B               	movf	___fttol@sign1,w
  1539  0356  1903               	btfsc	3,2
  1540  0357  2B63               	goto	l1174
  1541  0358  09CC               	comf	___fttol@lval,f
  1542  0359  09CD               	comf	___fttol@lval+1,f
  1543  035A  09CE               	comf	___fttol@lval+2,f
  1544  035B  09CF               	comf	___fttol@lval+3,f
  1545  035C  0ACC               	incf	___fttol@lval,f
  1546  035D  1903               	skipnz
  1547  035E  0ACD               	incf	___fttol@lval+1,f
  1548  035F  1903               	skipnz
  1549  0360  0ACE               	incf	___fttol@lval+2,f
  1550  0361  1903               	skipnz
  1551  0362  0ACF               	incf	___fttol@lval+3,f
  1552  0363                     l1174:	
  1553  0363  084F               	movf	___fttol@lval+3,w
  1554  0364  00C6               	movwf	?___fttol+3
  1555  0365  084E               	movf	___fttol@lval+2,w
  1556  0366  00C5               	movwf	?___fttol+2
  1557  0367  084D               	movf	___fttol@lval+1,w
  1558  0368  00C4               	movwf	?___fttol+1
  1559  0369  084C               	movf	___fttol@lval,w
  1560  036A  00C3               	movwf	?___fttol
  1561  036B  0008               	return
  1562  036C                     __end_of___fttol:	
  1563                           
  1564                           	psect	text6
  1565  058C                     __ptext6:	
  1566 ;; *************** function ___altoft *****************
  1567 ;; Defined at:
  1568 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  1569 ;; Parameters:    Size  Location     Type
  1570 ;;  c               4    8[BANK0 ] long 
  1571 ;; Auto vars:     Size  Location     Type
  1572 ;;  sign            1   15[BANK0 ] unsigned char 
  1573 ;;  exp             1   14[BANK0 ] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  3    8[BANK0 ] float 
  1576 ;; Registers used:
  1577 ;;		wreg, status,2, status,0, pclath, cstack
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1583 ;;      Params:         0       4       0       0       0
  1584 ;;      Locals:         0       2       0       0       0
  1585 ;;      Temps:          0       2       0       0       0
  1586 ;;      Totals:         0       8       0       0       0
  1587 ;;Total ram usage:        8 bytes
  1588 ;; Hardware stack levels used:    1
  1589 ;; Hardware stack levels required when called:    3
  1590 ;; This function calls:
  1591 ;;		___ftpack
  1592 ;; This function is called by:
  1593 ;;		_trunc
  1594 ;; This function uses a non-reentrant model
  1595 ;;
  1596                           
  1597                           
  1598                           ;psect for function ___altoft
  1599  058C                     ___altoft:	
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1603  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1604  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1605  058E  01AF               	clrf	___altoft@sign
  1606  058F  308E               	movlw	142
  1607  0590  00AC               	movwf	??___altoft
  1608  0591  082C               	movf	??___altoft,w
  1609  0592  00AE               	movwf	___altoft@exp
  1610  0593  1FAB               	btfss	___altoft@c+3,7
  1611  0594  2DA2               	goto	l1484
  1612  0595  09A8               	comf	___altoft@c,f
  1613  0596  09A9               	comf	___altoft@c+1,f
  1614  0597  09AA               	comf	___altoft@c+2,f
  1615  0598  09AB               	comf	___altoft@c+3,f
  1616  0599  0AA8               	incf	___altoft@c,f
  1617  059A  1903               	skipnz
  1618  059B  0AA9               	incf	___altoft@c+1,f
  1619  059C  1903               	skipnz
  1620  059D  0AAA               	incf	___altoft@c+2,f
  1621  059E  1903               	skipnz
  1622  059F  0AAB               	incf	___altoft@c+3,f
  1623  05A0  01AF               	clrf	___altoft@sign
  1624  05A1  0AAF               	incf	___altoft@sign,f
  1625  05A2                     l1484:	
  1626  05A2  30FF               	movlw	255
  1627  05A3  052B               	andwf	___altoft@c+3,w
  1628  05A4  1903               	btfsc	3,2
  1629  05A5  2DB4               	goto	l1486
  1630  05A6  3001               	movlw	1
  1631  05A7                     u1845:	
  1632  05A7  1003               	clrc
  1633  05A8  0CAB               	rrf	___altoft@c+3,f
  1634  05A9  0CAA               	rrf	___altoft@c+2,f
  1635  05AA  0CA9               	rrf	___altoft@c+1,f
  1636  05AB  0CA8               	rrf	___altoft@c,f
  1637  05AC  3EFF               	addlw	-1
  1638  05AD  1D03               	skipz
  1639  05AE  2DA7               	goto	u1845
  1640  05AF  3001               	movlw	1
  1641  05B0  00AC               	movwf	??___altoft
  1642  05B1  082C               	movf	??___altoft,w
  1643  05B2  07AE               	addwf	___altoft@exp,f
  1644  05B3  2DA2               	goto	l1484
  1645  05B4                     l1486:	
  1646  05B4  0828               	movf	___altoft@c,w
  1647  05B5  00A0               	movwf	___ftpack@arg
  1648  05B6  0829               	movf	___altoft@c+1,w
  1649  05B7  00A1               	movwf	___ftpack@arg+1
  1650  05B8  082A               	movf	___altoft@c+2,w
  1651  05B9  00A2               	movwf	___ftpack@arg+2
  1652  05BA  082E               	movf	___altoft@exp,w
  1653  05BB  00AC               	movwf	??___altoft
  1654  05BC  082C               	movf	??___altoft,w
  1655  05BD  00A3               	movwf	___ftpack@exp
  1656  05BE  082F               	movf	___altoft@sign,w
  1657  05BF  00AD               	movwf	??___altoft+1
  1658  05C0  082D               	movf	??___altoft+1,w
  1659  05C1  00A4               	movwf	___ftpack@sign
  1660  05C2  120A  118A  236C   	fcall	___ftpack
  1661  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1662  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1663  05C7  0820               	movf	?___ftpack,w
  1664  05C8  00A8               	movwf	?___altoft
  1665  05C9  0821               	movf	?___ftpack+1,w
  1666  05CA  00A9               	movwf	?___altoft+1
  1667  05CB  0822               	movf	?___ftpack+2,w
  1668  05CC  00AA               	movwf	?___altoft+2
  1669  05CD  0008               	return
  1670  05CE                     __end_of___altoft:	
  1671                           
  1672                           	psect	text7
  1673  068C                     __ptext7:	
  1674 ;; *************** function ___ftneg *****************
  1675 ;; Defined at:
  1676 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  f1              3   16[BANK0 ] float 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  3   16[BANK0 ] float 
  1683 ;; Registers used:
  1684 ;;		wreg
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1690 ;;      Params:         0       3       0       0       0
  1691 ;;      Locals:         0       0       0       0       0
  1692 ;;      Temps:          0       0       0       0       0
  1693 ;;      Totals:         0       3       0       0       0
  1694 ;;Total ram usage:        3 bytes
  1695 ;; Hardware stack levels used:    1
  1696 ;; Hardware stack levels required when called:    2
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_moveDeg
  1701 ;;		_round
  1702 ;; This function uses a non-reentrant model
  1703 ;;
  1704                           
  1705                           
  1706                           ;psect for function ___ftneg
  1707  068C                     ___ftneg:	
  1708                           
  1709                           ;incstack = 0
  1710                           ; Regs used in ___ftneg: [wreg]
  1711  068C  1283               	bcf	3,5	;RP0=0, select bank0
  1712  068D  1303               	bcf	3,6	;RP1=0, select bank0
  1713  068E  0832               	movf	___ftneg@f1+2,w
  1714  068F  0431               	iorwf	___ftneg@f1+1,w
  1715  0690  0430               	iorwf	___ftneg@f1,w
  1716  0691  1903               	skipnz
  1717  0692  0008               	return
  1718  0693  3080               	movlw	128
  1719  0694  06B2               	xorwf	___ftneg@f1+2,f
  1720  0695  0008               	return
  1721  0696                     __end_of___ftneg:	
  1722                           
  1723                           	psect	text8
  1724  002E                     __ptext8:	
  1725 ;; *************** function ___ftadd *****************
  1726 ;; Defined at:
  1727 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  f1              3   58[BANK0 ] float 
  1730 ;;  f2              3   61[BANK0 ] float 
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  exp1            1   70[BANK0 ] unsigned char 
  1733 ;;  exp2            1   69[BANK0 ] unsigned char 
  1734 ;;  sign            1   68[BANK0 ] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  3   58[BANK0 ] float 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, pclath, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1744 ;;      Params:         0       6       0       0       0
  1745 ;;      Locals:         0       3       0       0       0
  1746 ;;      Temps:          0       4       0       0       0
  1747 ;;      Totals:         0      13       0       0       0
  1748 ;;Total ram usage:       13 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    3
  1751 ;; This function calls:
  1752 ;;		___ftpack
  1753 ;; This function is called by:
  1754 ;;		_round
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function ___ftadd
  1760  002E                     ___ftadd:	
  1761                           
  1762                           ;incstack = 0
  1763                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1764  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1765  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1766  0030  085A               	movf	___ftadd@f1,w
  1767  0031  00E0               	movwf	??___ftadd
  1768  0032  085B               	movf	___ftadd@f1+1,w
  1769  0033  00E1               	movwf	??___ftadd+1
  1770  0034  085C               	movf	___ftadd@f1+2,w
  1771  0035  00E2               	movwf	??___ftadd+2
  1772  0036  1003               	clrc
  1773  0037  0D61               	rlf	??___ftadd+1,w
  1774  0038  0D62               	rlf	??___ftadd+2,w
  1775  0039  00E3               	movwf	??___ftadd+3
  1776  003A  0863               	movf	??___ftadd+3,w
  1777  003B  00E6               	movwf	___ftadd@exp1
  1778  003C  085D               	movf	___ftadd@f2,w
  1779  003D  00E0               	movwf	??___ftadd
  1780  003E  085E               	movf	___ftadd@f2+1,w
  1781  003F  00E1               	movwf	??___ftadd+1
  1782  0040  085F               	movf	___ftadd@f2+2,w
  1783  0041  00E2               	movwf	??___ftadd+2
  1784  0042  1003               	clrc
  1785  0043  0D61               	rlf	??___ftadd+1,w
  1786  0044  0D62               	rlf	??___ftadd+2,w
  1787  0045  00E3               	movwf	??___ftadd+3
  1788  0046  0863               	movf	??___ftadd+3,w
  1789  0047  00E5               	movwf	___ftadd@exp2
  1790  0048  0866               	movf	___ftadd@exp1,w
  1791  0049  1903               	btfsc	3,2
  1792  004A  2857               	goto	l1512
  1793  004B  0865               	movf	___ftadd@exp2,w
  1794  004C  0266               	subwf	___ftadd@exp1,w
  1795  004D  1803               	skipnc
  1796  004E  285E               	goto	l1516
  1797  004F  0366               	decf	___ftadd@exp1,w
  1798  0050  3AFF               	xorlw	255
  1799  0051  0765               	addwf	___ftadd@exp2,w
  1800  0052  00E0               	movwf	??___ftadd
  1801  0053  3019               	movlw	25
  1802  0054  0260               	subwf	??___ftadd,w
  1803  0055  1C03               	skipc
  1804  0056  285E               	goto	l1516
  1805  0057                     l1512:	
  1806  0057  085D               	movf	___ftadd@f2,w
  1807  0058  00DA               	movwf	?___ftadd
  1808  0059  085E               	movf	___ftadd@f2+1,w
  1809  005A  00DB               	movwf	?___ftadd+1
  1810  005B  085F               	movf	___ftadd@f2+2,w
  1811  005C  00DC               	movwf	?___ftadd+2
  1812  005D  0008               	return
  1813  005E                     l1516:	
  1814  005E  0865               	movf	___ftadd@exp2,w
  1815  005F  1903               	btfsc	3,2
  1816  0060  0008               	return
  1817  0061  0866               	movf	___ftadd@exp1,w
  1818  0062  0265               	subwf	___ftadd@exp2,w
  1819  0063  1803               	skipnc
  1820  0064  286D               	goto	l1522
  1821  0065  0365               	decf	___ftadd@exp2,w
  1822  0066  3AFF               	xorlw	255
  1823  0067  0766               	addwf	___ftadd@exp1,w
  1824  0068  00E0               	movwf	??___ftadd
  1825  0069  3019               	movlw	25
  1826  006A  0260               	subwf	??___ftadd,w
  1827  006B  1803               	btfsc	3,0
  1828  006C  0008               	return
  1829  006D                     l1522:	
  1830  006D  3006               	movlw	6
  1831  006E  00E0               	movwf	??___ftadd
  1832  006F  0860               	movf	??___ftadd,w
  1833  0070  00E4               	movwf	___ftadd@sign
  1834  0071  1BDC               	btfsc	___ftadd@f1+2,7
  1835  0072  17E4               	bsf	___ftadd@sign,7
  1836  0073  1BDF               	btfsc	___ftadd@f2+2,7
  1837  0074  1764               	bsf	___ftadd@sign,6
  1838  0075  17DB               	bsf	___ftadd@f1+1,7
  1839  0076  30FF               	movlw	255
  1840  0077  05DA               	andwf	___ftadd@f1,f
  1841  0078  30FF               	movlw	255
  1842  0079  05DB               	andwf	___ftadd@f1+1,f
  1843  007A  3000               	movlw	0
  1844  007B  05DC               	andwf	___ftadd@f1+2,f
  1845  007C  17DE               	bsf	___ftadd@f2+1,7
  1846  007D  30FF               	movlw	255
  1847  007E  05DD               	andwf	___ftadd@f2,f
  1848  007F  30FF               	movlw	255
  1849  0080  05DE               	andwf	___ftadd@f2+1,f
  1850  0081  3000               	movlw	0
  1851  0082  05DF               	andwf	___ftadd@f2+2,f
  1852  0083  0865               	movf	___ftadd@exp2,w
  1853  0084  0266               	subwf	___ftadd@exp1,w
  1854  0085  1803               	skipnc
  1855  0086  28AD               	goto	l1544
  1856  0087                     l1534:	
  1857  0087  3001               	movlw	1
  1858  0088                     u1965:	
  1859  0088  1003               	clrc
  1860  0089  0DDD               	rlf	___ftadd@f2,f
  1861  008A  0DDE               	rlf	___ftadd@f2+1,f
  1862  008B  0DDF               	rlf	___ftadd@f2+2,f
  1863  008C  3EFF               	addlw	-1
  1864  008D  1D03               	skipz
  1865  008E  2888               	goto	u1965
  1866  008F  3001               	movlw	1
  1867  0090  02E5               	subwf	___ftadd@exp2,f
  1868  0091  0865               	movf	___ftadd@exp2,w
  1869  0092  0666               	xorwf	___ftadd@exp1,w
  1870  0093  1903               	skipnz
  1871  0094  28A8               	goto	l1542
  1872  0095  3001               	movlw	1
  1873  0096  02E4               	subwf	___ftadd@sign,f
  1874  0097  0864               	movf	___ftadd@sign,w
  1875  0098  3907               	andlw	7
  1876  0099  1903               	btfsc	3,2
  1877  009A  28A8               	goto	l1542
  1878  009B  2887               	goto	l1534
  1879  009C                     l1540:	
  1880  009C  3001               	movlw	1
  1881  009D                     u1995:	
  1882  009D  1003               	clrc
  1883  009E  0CDC               	rrf	___ftadd@f1+2,f
  1884  009F  0CDB               	rrf	___ftadd@f1+1,f
  1885  00A0  0CDA               	rrf	___ftadd@f1,f
  1886  00A1  3EFF               	addlw	-1
  1887  00A2  1D03               	skipz
  1888  00A3  289D               	goto	u1995
  1889  00A4  3001               	movlw	1
  1890  00A5  00E0               	movwf	??___ftadd
  1891  00A6  0860               	movf	??___ftadd,w
  1892  00A7  07E6               	addwf	___ftadd@exp1,f
  1893  00A8                     l1542:	
  1894  00A8  0866               	movf	___ftadd@exp1,w
  1895  00A9  0665               	xorwf	___ftadd@exp2,w
  1896  00AA  1903               	btfsc	3,2
  1897  00AB  28D6               	goto	l420
  1898  00AC  289C               	goto	l1540
  1899  00AD                     l1544:	
  1900  00AD  0866               	movf	___ftadd@exp1,w
  1901  00AE  0265               	subwf	___ftadd@exp2,w
  1902  00AF  1803               	skipnc
  1903  00B0  28D6               	goto	l420
  1904  00B1                     l1546:	
  1905  00B1  3001               	movlw	1
  1906  00B2                     u2025:	
  1907  00B2  1003               	clrc
  1908  00B3  0DDA               	rlf	___ftadd@f1,f
  1909  00B4  0DDB               	rlf	___ftadd@f1+1,f
  1910  00B5  0DDC               	rlf	___ftadd@f1+2,f
  1911  00B6  3EFF               	addlw	-1
  1912  00B7  1D03               	skipz
  1913  00B8  28B2               	goto	u2025
  1914  00B9  3001               	movlw	1
  1915  00BA  02E6               	subwf	___ftadd@exp1,f
  1916  00BB  0865               	movf	___ftadd@exp2,w
  1917  00BC  0666               	xorwf	___ftadd@exp1,w
  1918  00BD  1903               	skipnz
  1919  00BE  28D2               	goto	l1554
  1920  00BF  3001               	movlw	1
  1921  00C0  02E4               	subwf	___ftadd@sign,f
  1922  00C1  0864               	movf	___ftadd@sign,w
  1923  00C2  3907               	andlw	7
  1924  00C3  1903               	btfsc	3,2
  1925  00C4  28D2               	goto	l1554
  1926  00C5  28B1               	goto	l1546
  1927  00C6                     l1552:	
  1928  00C6  3001               	movlw	1
  1929  00C7                     u2055:	
  1930  00C7  1003               	clrc
  1931  00C8  0CDF               	rrf	___ftadd@f2+2,f
  1932  00C9  0CDE               	rrf	___ftadd@f2+1,f
  1933  00CA  0CDD               	rrf	___ftadd@f2,f
  1934  00CB  3EFF               	addlw	-1
  1935  00CC  1D03               	skipz
  1936  00CD  28C7               	goto	u2055
  1937  00CE  3001               	movlw	1
  1938  00CF  00E0               	movwf	??___ftadd
  1939  00D0  0860               	movf	??___ftadd,w
  1940  00D1  07E5               	addwf	___ftadd@exp2,f
  1941  00D2                     l1554:	
  1942  00D2  0866               	movf	___ftadd@exp1,w
  1943  00D3  0665               	xorwf	___ftadd@exp2,w
  1944  00D4  1D03               	skipz
  1945  00D5  28C6               	goto	l1552
  1946  00D6                     l420:	
  1947  00D6  1FE4               	btfss	___ftadd@sign,7
  1948  00D7  28E8               	goto	l1558
  1949  00D8  30FF               	movlw	255
  1950  00D9  06DA               	xorwf	___ftadd@f1,f
  1951  00DA  30FF               	movlw	255
  1952  00DB  06DB               	xorwf	___ftadd@f1+1,f
  1953  00DC  30FF               	movlw	255
  1954  00DD  06DC               	xorwf	___ftadd@f1+2,f
  1955  00DE  3001               	movlw	1
  1956  00DF  07DA               	addwf	___ftadd@f1,f
  1957  00E0  3000               	movlw	0
  1958  00E1  1803               	skipnc
  1959  00E2  3001               	movlw	1
  1960  00E3  07DB               	addwf	___ftadd@f1+1,f
  1961  00E4  3000               	movlw	0
  1962  00E5  1803               	skipnc
  1963  00E6  3001               	movlw	1
  1964  00E7  07DC               	addwf	___ftadd@f1+2,f
  1965  00E8                     l1558:	
  1966  00E8  1F64               	btfss	___ftadd@sign,6
  1967  00E9  28FA               	goto	l1562
  1968  00EA  30FF               	movlw	255
  1969  00EB  06DD               	xorwf	___ftadd@f2,f
  1970  00EC  30FF               	movlw	255
  1971  00ED  06DE               	xorwf	___ftadd@f2+1,f
  1972  00EE  30FF               	movlw	255
  1973  00EF  06DF               	xorwf	___ftadd@f2+2,f
  1974  00F0  3001               	movlw	1
  1975  00F1  07DD               	addwf	___ftadd@f2,f
  1976  00F2  3000               	movlw	0
  1977  00F3  1803               	skipnc
  1978  00F4  3001               	movlw	1
  1979  00F5  07DE               	addwf	___ftadd@f2+1,f
  1980  00F6  3000               	movlw	0
  1981  00F7  1803               	skipnc
  1982  00F8  3001               	movlw	1
  1983  00F9  07DF               	addwf	___ftadd@f2+2,f
  1984  00FA                     l1562:	
  1985  00FA  01E4               	clrf	___ftadd@sign
  1986  00FB  085A               	movf	___ftadd@f1,w
  1987  00FC  07DD               	addwf	___ftadd@f2,f
  1988  00FD  085B               	movf	___ftadd@f1+1,w
  1989  00FE  1103               	clrz
  1990  00FF  1803               	skipnc
  1991  0100  0A5B               	incf	___ftadd@f1+1,w
  1992  0101  1D03               	btfss	3,2
  1993  0102  07DE               	addwf	___ftadd@f2+1,f
  1994  0103  085C               	movf	___ftadd@f1+2,w
  1995  0104  1103               	clrz
  1996  0105  1803               	skipnc
  1997  0106  0A5C               	incf	___ftadd@f1+2,w
  1998  0107  1D03               	btfss	3,2
  1999  0108  07DF               	addwf	___ftadd@f2+2,f
  2000  0109  1FDF               	btfss	___ftadd@f2+2,7
  2001  010A  291D               	goto	l1572
  2002  010B  30FF               	movlw	255
  2003  010C  06DD               	xorwf	___ftadd@f2,f
  2004  010D  30FF               	movlw	255
  2005  010E  06DE               	xorwf	___ftadd@f2+1,f
  2006  010F  30FF               	movlw	255
  2007  0110  06DF               	xorwf	___ftadd@f2+2,f
  2008  0111  3001               	movlw	1
  2009  0112  07DD               	addwf	___ftadd@f2,f
  2010  0113  3000               	movlw	0
  2011  0114  1803               	skipnc
  2012  0115  3001               	movlw	1
  2013  0116  07DE               	addwf	___ftadd@f2+1,f
  2014  0117  3000               	movlw	0
  2015  0118  1803               	skipnc
  2016  0119  3001               	movlw	1
  2017  011A  07DF               	addwf	___ftadd@f2+2,f
  2018  011B  01E4               	clrf	___ftadd@sign
  2019  011C  0AE4               	incf	___ftadd@sign,f
  2020  011D                     l1572:	
  2021  011D  085D               	movf	___ftadd@f2,w
  2022  011E  00A0               	movwf	___ftpack@arg
  2023  011F  085E               	movf	___ftadd@f2+1,w
  2024  0120  00A1               	movwf	___ftpack@arg+1
  2025  0121  085F               	movf	___ftadd@f2+2,w
  2026  0122  00A2               	movwf	___ftpack@arg+2
  2027  0123  0866               	movf	___ftadd@exp1,w
  2028  0124  00E0               	movwf	??___ftadd
  2029  0125  0860               	movf	??___ftadd,w
  2030  0126  00A3               	movwf	___ftpack@exp
  2031  0127  0864               	movf	___ftadd@sign,w
  2032  0128  00E1               	movwf	??___ftadd+1
  2033  0129  0861               	movf	??___ftadd+1,w
  2034  012A  00A4               	movwf	___ftpack@sign
  2035  012B  120A  118A  236C   	fcall	___ftpack
  2036  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2037  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2038  0130  0820               	movf	?___ftpack,w
  2039  0131  00DA               	movwf	?___ftadd
  2040  0132  0821               	movf	?___ftpack+1,w
  2041  0133  00DB               	movwf	?___ftadd+1
  2042  0134  0822               	movf	?___ftpack+2,w
  2043  0135  00DC               	movwf	?___ftadd+2
  2044  0136  0008               	return
  2045  0137                     __end_of___ftadd:	
  2046                           
  2047                           	psect	text9
  2048  03DA                     __ptext9:	
  2049 ;; *************** function _move *****************
  2050 ;; Defined at:
  2051 ;;		line 18 in file "motor.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;  steps           1    wreg     unsigned char 
  2054 ;;  direction       1    0[BANK0 ] unsigned char 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  steps           1    4[BANK0 ] unsigned char 
  2057 ;;  i               1    5[BANK0 ] unsigned char 
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2067 ;;      Params:         0       1       0       0       0
  2068 ;;      Locals:         0       2       0       0       0
  2069 ;;      Temps:          0       3       0       0       0
  2070 ;;      Totals:         0       6       0       0       0
  2071 ;;Total ram usage:        6 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    2
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_main
  2078 ;;		_moveDeg
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           
  2083                           ;psect for function _move
  2084  03DA                     _move:	
  2085                           
  2086                           ;incstack = 0
  2087                           ; Regs used in _move: [wreg-fsr0h+status,2+status,0]
  2088                           ;move@steps stored from wreg
  2089  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2090  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2091  03DC  00A4               	movwf	move@steps
  2092                           
  2093                           ;motor.c: 19: for(char i = 0; i<steps; i++){
  2094  03DD  01A5               	clrf	move@i
  2095  03DE                     l1638:	
  2096  03DE  0824               	movf	move@steps,w
  2097  03DF  0225               	subwf	move@i,w
  2098  03E0  1803               	btfsc	3,0
  2099  03E1  0008               	return
  2100                           
  2101                           ;motor.c: 20: if(cstep == 7 && direction == 1){
  2102  03E2  3007               	movlw	7
  2103  03E3  0676               	xorwf	_cstep,w
  2104  03E4  1D03               	btfss	3,2
  2105  03E5  2BF1               	goto	l1612
  2106  03E6  0320               	decf	move@direction,w
  2107  03E7  1D03               	btfss	3,2
  2108  03E8  2BF1               	goto	l1612
  2109                           
  2110                           ;motor.c: 21: PORTC = allSteps[0];
  2111  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2112  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2113  03EB  0820               	movf	_allSteps^(0+128),w
  2114  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2115  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2116  03EE  0087               	movwf	7	;volatile
  2117                           
  2118                           ;motor.c: 22: cstep = 0;
  2119  03EF  01F6               	clrf	_cstep
  2120                           
  2121                           ;motor.c: 23: }
  2122  03F0  2C29               	goto	l1634
  2123  03F1                     l1612:	
  2124                           
  2125                           ;motor.c: 24: else if(cstep == 0 && direction == 0){
  2126  03F1  0876               	movf	_cstep,w
  2127  03F2  1D03               	btfss	3,2
  2128  03F3  2C02               	goto	l95
  2129  03F4  0820               	movf	move@direction,w
  2130  03F5  1D03               	btfss	3,2
  2131  03F6  2C02               	goto	l95
  2132                           
  2133                           ;motor.c: 25: PORTC = allSteps[7];
  2134  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2135  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2136  03F9  082E               	movf	(_allSteps^(0+128)+14),w
  2137  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2138  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2139  03FC  0087               	movwf	7	;volatile
  2140                           
  2141                           ;motor.c: 26: cstep = 7;
  2142  03FD  3007               	movlw	7
  2143  03FE  00A1               	movwf	??_move
  2144  03FF  0821               	movf	??_move,w
  2145  0400  00F6               	movwf	_cstep
  2146                           
  2147                           ;motor.c: 27: }
  2148  0401  2C29               	goto	l1634
  2149  0402                     l95:	
  2150                           
  2151                           ;motor.c: 28: else if (cstep >= 0 && cstep <= 7){
  2152  0402  1BF6               	btfsc	_cstep,7
  2153  0403  2C28               	goto	l1632
  2154  0404  0876               	movf	_cstep,w
  2155  0405  3A80               	xorlw	128
  2156  0406  3E78               	addlw	-136
  2157  0407  1803               	skipnc
  2158  0408  2C28               	goto	l1632
  2159                           
  2160                           ;motor.c: 29: if(direction == 1){
  2161  0409  0320               	decf	move@direction,w
  2162  040A  1D03               	btfss	3,2
  2163  040B  2C17               	goto	l1626
  2164                           
  2165                           ;motor.c: 30: PORTC = allSteps[cstep+1];
  2166  040C  0876               	movf	_cstep,w
  2167  040D  00A1               	movwf	??_move
  2168  040E  0721               	addwf	??_move,w
  2169  040F  3E02               	addlw	2
  2170  0410  3EA0               	addlw	(low (_allSteps| 0))& (0+255)
  2171  0411  0084               	movwf	4
  2172  0412  1383               	bcf	3,7	;select IRP bank1
  2173  0413  0800               	movf	0,w
  2174  0414  0087               	movwf	7	;volatile
  2175                           
  2176                           ;motor.c: 31: cstep++;
  2177  0415  3001               	movlw	1
  2178  0416  2C24               	goto	L2
  2179  0417                     l1626:	
  2180                           ;motor.c: 32: }
  2181                           
  2182                           
  2183                           ;motor.c: 33: else if(direction == 0){
  2184  0417  0820               	movf	move@direction,w
  2185  0418  1D03               	btfss	3,2
  2186  0419  2C29               	goto	l1634
  2187                           
  2188                           ;motor.c: 34: PORTC = allSteps[cstep-1];
  2189  041A  0876               	movf	_cstep,w
  2190  041B  00A1               	movwf	??_move
  2191  041C  0721               	addwf	??_move,w
  2192  041D  3EFE               	addlw	254
  2193  041E  3EA0               	addlw	(low (_allSteps| 0))& (0+255)
  2194  041F  0084               	movwf	4
  2195  0420  1383               	bcf	3,7	;select IRP bank1
  2196  0421  0800               	movf	0,w
  2197  0422  0087               	movwf	7	;volatile
  2198                           
  2199                           ;motor.c: 35: cstep--;
  2200  0423  30FF               	movlw	255
  2201  0424                     L2:	
  2202  0424  00A1               	movwf	??_move
  2203  0425  0821               	movf	??_move,w
  2204  0426  07F6               	addwf	_cstep,f
  2205                           
  2206                           ;motor.c: 36: }
  2207                           ;motor.c: 38: }
  2208  0427  2C29               	goto	l1634
  2209  0428                     l1632:	
  2210                           
  2211                           ;motor.c: 39: else{
  2212                           ;motor.c: 40: PORTC = 0x00;
  2213  0428  0187               	clrf	7	;volatile
  2214  0429                     l1634:	
  2215                           
  2216                           ;motor.c: 41: }
  2217                           ;motor.c: 42: _delay((unsigned long)((100)*(20000000/4000.0)));
  2218  0429  3003               	movlw	3
  2219  042A  00A3               	movwf	??_move+2
  2220  042B  308A               	movlw	138
  2221  042C  00A2               	movwf	??_move+1
  2222  042D  3056               	movlw	86
  2223  042E  00A1               	movwf	??_move
  2224  042F                     u2377:	
  2225  042F  0BA1               	decfsz	??_move,f
  2226  0430  2C2F               	goto	u2377
  2227  0431  0BA2               	decfsz	??_move+1,f
  2228  0432  2C2F               	goto	u2377
  2229  0433  0BA3               	decfsz	??_move+2,f
  2230  0434  2C2F               	goto	u2377
  2231  0435  2C36               	nop2
  2232  0436  3001               	movlw	1
  2233  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2234  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2235  0439  00A1               	movwf	??_move
  2236  043A  0821               	movf	??_move,w
  2237  043B  07A5               	addwf	move@i,f
  2238  043C  2BDE               	goto	l1638
  2239  043D                     __end_of_move:	
  2240                           
  2241                           	psect	text10
  2242  049D                     __ptext10:	
  2243 ;; *************** function ___ftge *****************
  2244 ;; Defined at:
  2245 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  ff1             3    0[BANK0 ] float 
  2248 ;;  ff2             3    3[BANK0 ] float 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;		None
  2251 ;; Return value:  Size  Location     Type
  2252 ;;		None               void
  2253 ;; Registers used:
  2254 ;;		wreg, status,2, status,0
  2255 ;; Tracked objects:
  2256 ;;		On entry : 0/0
  2257 ;;		On exit  : 0/0
  2258 ;;		Unchanged: 0/0
  2259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2260 ;;      Params:         0       6       0       0       0
  2261 ;;      Locals:         0       0       0       0       0
  2262 ;;      Temps:          0       6       0       0       0
  2263 ;;      Totals:         0      12       0       0       0
  2264 ;;Total ram usage:       12 bytes
  2265 ;; Hardware stack levels used:    1
  2266 ;; Hardware stack levels required when called:    2
  2267 ;; This function calls:
  2268 ;;		Nothing
  2269 ;; This function is called by:
  2270 ;;		_moveDeg
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           
  2275                           ;psect for function ___ftge
  2276  049D                     ___ftge:	
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2280  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2281  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2282  049F  1FA2               	btfss	___ftge@ff1+2,7
  2283  04A0  2CC6               	goto	l1382
  2284  04A1  3000               	movlw	0
  2285  04A2  00A6               	movwf	??___ftge
  2286  04A3  3000               	movlw	0
  2287  04A4  00A7               	movwf	??___ftge+1
  2288  04A5  3080               	movlw	128
  2289  04A6  00A8               	movwf	??___ftge+2
  2290  04A7  0920               	comf	___ftge@ff1,w
  2291  04A8  00A9               	movwf	??___ftge+3
  2292  04A9  0921               	comf	___ftge@ff1+1,w
  2293  04AA  00AA               	movwf	??___ftge+4
  2294  04AB  0922               	comf	___ftge@ff1+2,w
  2295  04AC  00AB               	movwf	??___ftge+5
  2296  04AD  0AA9               	incf	??___ftge+3,f
  2297  04AE  1903               	skipnz
  2298  04AF  0AAA               	incf	??___ftge+4,f
  2299  04B0  1903               	skipnz
  2300  04B1  0AAB               	incf	??___ftge+5,f
  2301  04B2  0829               	movf	??___ftge+3,w
  2302  04B3  07A6               	addwf	??___ftge,f
  2303  04B4  082A               	movf	??___ftge+4,w
  2304  04B5  1803               	skipnc
  2305  04B6  0F2A               	incfsz	??___ftge+4,w
  2306  04B7  2CB9               	goto	u1621
  2307  04B8  2CBA               	goto	u1622
  2308  04B9                     u1621:	
  2309  04B9  07A7               	addwf	??___ftge+1,f
  2310  04BA                     u1622:	
  2311  04BA  082B               	movf	??___ftge+5,w
  2312  04BB  1803               	skipnc
  2313  04BC  0F2B               	incfsz	??___ftge+5,w
  2314  04BD  2CBF               	goto	u1623
  2315  04BE  2CC0               	goto	u1624
  2316  04BF                     u1623:	
  2317  04BF  07A8               	addwf	??___ftge+2,f
  2318  04C0                     u1624:	
  2319  04C0  0826               	movf	??___ftge,w
  2320  04C1  00A0               	movwf	___ftge@ff1
  2321  04C2  0827               	movf	??___ftge+1,w
  2322  04C3  00A1               	movwf	___ftge@ff1+1
  2323  04C4  0828               	movf	??___ftge+2,w
  2324  04C5  00A2               	movwf	___ftge@ff1+2
  2325  04C6                     l1382:	
  2326  04C6  1FA5               	btfss	___ftge@ff2+2,7
  2327  04C7  2CED               	goto	l1386
  2328  04C8  3000               	movlw	0
  2329  04C9  00A6               	movwf	??___ftge
  2330  04CA  3000               	movlw	0
  2331  04CB  00A7               	movwf	??___ftge+1
  2332  04CC  3080               	movlw	128
  2333  04CD  00A8               	movwf	??___ftge+2
  2334  04CE  0923               	comf	___ftge@ff2,w
  2335  04CF  00A9               	movwf	??___ftge+3
  2336  04D0  0924               	comf	___ftge@ff2+1,w
  2337  04D1  00AA               	movwf	??___ftge+4
  2338  04D2  0925               	comf	___ftge@ff2+2,w
  2339  04D3  00AB               	movwf	??___ftge+5
  2340  04D4  0AA9               	incf	??___ftge+3,f
  2341  04D5  1903               	skipnz
  2342  04D6  0AAA               	incf	??___ftge+4,f
  2343  04D7  1903               	skipnz
  2344  04D8  0AAB               	incf	??___ftge+5,f
  2345  04D9  0829               	movf	??___ftge+3,w
  2346  04DA  07A6               	addwf	??___ftge,f
  2347  04DB  082A               	movf	??___ftge+4,w
  2348  04DC  1803               	skipnc
  2349  04DD  0F2A               	incfsz	??___ftge+4,w
  2350  04DE  2CE0               	goto	u1641
  2351  04DF  2CE1               	goto	u1642
  2352  04E0                     u1641:	
  2353  04E0  07A7               	addwf	??___ftge+1,f
  2354  04E1                     u1642:	
  2355  04E1  082B               	movf	??___ftge+5,w
  2356  04E2  1803               	skipnc
  2357  04E3  0F2B               	incfsz	??___ftge+5,w
  2358  04E4  2CE6               	goto	u1643
  2359  04E5  2CE7               	goto	u1644
  2360  04E6                     u1643:	
  2361  04E6  07A8               	addwf	??___ftge+2,f
  2362  04E7                     u1644:	
  2363  04E7  0826               	movf	??___ftge,w
  2364  04E8  00A3               	movwf	___ftge@ff2
  2365  04E9  0827               	movf	??___ftge+1,w
  2366  04EA  00A4               	movwf	___ftge@ff2+1
  2367  04EB  0828               	movf	??___ftge+2,w
  2368  04EC  00A5               	movwf	___ftge@ff2+2
  2369  04ED                     l1386:	
  2370  04ED  3080               	movlw	128
  2371  04EE  06A2               	xorwf	___ftge@ff1+2,f
  2372  04EF  3080               	movlw	128
  2373  04F0  06A5               	xorwf	___ftge@ff2+2,f
  2374  04F1  0825               	movf	___ftge@ff2+2,w
  2375  04F2  0222               	subwf	___ftge@ff1+2,w
  2376  04F3  1D03               	skipz
  2377  04F4  0008               	return
  2378  04F5  0824               	movf	___ftge@ff2+1,w
  2379  04F6  0221               	subwf	___ftge@ff1+1,w
  2380  04F7  1D03               	skipz
  2381  04F8  0008               	return
  2382  04F9  0823               	movf	___ftge@ff2,w
  2383  04FA  0220               	subwf	___ftge@ff1,w
  2384  04FB  0008               	return
  2385  04FC                     __end_of___ftge:	
  2386                           
  2387                           	psect	text11
  2388  0226                     __ptext11:	
  2389 ;; *************** function ___ftdiv *****************
  2390 ;; Defined at:
  2391 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;  f2              3   19[BANK0 ] float 
  2394 ;;  f1              3   22[BANK0 ] float 
  2395 ;; Auto vars:     Size  Location     Type
  2396 ;;  f3              3   30[BANK0 ] float 
  2397 ;;  sign            1   34[BANK0 ] unsigned char 
  2398 ;;  exp             1   33[BANK0 ] unsigned char 
  2399 ;;  cntr            1   29[BANK0 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  3   19[BANK0 ] float 
  2402 ;; Registers used:
  2403 ;;		wreg, status,2, status,0, pclath, cstack
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       6       0       0       0
  2410 ;;      Locals:         0       6       0       0       0
  2411 ;;      Temps:          0       4       0       0       0
  2412 ;;      Totals:         0      16       0       0       0
  2413 ;;Total ram usage:       16 bytes
  2414 ;; Hardware stack levels used:    1
  2415 ;; Hardware stack levels required when called:    3
  2416 ;; This function calls:
  2417 ;;		___ftpack
  2418 ;; This function is called by:
  2419 ;;		_moveDeg
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423                           
  2424                           ;psect for function ___ftdiv
  2425  0226                     ___ftdiv:	
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2429  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0228  0836               	movf	___ftdiv@f1,w
  2432  0229  00B9               	movwf	??___ftdiv
  2433  022A  0837               	movf	___ftdiv@f1+1,w
  2434  022B  00BA               	movwf	??___ftdiv+1
  2435  022C  0838               	movf	___ftdiv@f1+2,w
  2436  022D  00BB               	movwf	??___ftdiv+2
  2437  022E  1003               	clrc
  2438  022F  0D3A               	rlf	??___ftdiv+1,w
  2439  0230  0D3B               	rlf	??___ftdiv+2,w
  2440  0231  00BC               	movwf	??___ftdiv+3
  2441  0232  083C               	movf	??___ftdiv+3,w
  2442  0233  00C1               	movwf	___ftdiv@exp
  2443  0234  0841               	movf	___ftdiv@exp,w
  2444  0235  1D03               	btfss	3,2
  2445  0236  2A3E               	goto	l1654
  2446  0237  3000               	movlw	0
  2447  0238  00B3               	movwf	?___ftdiv
  2448  0239  3000               	movlw	0
  2449  023A  00B4               	movwf	?___ftdiv+1
  2450  023B  3000               	movlw	0
  2451  023C  00B5               	movwf	?___ftdiv+2
  2452  023D  0008               	return
  2453  023E                     l1654:	
  2454  023E  0833               	movf	___ftdiv@f2,w
  2455  023F  00B9               	movwf	??___ftdiv
  2456  0240  0834               	movf	___ftdiv@f2+1,w
  2457  0241  00BA               	movwf	??___ftdiv+1
  2458  0242  0835               	movf	___ftdiv@f2+2,w
  2459  0243  00BB               	movwf	??___ftdiv+2
  2460  0244  1003               	clrc
  2461  0245  0D3A               	rlf	??___ftdiv+1,w
  2462  0246  0D3B               	rlf	??___ftdiv+2,w
  2463  0247  00BC               	movwf	??___ftdiv+3
  2464  0248  083C               	movf	??___ftdiv+3,w
  2465  0249  00C2               	movwf	___ftdiv@sign
  2466  024A  0842               	movf	___ftdiv@sign,w
  2467  024B  1D03               	btfss	3,2
  2468  024C  2A54               	goto	l1660
  2469  024D  3000               	movlw	0
  2470  024E  00B3               	movwf	?___ftdiv
  2471  024F  3000               	movlw	0
  2472  0250  00B4               	movwf	?___ftdiv+1
  2473  0251  3000               	movlw	0
  2474  0252  00B5               	movwf	?___ftdiv+2
  2475  0253  0008               	return
  2476  0254                     l1660:	
  2477  0254  3000               	movlw	0
  2478  0255  00BE               	movwf	___ftdiv@f3
  2479  0256  3000               	movlw	0
  2480  0257  00BF               	movwf	___ftdiv@f3+1
  2481  0258  3000               	movlw	0
  2482  0259  00C0               	movwf	___ftdiv@f3+2
  2483  025A  3089               	movlw	137
  2484  025B  0742               	addwf	___ftdiv@sign,w
  2485  025C  00B9               	movwf	??___ftdiv
  2486  025D  0839               	movf	??___ftdiv,w
  2487  025E  02C1               	subwf	___ftdiv@exp,f
  2488  025F  0836               	movf	___ftdiv@f1,w
  2489  0260  00B9               	movwf	??___ftdiv
  2490  0261  0837               	movf	___ftdiv@f1+1,w
  2491  0262  00BA               	movwf	??___ftdiv+1
  2492  0263  0838               	movf	___ftdiv@f1+2,w
  2493  0264  00BB               	movwf	??___ftdiv+2
  2494  0265  3010               	movlw	16
  2495  0266                     u2255:	
  2496  0266  1003               	clrc
  2497  0267  0CBB               	rrf	??___ftdiv+2,f
  2498  0268  0CBA               	rrf	??___ftdiv+1,f
  2499  0269  0CB9               	rrf	??___ftdiv,f
  2500  026A  3EFF               	addlw	-1
  2501  026B  1D03               	skipz
  2502  026C  2A66               	goto	u2255
  2503  026D  0839               	movf	??___ftdiv,w
  2504  026E  00BC               	movwf	??___ftdiv+3
  2505  026F  083C               	movf	??___ftdiv+3,w
  2506  0270  00C2               	movwf	___ftdiv@sign
  2507  0271  0833               	movf	___ftdiv@f2,w
  2508  0272  00B9               	movwf	??___ftdiv
  2509  0273  0834               	movf	___ftdiv@f2+1,w
  2510  0274  00BA               	movwf	??___ftdiv+1
  2511  0275  0835               	movf	___ftdiv@f2+2,w
  2512  0276  00BB               	movwf	??___ftdiv+2
  2513  0277  3010               	movlw	16
  2514  0278                     u2265:	
  2515  0278  1003               	clrc
  2516  0279  0CBB               	rrf	??___ftdiv+2,f
  2517  027A  0CBA               	rrf	??___ftdiv+1,f
  2518  027B  0CB9               	rrf	??___ftdiv,f
  2519  027C  3EFF               	addlw	-1
  2520  027D  1D03               	skipz
  2521  027E  2A78               	goto	u2265
  2522  027F  0839               	movf	??___ftdiv,w
  2523  0280  00BC               	movwf	??___ftdiv+3
  2524  0281  083C               	movf	??___ftdiv+3,w
  2525  0282  06C2               	xorwf	___ftdiv@sign,f
  2526  0283  3080               	movlw	128
  2527  0284  00B9               	movwf	??___ftdiv
  2528  0285  0839               	movf	??___ftdiv,w
  2529  0286  05C2               	andwf	___ftdiv@sign,f
  2530  0287  17B7               	bsf	___ftdiv@f1+1,7
  2531  0288  30FF               	movlw	255
  2532  0289  05B6               	andwf	___ftdiv@f1,f
  2533  028A  30FF               	movlw	255
  2534  028B  05B7               	andwf	___ftdiv@f1+1,f
  2535  028C  3000               	movlw	0
  2536  028D  05B8               	andwf	___ftdiv@f1+2,f
  2537  028E  17B4               	bsf	___ftdiv@f2+1,7
  2538  028F  30FF               	movlw	255
  2539  0290  05B3               	andwf	___ftdiv@f2,f
  2540  0291  30FF               	movlw	255
  2541  0292  05B4               	andwf	___ftdiv@f2+1,f
  2542  0293  3000               	movlw	0
  2543  0294  05B5               	andwf	___ftdiv@f2+2,f
  2544  0295  3018               	movlw	24
  2545  0296  00B9               	movwf	??___ftdiv
  2546  0297  0839               	movf	??___ftdiv,w
  2547  0298  00BD               	movwf	___ftdiv@cntr
  2548  0299                     l1674:	
  2549  0299  3001               	movlw	1
  2550  029A                     u2275:	
  2551  029A  1003               	clrc
  2552  029B  0DBE               	rlf	___ftdiv@f3,f
  2553  029C  0DBF               	rlf	___ftdiv@f3+1,f
  2554  029D  0DC0               	rlf	___ftdiv@f3+2,f
  2555  029E  3EFF               	addlw	-1
  2556  029F  1D03               	skipz
  2557  02A0  2A9A               	goto	u2275
  2558  02A1  0835               	movf	___ftdiv@f2+2,w
  2559  02A2  0238               	subwf	___ftdiv@f1+2,w
  2560  02A3  1D03               	skipz
  2561  02A4  2AAB               	goto	u2285
  2562  02A5  0834               	movf	___ftdiv@f2+1,w
  2563  02A6  0237               	subwf	___ftdiv@f1+1,w
  2564  02A7  1D03               	skipz
  2565  02A8  2AAB               	goto	u2285
  2566  02A9  0833               	movf	___ftdiv@f2,w
  2567  02AA  0236               	subwf	___ftdiv@f1,w
  2568  02AB                     u2285:	
  2569  02AB  1C03               	skipc
  2570  02AC  2AB8               	goto	l1682
  2571  02AD  0833               	movf	___ftdiv@f2,w
  2572  02AE  02B6               	subwf	___ftdiv@f1,f
  2573  02AF  0834               	movf	___ftdiv@f2+1,w
  2574  02B0  1C03               	skipc
  2575  02B1  0F34               	incfsz	___ftdiv@f2+1,w
  2576  02B2  02B7               	subwf	___ftdiv@f1+1,f
  2577  02B3  0835               	movf	___ftdiv@f2+2,w
  2578  02B4  1C03               	skipc
  2579  02B5  0A35               	incf	___ftdiv@f2+2,w
  2580  02B6  02B8               	subwf	___ftdiv@f1+2,f
  2581  02B7  143E               	bsf	___ftdiv@f3,0
  2582  02B8                     l1682:	
  2583  02B8  3001               	movlw	1
  2584  02B9                     u2295:	
  2585  02B9  1003               	clrc
  2586  02BA  0DB6               	rlf	___ftdiv@f1,f
  2587  02BB  0DB7               	rlf	___ftdiv@f1+1,f
  2588  02BC  0DB8               	rlf	___ftdiv@f1+2,f
  2589  02BD  3EFF               	addlw	-1
  2590  02BE  1D03               	skipz
  2591  02BF  2AB9               	goto	u2295
  2592  02C0  3001               	movlw	1
  2593  02C1  02BD               	subwf	___ftdiv@cntr,f
  2594  02C2  1D03               	btfss	3,2
  2595  02C3  2A99               	goto	l1674
  2596  02C4  083E               	movf	___ftdiv@f3,w
  2597  02C5  00A0               	movwf	___ftpack@arg
  2598  02C6  083F               	movf	___ftdiv@f3+1,w
  2599  02C7  00A1               	movwf	___ftpack@arg+1
  2600  02C8  0840               	movf	___ftdiv@f3+2,w
  2601  02C9  00A2               	movwf	___ftpack@arg+2
  2602  02CA  0841               	movf	___ftdiv@exp,w
  2603  02CB  00B9               	movwf	??___ftdiv
  2604  02CC  0839               	movf	??___ftdiv,w
  2605  02CD  00A3               	movwf	___ftpack@exp
  2606  02CE  0842               	movf	___ftdiv@sign,w
  2607  02CF  00BA               	movwf	??___ftdiv+1
  2608  02D0  083A               	movf	??___ftdiv+1,w
  2609  02D1  00A4               	movwf	___ftpack@sign
  2610  02D2  120A  118A  236C   	fcall	___ftpack
  2611  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2612  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2613  02D7  0820               	movf	?___ftpack,w
  2614  02D8  00B3               	movwf	?___ftdiv
  2615  02D9  0821               	movf	?___ftpack+1,w
  2616  02DA  00B4               	movwf	?___ftdiv+1
  2617  02DB  0822               	movf	?___ftpack+2,w
  2618  02DC  00B5               	movwf	?___ftdiv+2
  2619  02DD  0008               	return
  2620  02DE                     __end_of___ftdiv:	
  2621                           
  2622                           	psect	text12
  2623  036C                     __ptext12:	
  2624 ;; *************** function ___ftpack *****************
  2625 ;; Defined at:
  2626 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2627 ;; Parameters:    Size  Location     Type
  2628 ;;  arg             3    0[BANK0 ] unsigned um
  2629 ;;  exp             1    3[BANK0 ] unsigned char 
  2630 ;;  sign            1    4[BANK0 ] unsigned char 
  2631 ;; Auto vars:     Size  Location     Type
  2632 ;;		None
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  3    0[BANK0 ] float 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2642 ;;      Params:         0       5       0       0       0
  2643 ;;      Locals:         0       0       0       0       0
  2644 ;;      Temps:          0       3       0       0       0
  2645 ;;      Totals:         0       8       0       0       0
  2646 ;;Total ram usage:        8 bytes
  2647 ;; Hardware stack levels used:    1
  2648 ;; Hardware stack levels required when called:    2
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		___altoft
  2653 ;;		___ftadd
  2654 ;;		___ftdiv
  2655 ;; This function uses a non-reentrant model
  2656 ;;
  2657                           
  2658                           
  2659                           ;psect for function ___ftpack
  2660  036C                     ___ftpack:	
  2661                           
  2662                           ;incstack = 0
  2663                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2664  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2665  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2666  036E  0823               	movf	___ftpack@exp,w
  2667  036F  1903               	btfsc	3,2
  2668  0370  2B76               	goto	l1446
  2669  0371  0822               	movf	___ftpack@arg+2,w
  2670  0372  0421               	iorwf	___ftpack@arg+1,w
  2671  0373  0420               	iorwf	___ftpack@arg,w
  2672  0374  1D03               	skipz
  2673  0375  2B89               	goto	l1452
  2674  0376                     l1446:	
  2675  0376  3000               	movlw	0
  2676  0377  00A0               	movwf	?___ftpack
  2677  0378  3000               	movlw	0
  2678  0379  00A1               	movwf	?___ftpack+1
  2679  037A  3000               	movlw	0
  2680  037B  00A2               	movwf	?___ftpack+2
  2681  037C  0008               	return
  2682  037D                     l1450:	
  2683  037D  3001               	movlw	1
  2684  037E  00A5               	movwf	??___ftpack
  2685  037F  0825               	movf	??___ftpack,w
  2686  0380  07A3               	addwf	___ftpack@exp,f
  2687  0381  3001               	movlw	1
  2688  0382                     u1735:	
  2689  0382  1003               	clrc
  2690  0383  0CA2               	rrf	___ftpack@arg+2,f
  2691  0384  0CA1               	rrf	___ftpack@arg+1,f
  2692  0385  0CA0               	rrf	___ftpack@arg,f
  2693  0386  3EFF               	addlw	-1
  2694  0387  1D03               	skipz
  2695  0388  2B82               	goto	u1735
  2696  0389                     l1452:	
  2697  0389  30FE               	movlw	254
  2698  038A  0522               	andwf	___ftpack@arg+2,w
  2699  038B  1903               	btfsc	3,2
  2700  038C  2BA4               	goto	l389
  2701  038D  2B7D               	goto	l1450
  2702  038E                     l1454:	
  2703  038E  3001               	movlw	1
  2704  038F  00A5               	movwf	??___ftpack
  2705  0390  0825               	movf	??___ftpack,w
  2706  0391  07A3               	addwf	___ftpack@exp,f
  2707  0392  3001               	movlw	1
  2708  0393  07A0               	addwf	___ftpack@arg,f
  2709  0394  3000               	movlw	0
  2710  0395  1803               	skipnc
  2711  0396  3001               	movlw	1
  2712  0397  07A1               	addwf	___ftpack@arg+1,f
  2713  0398  3000               	movlw	0
  2714  0399  1803               	skipnc
  2715  039A  3001               	movlw	1
  2716  039B  07A2               	addwf	___ftpack@arg+2,f
  2717  039C  3001               	movlw	1
  2718  039D                     u1755:	
  2719  039D  1003               	clrc
  2720  039E  0CA2               	rrf	___ftpack@arg+2,f
  2721  039F  0CA1               	rrf	___ftpack@arg+1,f
  2722  03A0  0CA0               	rrf	___ftpack@arg,f
  2723  03A1  3EFF               	addlw	-1
  2724  03A2  1D03               	skipz
  2725  03A3  2B9D               	goto	u1755
  2726  03A4                     l389:	
  2727  03A4  30FF               	movlw	255
  2728  03A5  0522               	andwf	___ftpack@arg+2,w
  2729  03A6  1903               	btfsc	3,2
  2730  03A7  2BB3               	goto	l1462
  2731  03A8  2B8E               	goto	l1454
  2732  03A9                     l1460:	
  2733  03A9  3001               	movlw	1
  2734  03AA  02A3               	subwf	___ftpack@exp,f
  2735  03AB  3001               	movlw	1
  2736  03AC                     u1775:	
  2737  03AC  1003               	clrc
  2738  03AD  0DA0               	rlf	___ftpack@arg,f
  2739  03AE  0DA1               	rlf	___ftpack@arg+1,f
  2740  03AF  0DA2               	rlf	___ftpack@arg+2,f
  2741  03B0  3EFF               	addlw	-1
  2742  03B1  1D03               	skipz
  2743  03B2  2BAC               	goto	u1775
  2744  03B3                     l1462:	
  2745  03B3  1BA1               	btfsc	___ftpack@arg+1,7
  2746  03B4  2BB9               	goto	l396
  2747  03B5  3002               	movlw	2
  2748  03B6  0223               	subwf	___ftpack@exp,w
  2749  03B7  1803               	skipnc
  2750  03B8  2BA9               	goto	l1460
  2751  03B9                     l396:	
  2752  03B9  1823               	btfsc	___ftpack@exp,0
  2753  03BA  2BC1               	goto	l397
  2754  03BB  30FF               	movlw	255
  2755  03BC  05A0               	andwf	___ftpack@arg,f
  2756  03BD  307F               	movlw	127
  2757  03BE  05A1               	andwf	___ftpack@arg+1,f
  2758  03BF  30FF               	movlw	255
  2759  03C0  05A2               	andwf	___ftpack@arg+2,f
  2760  03C1                     l397:	
  2761  03C1  1003               	clrc
  2762  03C2  0CA3               	rrf	___ftpack@exp,f
  2763  03C3  0823               	movf	___ftpack@exp,w
  2764  03C4  00A5               	movwf	??___ftpack
  2765  03C5  01A6               	clrf	??___ftpack+1
  2766  03C6  01A7               	clrf	??___ftpack+2
  2767  03C7  3010               	movlw	16
  2768  03C8                     u1815:	
  2769  03C8  1003               	clrc
  2770  03C9  0DA5               	rlf	??___ftpack,f
  2771  03CA  0DA6               	rlf	??___ftpack+1,f
  2772  03CB  0DA7               	rlf	??___ftpack+2,f
  2773  03CC  3EFF               	addlw	-1
  2774  03CD  1D03               	skipz
  2775  03CE  2BC8               	goto	u1815
  2776  03CF  0825               	movf	??___ftpack,w
  2777  03D0  04A0               	iorwf	___ftpack@arg,f
  2778  03D1  0826               	movf	??___ftpack+1,w
  2779  03D2  04A1               	iorwf	___ftpack@arg+1,f
  2780  03D3  0827               	movf	??___ftpack+2,w
  2781  03D4  04A2               	iorwf	___ftpack@arg+2,f
  2782  03D5  0824               	movf	___ftpack@sign,w
  2783  03D6  1903               	btfsc	3,2
  2784  03D7  0008               	return
  2785  03D8  17A2               	bsf	___ftpack@arg+2,7
  2786  03D9  0008               	return
  2787  03DA                     __end_of___ftpack:	
  2788                           
  2789                           	psect	text13
  2790  0655                     __ptext13:	
  2791 ;; *************** function _initialise *****************
  2792 ;; Defined at:
  2793 ;;		line 19 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;		None
  2798 ;; Return value:  Size  Location     Type
  2799 ;;                  1    wreg      void 
  2800 ;; Registers used:
  2801 ;;		wreg, status,2
  2802 ;; Tracked objects:
  2803 ;;		On entry : 0/0
  2804 ;;		On exit  : 0/0
  2805 ;;		Unchanged: 0/0
  2806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2807 ;;      Params:         0       0       0       0       0
  2808 ;;      Locals:         0       0       0       0       0
  2809 ;;      Temps:          0       0       0       0       0
  2810 ;;      Totals:         0       0       0       0       0
  2811 ;;Total ram usage:        0 bytes
  2812 ;; Hardware stack levels used:    1
  2813 ;; Hardware stack levels required when called:    2
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           
  2822                           ;psect for function _initialise
  2823  0655                     _initialise:	
  2824                           
  2825                           ;main.c: 22: TRISB = 0b00000111;
  2826                           
  2827                           ;incstack = 0
  2828                           ; Regs used in _initialise: [wreg+status,2]
  2829  0655  3007               	movlw	7
  2830  0656  1683               	bsf	3,5	;RP0=1, select bank1
  2831  0657  1303               	bcf	3,6	;RP1=0, select bank1
  2832  0658  0086               	movwf	6	;volatile
  2833                           
  2834                           ;main.c: 23: TRISC = 0;
  2835  0659  0187               	clrf	7	;volatile
  2836                           
  2837                           ;main.c: 25: RB3 = 1;
  2838  065A  1283               	bcf	3,5	;RP0=0, select bank0
  2839  065B  1303               	bcf	3,6	;RP1=0, select bank0
  2840  065C  1586               	bsf	6,3	;volatile
  2841                           
  2842                           ;main.c: 26: RB4 = 1;
  2843  065D  1606               	bsf	6,4	;volatile
  2844                           
  2845                           ;main.c: 29: TMR0 = 100;
  2846  065E  3064               	movlw	100
  2847  065F  0081               	movwf	1	;volatile
  2848                           
  2849                           ;main.c: 30: T0CS = 0;
  2850  0660  1683               	bsf	3,5	;RP0=1, select bank1
  2851  0661  1303               	bcf	3,6	;RP1=0, select bank1
  2852  0662  1281               	bcf	1,5	;volatile
  2853                           
  2854                           ;main.c: 31: T0SE = 0;
  2855  0663  1201               	bcf	1,4	;volatile
  2856                           
  2857                           ;main.c: 32: PSA = 0;
  2858  0664  1181               	bcf	1,3	;volatile
  2859                           
  2860                           ;main.c: 33: PS0 = 0;
  2861  0665  1001               	bcf	1,0	;volatile
  2862                           
  2863                           ;main.c: 34: PS1 = 0;
  2864  0666  1081               	bcf	1,1	;volatile
  2865                           
  2866                           ;main.c: 35: PS2 = 1;
  2867  0667  1501               	bsf	1,2	;volatile
  2868                           
  2869                           ;main.c: 37: TMR0IE = 1;
  2870  0668  168B               	bsf	11,5	;volatile
  2871                           
  2872                           ;main.c: 38: (GIE = 1);
  2873  0669  178B               	bsf	11,7	;volatile
  2874  066A  0008               	return
  2875  066B                     __end_of_initialise:	
  2876                           
  2877                           	psect	text14
  2878  063E                     __ptext14:	
  2879 ;; *************** function _isr *****************
  2880 ;; Defined at:
  2881 ;;		line 12 in file "main.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      void 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, status,0, pclath, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0
  2897 ;;      Temps:          4       0       0       0       0
  2898 ;;      Totals:         4       0       0       0       0
  2899 ;;Total ram usage:        4 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    1
  2902 ;; This function calls:
  2903 ;;		_debounceButtons
  2904 ;; This function is called by:
  2905 ;;		Interrupt level 1
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           
  2910                           ;psect for function _isr
  2911  063E                     _isr:	
  2912                           
  2913                           ;main.c: 13: if (T0IF){
  2914  063E  1D0B               	btfss	11,2	;volatile
  2915  063F  2E48               	goto	i1l64
  2916                           
  2917                           ;main.c: 14: T0IF = 0;
  2918  0640  110B               	bcf	11,2	;volatile
  2919                           
  2920                           ;main.c: 15: TMR0 = 100;
  2921  0641  3064               	movlw	100
  2922  0642  0081               	movwf	1	;volatile
  2923                           
  2924                           ;main.c: 16: debounceButtons();
  2925  0643  120A  118A  260A  120A  118A  	fcall	_debounceButtons
  2926  0648                     i1l64:	
  2927  0648  0875               	movf	??_isr+3,w
  2928  0649  1283               	bcf	3,5	;RP0=0, select bank0
  2929  064A  1303               	bcf	3,6	;RP1=0, select bank0
  2930  064B  00FF               	movwf	127
  2931  064C  0874               	movf	??_isr+2,w
  2932  064D  008A               	movwf	10
  2933  064E  0873               	movf	??_isr+1,w
  2934  064F  0084               	movwf	4
  2935  0650  0E72               	swapf	??_isr^(0+-128),w
  2936  0651  0083               	movwf	3
  2937  0652  0EFE               	swapf	126,f
  2938  0653  0E7E               	swapf	126,w
  2939  0654  0009               	retfie
  2940  0655                     __end_of_isr:	
  2941                           
  2942                           	psect	intentry
  2943  0004                     __pintentry:	
  2944                           ;incstack = 0
  2945                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2946                           
  2947  0004                     interrupt_function:	
  2948  007E                     saved_w	set	btemp
  2949  0004  00FE               	movwf	btemp
  2950  0005  0E03               	swapf	3,w
  2951  0006  00F2               	movwf	??_isr
  2952  0007  0804               	movf	4,w
  2953  0008  00F3               	movwf	??_isr+1
  2954  0009  080A               	movf	10,w
  2955  000A  00F4               	movwf	??_isr+2
  2956  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2957  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2958  000D  087F               	movf	btemp+1,w
  2959  000E  00F5               	movwf	??_isr+3
  2960  000F  120A  118A  2E3E   	ljmp	_isr
  2961                           
  2962                           	psect	text15
  2963  060A                     __ptext15:	
  2964 ;; *************** function _debounceButtons *****************
  2965 ;; Defined at:
  2966 ;;		line 6 in file "timer0.c"
  2967 ;; Parameters:    Size  Location     Type
  2968 ;;		None
  2969 ;; Auto vars:     Size  Location     Type
  2970 ;;		None
  2971 ;; Return value:  Size  Location     Type
  2972 ;;                  1    wreg      void 
  2973 ;; Registers used:
  2974 ;;		wreg, status,2, status,0
  2975 ;; Tracked objects:
  2976 ;;		On entry : 0/0
  2977 ;;		On exit  : 0/0
  2978 ;;		Unchanged: 0/0
  2979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2980 ;;      Params:         0       0       0       0       0
  2981 ;;      Locals:         0       0       0       0       0
  2982 ;;      Temps:          1       0       0       0       0
  2983 ;;      Totals:         1       0       0       0       0
  2984 ;;Total ram usage:        1 bytes
  2985 ;; Hardware stack levels used:    1
  2986 ;; This function calls:
  2987 ;;		Nothing
  2988 ;; This function is called by:
  2989 ;;		_isr
  2990 ;; This function uses a non-reentrant model
  2991 ;;
  2992                           
  2993                           
  2994                           ;psect for function _debounceButtons
  2995  060A                     _debounceButtons:	
  2996                           
  2997                           ;timer0.c: 8: if(!RB0) {
  2998                           
  2999                           ;incstack = 0
  3000                           ; Regs used in _debounceButtons: [wreg+status,2+status,0]
  3001  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3002  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3003  060C  1806               	btfsc	6,0	;volatile
  3004  060D  2E1A               	goto	i1l974
  3005                           
  3006                           ;timer0.c: 9: rtcCounter++;
  3007  060E  3001               	movlw	1
  3008  060F  00F1               	movwf	??_debounceButtons
  3009  0610  0871               	movf	??_debounceButtons,w
  3010  0611  07F7               	addwf	_rtcCounter,f	;volatile
  3011                           
  3012                           ;timer0.c: 10: if(rtcCounter >10 &&pb0Released){
  3013  0612  300B               	movlw	11
  3014  0613  0277               	subwf	_rtcCounter,w	;volatile
  3015  0614  1803               	btfsc	3,0
  3016  0615  1D70               	btfss	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3017  0616  2E1C               	goto	i1l978
  3018                           
  3019                           ;timer0.c: 11: pb0Pressed = 1;
  3020  0617  14F0               	bsf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
  3021                           
  3022                           ;timer0.c: 12: pb0Released = 0;
  3023  0618  1170               	bcf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3024                           
  3025                           ;timer0.c: 13: }
  3026                           ;timer0.c: 14: }
  3027  0619  2E1C               	goto	i1l978
  3028  061A                     i1l974:	
  3029                           
  3030                           ;timer0.c: 15: else{
  3031                           ;timer0.c: 16: rtcCounter = 0;
  3032  061A  01F7               	clrf	_rtcCounter	;volatile
  3033                           
  3034                           ;timer0.c: 17: pb0Released = 1;
  3035  061B  1570               	bsf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3036  061C                     i1l978:	
  3037                           
  3038                           ;timer0.c: 18: }
  3039                           ;timer0.c: 20: if(!RB1) {
  3040  061C  1886               	btfsc	6,1	;volatile
  3041  061D  2E2A               	goto	i1l988
  3042                           
  3043                           ;timer0.c: 21: rtcCounter2++;
  3044  061E  3001               	movlw	1
  3045  061F  00F1               	movwf	??_debounceButtons
  3046  0620  0871               	movf	??_debounceButtons,w
  3047  0621  07F8               	addwf	_rtcCounter2,f	;volatile
  3048                           
  3049                           ;timer0.c: 22: if(rtcCounter2 >10 &&pb1Released){
  3050  0622  300B               	movlw	11
  3051  0623  0278               	subwf	_rtcCounter2,w	;volatile
  3052  0624  1803               	btfsc	3,0
  3053  0625  1E70               	btfss	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3054  0626  2E2C               	goto	i1l992
  3055                           
  3056                           ;timer0.c: 23: pb1Pressed = 1;
  3057  0627  15F0               	bsf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
  3058                           
  3059                           ;timer0.c: 24: pb1Released = 0;
  3060  0628  1270               	bcf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3061                           
  3062                           ;timer0.c: 25: }
  3063                           ;timer0.c: 26: }
  3064  0629  2E2C               	goto	i1l992
  3065  062A                     i1l988:	
  3066                           
  3067                           ;timer0.c: 27: else{
  3068                           ;timer0.c: 28: rtcCounter2 = 0;
  3069  062A  01F8               	clrf	_rtcCounter2	;volatile
  3070                           
  3071                           ;timer0.c: 29: pb1Released = 1;
  3072  062B  1670               	bsf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3073  062C                     i1l992:	
  3074                           
  3075                           ;timer0.c: 30: }
  3076                           ;timer0.c: 31: if(!RB2) {
  3077  062C  1906               	btfsc	6,2	;volatile
  3078  062D  2E3B               	goto	i1l1002
  3079                           
  3080                           ;timer0.c: 32: rtcCounter3++;
  3081  062E  3001               	movlw	1
  3082  062F  00F1               	movwf	??_debounceButtons
  3083  0630  0871               	movf	??_debounceButtons,w
  3084  0631  07F9               	addwf	_rtcCounter3,f	;volatile
  3085                           
  3086                           ;timer0.c: 33: if(rtcCounter3 >10 &&pb2Released){
  3087  0632  300B               	movlw	11
  3088  0633  0279               	subwf	_rtcCounter3,w	;volatile
  3089  0634  1C03               	skipc
  3090  0635  0008               	return
  3091  0636  1F70               	btfss	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3092  0637  0008               	return
  3093                           
  3094                           ;timer0.c: 34: pb2Pressed = 1;
  3095  0638  16F0               	bsf	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
  3096                           
  3097                           ;timer0.c: 35: pb2Released = 0;
  3098  0639  1370               	bcf	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3099                           
  3100                           ;timer0.c: 36: }
  3101                           ;timer0.c: 37: }
  3102  063A  0008               	return
  3103  063B                     i1l1002:	
  3104                           
  3105                           ;timer0.c: 38: else{
  3106                           ;timer0.c: 39: rtcCounter3 = 0;
  3107  063B  01F9               	clrf	_rtcCounter3	;volatile
  3108                           
  3109                           ;timer0.c: 40: pb2Released = 1;
  3110  063C  1770               	bsf	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3111  063D  0008               	return
  3112  063E                     __end_of_debounceButtons:	
  3113  007E                     btemp	set	126	;btemp
  3114  007E                     wtemp	set	126
  3115  007E                     wtemp0	set	126
  3116  0080                     wtemp1	set	128
  3117  0082                     wtemp2	set	130
  3118  0084                     wtemp3	set	132
  3119  0086                     wtemp4	set	134
  3120  0088                     wtemp5	set	136
  3121  007F                     wtemp6	set	127
  3122  007E                     ttemp	set	126
  3123  007E                     ttemp0	set	126
  3124  0081                     ttemp1	set	129
  3125  0084                     ttemp2	set	132
  3126  0087                     ttemp3	set	135
  3127  007F                     ttemp4	set	127
  3128  007E                     ltemp	set	126
  3129  007E                     ltemp0	set	126
  3130  0082                     ltemp1	set	130
  3131  0086                     ltemp2	set	134
  3132  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     80      80
    BANK1            80     13      31
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_debounceButtons

Critical Paths under _main in BANK0

    _main->_moveDeg
    _moveDeg->_round
    _round->___ftadd
    _trunc->___fttol
    ___fttol->___ftdiv
    ___altoft->___ftpack
    ___ftneg->___altoft
    ___ftadd->_trunc
    ___ftdiv->___ftneg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDeg

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12562
                                             11 BANK1      2     2      0
                         _initialise
                               _move
                            _moveDeg
 ---------------------------------------------------------------------------------
 (1) _moveDeg                                             14    11      3   12110
                                             77 BANK0      3     0      3
                                              0 BANK1     11    11      0
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                               _move
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    7604
                                             71 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    3490
                                             49 BANK0      9     6      3
                           ___altoft
                            ___ftneg (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     411
                                             35 BANK0     14    10      4
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2277
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     240
                                             16 BANK0      3     0      3
                           ___altoft (ARG)
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3583
                                             58 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (2) _move                                                 6     5      1     452
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     322
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2688
                                             19 BANK0     16    10      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2008
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              1 COMMON     4     4      0
                    _debounceButtons
 ---------------------------------------------------------------------------------
 (7) _debounceButtons                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialise
   _move
   _moveDeg
     ___ftdiv
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftneg
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _move
     _round
       ___ftadd
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp (ARG)
       ___ftdiv (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp (ARG)

 _isr (ROOT)
   _debounceButtons

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      D      1F       7       38.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      79      12        0.0%
ABS                  0      0      79       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Apr 01 21:21:54 2016

            ___altoft@exp 002E                         pc 0002               __CFG_CP$OFF 0000  
           ___altoft@sign 002F                        l95 0402                        fsr 0004  
            ___ftadd@exp1 0066              ___ftadd@exp2 0065              ___ftadd@sign 0064  
                     l420 00D6                       l480 0352                       l396 03B9  
                     l397 03C1                       l389 03A4                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       _RB4 0034                       _PS0 0408  
                     _PS1 0409                       _PS2 040A              __CFG_CPD$OFF 0000  
                     _PSA 040B                       _isr 063E                       fsr0 0004  
                     indf 0000              __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000  
            ___ftdiv@cntr 003D              ___ftdiv@sign 0042                      l1142 02F8  
                    l1160 032A                      l1170 0355                      l1162 033A  
                    l1174 0363                      l1512 0057                      l1168 0347  
                    l1450 037D                      l1522 006D                      l1460 03A9  
                    l1452 0389                      l1612 03F1                      l1540 009C  
                    l1516 005E                      l1462 03B3                      l1454 038E  
                    l1446 0376                      l1382 04C6                      l1542 00A8  
                    l1534 0087                      l1632 0428                      l1552 00C6  
                    l1544 00AD                      l1386 04ED                      l1626 0417  
                    l1634 0429                      l1562 00FA                      l1554 00D2  
                    l1546 00B1                      l1660 0254                      l1572 011D  
                    l1484 05A2                      l1740 0557                      l1654 023E  
                    l1638 03DE                      l1558 00E8                      l1486 05B4  
                    l1726 01CC                      l1734 054B                      l1496 05DC  
                    l1592 0518                      l1752 0570                      l1682 02B8  
                    l1674 0299                      l1746 0564                      l1758 0580  
                    ?_isr 0071                      _T0IF 005A                      _T0CS 040D  
                    u1105 032B                      u1135 0349                      u2025 00B2  
                    u1075 02FF                      _T0SE 040C                      u2055 00C7  
                    u1621 04B9                      u1622 04BA                      u2255 0266  
                    u1623 04BF                      u1624 04C0                      u2265 0278  
                    u1641 04E0                      u1642 04E1                      u2275 029A  
                    u1643 04E6                      u1644 04E7                      u2285 02AB  
                    u1815 03C8                      u1735 0382                      u2295 02B9  
                    u2367 0586                      u2377 042F                      u1755 039D  
                    u1845 05A7                      u1775 03AC                      u1965 0088  
                    u1995 009D                      i1l64 0648                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 0546              ___ftpack@arg 0020  
            ___ftpack@exp 0023                      _move 03DA                      btemp 007E  
                    ltemp 007E                      start 0012                      ttemp 007E  
                    wtemp 007E              ___fttol@exp1 0050              ___fttol@lval 004C  
                   ??_isr 0072                     ?_main 0071           __end_of___ftadd 0137  
                   ?_move 0020             __CFG_WDTE$OFF 0000           __end_of___ftdiv 02DE  
         __end_of___ftneg 0696           __end_of___fttol 036C                     i1l974 061A  
                   i1l992 062C                     i1l978 061C                     i1l988 062A  
                   _PORTC 0007                     _TRISB 0086                     _TRISC 0087  
                   _cstep 0076                     _frexp 05CE                     _errno 00BD  
       ??_debounceButtons 0071             ___ftpack@sign 0024                     _round 043D  
                   _trunc 04FC           __end_of_moveDeg 0226            __pbitbssCOMMON 0380  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   move@i 0025                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 058C              __end_of_move 043D                    ??_main 00BB  
           ___fttol@sign1 004B                    ??_move 0021                    ?_frexp 0020  
        __end_of___altoft 05CE          __end_of___ftpack 03DA                    ?_round 0067  
                  ?_trunc 0051                    i1l1002 063B                    _TMR0IE 005D  
          __CFG_PWRTE$OFF 0000                    ___ftge 049D                 ??___ftadd 0060  
               ??___ftdiv 0039                 ??___ftneg 0033                 ??___fttol 0047  
               ??_moveDeg 00B0                    saved_w 007E                    round@f 006A  
                  round@x 0067                    trunc@i 0055                    trunc@x 0051  
 __end_of__initialization 002A                ___altoft@c 0028                ___ftadd@f1 005A  
              ___ftadd@f2 005D                ___ftge@ff1 0020                ___ftge@ff2 0023  
              ___ftdiv@f1 0036                ___ftdiv@f2 0033                ___ftdiv@f3 003E  
              ___ftneg@f1 0030                ___fttol@f1 0043            __pcstackCOMMON 0071  
            __pidataBANK1 067C                _pb0Pressed 0381                _pb1Pressed 0383  
           __end_of_frexp 060A                _pb2Pressed 0385             __end_of_round 049D  
           __end_of_trunc 0546                   ??_frexp 0024                   ??_round 006A  
                 ??_trunc 0054                __pbssBANK1 00BD                __pmaintext 0546  
                 ?___ftge 0020                __pintentry 0004                 ?___altoft 0028  
               ?___ftpack 0020           _debounceButtons 060A             move@direction 0020  
         __size_of___ftge 005F                   ___ftadd 002E                   ___ftdiv 0226  
                 ___ftneg 068C                   ___fttol 02DE                ??___altoft 002C  
              ??___ftpack 0025                _initialise 0655                   __ptext1 0137  
                 __ptext2 043D                   __ptext3 04FC                   __ptext4 05CE  
                 __ptext5 02DE                   __ptext6 058C                   __ptext7 068C  
                 __ptext8 002E                   __ptext9 03DA              __size_of_isr 0017  
                 _moveDeg 0137      end_of_initialization 002A        moveDeg@stepsToMove 00BA  
              _rtcCounter 0077   __end_of_debounceButtons 063E               ___ftdiv@exp 0041  
             _pb0Released 0382               _pb1Released 0384            __end_of___ftge 04FC  
             _pb2Released 0386               ?_initialise 0071       start_initialization 0015  
             __end_of_isr 0655                frexp@value 0020          ?_debounceButtons 0071  
                ??___ftge 0026                init_fetch0 066B               __pdataBANK1 00A0  
       __size_of___altoft 0042         __size_of___ftpack 006E               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 0020             __pcstackBANK1 00B0  
     __size_of_initialise 0016                moveDeg@deg 006D                  ?___ftadd 005A  
                ?___ftdiv 0033                  ?___ftneg 0030                  ?___fttol 0043  
                ?_moveDeg 006D            __size_of_frexp 003C            __size_of_round 0060  
          __size_of_trunc 004A         interrupt_function 0004                 frexp@eptr 0023  
        __size_of___ftadd 0109          __size_of___ftdiv 00B8          __size_of___ftneg 000A  
                ___altoft 058C          __size_of___fttol 008E              ??_initialise 0020  
                ___ftpack 036C                  _allSteps 00A0          __size_of_moveDeg 00EF  
                __ptext10 049D                  __ptext11 0226                  __ptext12 036C  
                __ptext13 0655                  __ptext14 063E                  __ptext15 060A  
               move@steps 0024                trunc@expon 0058             __size_of_main 0046  
           __size_of_move 0063        __end_of_initialise 066B               _moveDeg$535 00B1  
             _moveDeg$536 00B4               _moveDeg$537 00B7                  init_ram0 066F  
                intlevel1 0000               _rtcCounter2 0078               _rtcCounter3 0079  
             _motorToggle 0380  __size_of_debounceButtons 0034  
