

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Fri Apr 01 21:36:06 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     	;# 
    33  0001                     	;# 
    34  0002                     	;# 
    35  0003                     	;# 
    36  0004                     	;# 
    37  0005                     	;# 
    38  0006                     	;# 
    39  0007                     	;# 
    40  0008                     	;# 
    41  0009                     	;# 
    42  000A                     	;# 
    43  000B                     	;# 
    44  000C                     	;# 
    45  000D                     	;# 
    46  000E                     	;# 
    47  000E                     	;# 
    48  000F                     	;# 
    49  0010                     	;# 
    50  0011                     	;# 
    51  0012                     	;# 
    52  0013                     	;# 
    53  0014                     	;# 
    54  0015                     	;# 
    55  0015                     	;# 
    56  0016                     	;# 
    57  0017                     	;# 
    58  0018                     	;# 
    59  0019                     	;# 
    60  001A                     	;# 
    61  001B                     	;# 
    62  001B                     	;# 
    63  001C                     	;# 
    64  001D                     	;# 
    65  001E                     	;# 
    66  001F                     	;# 
    67  0081                     	;# 
    68  0085                     	;# 
    69  0086                     	;# 
    70  0087                     	;# 
    71  0088                     	;# 
    72  0089                     	;# 
    73  008C                     	;# 
    74  008D                     	;# 
    75  008E                     	;# 
    76  0091                     	;# 
    77  0092                     	;# 
    78  0093                     	;# 
    79  0094                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  010C                     	;# 
    87  010D                     	;# 
    88  010E                     	;# 
    89  010F                     	;# 
    90  018C                     	;# 
    91  018D                     	;# 
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  000E                     	;# 
   107  000E                     	;# 
   108  000F                     	;# 
   109  0010                     	;# 
   110  0011                     	;# 
   111  0012                     	;# 
   112  0013                     	;# 
   113  0014                     	;# 
   114  0015                     	;# 
   115  0015                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001B                     	;# 
   123  001C                     	;# 
   124  001D                     	;# 
   125  001E                     	;# 
   126  001F                     	;# 
   127  0081                     	;# 
   128  0085                     	;# 
   129  0086                     	;# 
   130  0087                     	;# 
   131  0088                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0094                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009C                     	;# 
   143  009D                     	;# 
   144  009E                     	;# 
   145  009F                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  018C                     	;# 
   151  018D                     	;# 
   152  0000                     	;# 
   153  0001                     	;# 
   154  0002                     	;# 
   155  0003                     	;# 
   156  0004                     	;# 
   157  0005                     	;# 
   158  0006                     	;# 
   159  0007                     	;# 
   160  0008                     	;# 
   161  0009                     	;# 
   162  000A                     	;# 
   163  000B                     	;# 
   164  000C                     	;# 
   165  000D                     	;# 
   166  000E                     	;# 
   167  000E                     	;# 
   168  000F                     	;# 
   169  0010                     	;# 
   170  0011                     	;# 
   171  0012                     	;# 
   172  0013                     	;# 
   173  0014                     	;# 
   174  0015                     	;# 
   175  0015                     	;# 
   176  0016                     	;# 
   177  0017                     	;# 
   178  0018                     	;# 
   179  0019                     	;# 
   180  001A                     	;# 
   181  001B                     	;# 
   182  001B                     	;# 
   183  001C                     	;# 
   184  001D                     	;# 
   185  001E                     	;# 
   186  001F                     	;# 
   187  0081                     	;# 
   188  0085                     	;# 
   189  0086                     	;# 
   190  0087                     	;# 
   191  0088                     	;# 
   192  0089                     	;# 
   193  008C                     	;# 
   194  008D                     	;# 
   195  008E                     	;# 
   196  0091                     	;# 
   197  0092                     	;# 
   198  0093                     	;# 
   199  0094                     	;# 
   200  0098                     	;# 
   201  0099                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK1
   214  063E                     __pidataBANK1:	
   215                           
   216                           ;initializer for _halfSteps
   217  063E  343C               	retlw	60
   218  063F  3400               	retlw	0
   219  0640  342E               	retlw	46
   220  0641  3400               	retlw	0
   221  0642  342B               	retlw	43
   222  0643  3400               	retlw	0
   223  0644  3427               	retlw	39
   224  0645  3400               	retlw	0
   225  0646  3435               	retlw	53
   226  0647  3400               	retlw	0
   227  0648  3417               	retlw	23
   228  0649  3400               	retlw	0
   229  064A  341B               	retlw	27
   230  064B  3400               	retlw	0
   231  064C  341E               	retlw	30
   232  064D  3400               	retlw	0
   233                           
   234                           ;initializer for _wholeSteps
   235  064E  343C               	retlw	60
   236  064F  3400               	retlw	0
   237  0650  342B               	retlw	43
   238  0651  3400               	retlw	0
   239  0652  3435               	retlw	53
   240  0653  3400               	retlw	0
   241  0654  341B               	retlw	27
   242  0655  3400               	retlw	0
   243  0007                     _PORTC	set	7
   244  0001                     _TMR0	set	1
   245  005F                     _GIE	set	95
   246  0030                     _RB0	set	48
   247  0031                     _RB1	set	49
   248  0032                     _RB2	set	50
   249  0033                     _RB3	set	51
   250  0034                     _RB4	set	52
   251  005A                     _T0IF	set	90
   252  005D                     _TMR0IE	set	93
   253  0086                     _TRISB	set	134
   254  0087                     _TRISC	set	135
   255  0408                     _PS0	set	1032
   256  0409                     _PS1	set	1033
   257  040A                     _PS2	set	1034
   258  040B                     _PSA	set	1035
   259  040D                     _T0CS	set	1037
   260  040C                     _T0SE	set	1036
   261                           
   262                           ; #config settings
   263  0000                     
   264                           	psect	cinit
   265  0015                     start_initialization:	
   266  0015                     __initialization:	
   267                           
   268                           ; Clear objects allocated to BITCOMMON
   269  0015  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   270                           
   271                           ; Clear objects allocated to COMMON
   272  0016  01F6               	clrf	__pbssCOMMON& (0+127)
   273  0017  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   274  0018  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   275  0019  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   276                           
   277                           ; Clear objects allocated to BANK1
   278  001A  1683               	bsf	3,5	;RP0=1, select bank1
   279  001B  1303               	bcf	3,6	;RP1=0, select bank1
   280  001C  01C5               	clrf	__pbssBANK1& (0+127)
   281  001D  01C6               	clrf	(__pbssBANK1+1)& (0+127)
   282                           
   283                           ; Initialize objects allocated to BANK1
   284  001E  1383               	bcf	3,7	;select IRP bank0
   285  001F  30B8               	movlw	low (__pdataBANK1+24)
   286  0020  00FD               	movwf	btemp+-1
   287  0021  3006               	movlw	high __pidataBANK1
   288  0022  00FE               	movwf	btemp
   289  0023  303E               	movlw	low __pidataBANK1
   290  0024  00FF               	movwf	btemp+1
   291  0025  30A0               	movlw	low __pdataBANK1
   292  0026  0084               	movwf	4
   293  0027  120A  118A  2687   	fcall	init_ram0
   294  002A                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  002A                     __end_of__initialization:	
   298  002A  0183               	clrf	3
   299  002B  120A  118A  2D46   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bitbssCOMMON
   302  0380                     __pbitbssCOMMON:	
   303  0380                     _motorToggle:	
   304  0380                     	ds	1
   305  0381                     _pb0Pressed:	
   306  0381                     	ds	1
   307  0382                     _pb0Released:	
   308  0382                     	ds	1
   309  0383                     _pb1Pressed:	
   310  0383                     	ds	1
   311  0384                     _pb1Released:	
   312  0384                     	ds	1
   313  0385                     _pb2Pressed:	
   314  0385                     	ds	1
   315  0386                     _pb2Released:	
   316  0386                     	ds	1
   317                           
   318                           	psect	bssCOMMON
   319  0076                     __pbssCOMMON:	
   320  0076                     _cstep:	
   321  0076                     	ds	1
   322  0077                     _rtcCounter:	
   323  0077                     	ds	1
   324  0078                     _rtcCounter2:	
   325  0078                     	ds	1
   326  0079                     _rtcCounter3:	
   327  0079                     	ds	1
   328                           
   329                           	psect	bssBANK1
   330  00C5                     __pbssBANK1:	
   331  00C5                     _errno:	
   332  00C5                     	ds	2
   333                           
   334                           	psect	dataBANK1
   335  00A0                     __pdataBANK1:	
   336  00A0                     _halfSteps:	
   337  00A0                     	ds	16
   338  00B0                     _wholeSteps:	
   339  00B0                     	ds	8
   340                           
   341                           	psect	inittext
   342  0683                     init_fetch0:	
   343                           ;	Called with low address in FSR and high address in W
   344                           
   345  0683  087E               	movf	126,w
   346  0684  008A               	movwf	10
   347  0685  087F               	movf	127,w
   348  0686  0082               	movwf	2
   349  0687                     init_ram0:	
   350                           ;Called with:
   351                           ;	high address of idata address in btemp 
   352                           ;	low address of idata address in btemp+1 
   353                           ;	low address of data in FSR
   354                           ;	high address + 1 of data in btemp-1
   355                           
   356  0687  2683  120A  118A   	fcall	init_fetch0
   357  068A  0080               	movwf	0
   358  068B  0A84               	incf	4,f
   359  068C  0804               	movf	4,w
   360  068D  067D               	xorwf	125,w
   361  068E  1903               	btfsc	3,2
   362  068F  3400               	retlw	0
   363  0690  0AFF               	incf	127,f
   364  0691  1903               	btfsc	3,2
   365  0692  0AFE               	incf	126,f
   366  0693  2E87               	goto	init_ram0
   367                           
   368                           	psect	cstackBANK1
   369  00B8                     __pcstackBANK1:	
   370  00B8                     ??_moveDeg:	
   371                           
   372                           ; 1 bytes @ 0x0
   373  00B8                     	ds	1
   374  00B9                     _moveDeg$537:	
   375                           
   376                           ; 3 bytes @ 0x1
   377  00B9                     	ds	3
   378  00BC                     _moveDeg$538:	
   379                           
   380                           ; 3 bytes @ 0x4
   381  00BC                     	ds	3
   382  00BF                     _moveDeg$539:	
   383                           
   384                           ; 3 bytes @ 0x7
   385  00BF                     	ds	3
   386  00C2                     moveDeg@stepsToMove:	
   387                           
   388                           ; 1 bytes @ 0xA
   389  00C2                     	ds	1
   390  00C3                     ??_main:	
   391                           
   392                           ; 1 bytes @ 0xB
   393  00C3                     	ds	2
   394                           
   395                           	psect	cstackCOMMON
   396  0071                     __pcstackCOMMON:	
   397  0071                     ?_debounceButtons:	
   398  0071                     ??_debounceButtons:	
   399                           ; 1 bytes @ 0x0
   400                           
   401  0071                     ?_isr:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0071                     ?_initialise:	
   405                           ; 1 bytes @ 0x0
   406                           
   407  0071                     ?_main:	
   408                           ; 1 bytes @ 0x0
   409                           
   410                           
   411                           ; 1 bytes @ 0x0
   412  0071                     	ds	1
   413  0072                     ??_isr:	
   414                           
   415                           ; 1 bytes @ 0x1
   416  0072                     	ds	4
   417                           
   418                           	psect	cstackBANK0
   419  0020                     __pcstackBANK0:	
   420  0020                     ?___ftge:	
   421  0020                     ?_move:	
   422                           ; 1 bit 
   423                           
   424  0020                     ??_initialise:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0020                     ?___ftpack:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0020                     ?_frexp:	
   431                           ; 3 bytes @ 0x0
   432                           
   433  0020                     move@direction:	
   434                           ; 3 bytes @ 0x0
   435                           
   436  0020                     ___ftpack@arg:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0020                     ___ftge@ff1:	
   440                           ; 3 bytes @ 0x0
   441                           
   442  0020                     frexp@value:	
   443                           ; 3 bytes @ 0x0
   444                           
   445                           
   446                           ; 3 bytes @ 0x0
   447  0020                     	ds	1
   448  0021                     ??_move:	
   449                           
   450                           ; 1 bytes @ 0x1
   451  0021                     	ds	2
   452  0023                     ___ftpack@exp:	
   453  0023                     frexp@eptr:	
   454                           ; 1 bytes @ 0x3
   455                           
   456  0023                     ___ftge@ff2:	
   457                           ; 1 bytes @ 0x3
   458                           
   459                           
   460                           ; 3 bytes @ 0x3
   461  0023                     	ds	1
   462  0024                     ??_frexp:	
   463  0024                     move@steps:	
   464                           ; 1 bytes @ 0x4
   465                           
   466  0024                     ___ftpack@sign:	
   467                           ; 1 bytes @ 0x4
   468                           
   469                           
   470                           ; 1 bytes @ 0x4
   471  0024                     	ds	1
   472  0025                     ??___ftpack:	
   473  0025                     move@i:	
   474                           ; 1 bytes @ 0x5
   475                           
   476                           
   477                           ; 1 bytes @ 0x5
   478  0025                     	ds	1
   479  0026                     ??___ftge:	
   480                           
   481                           ; 1 bytes @ 0x6
   482  0026                     	ds	2
   483  0028                     ?___altoft:	
   484  0028                     ___altoft@c:	
   485                           ; 3 bytes @ 0x8
   486                           
   487                           
   488                           ; 4 bytes @ 0x8
   489  0028                     	ds	4
   490  002C                     ??___altoft:	
   491                           
   492                           ; 1 bytes @ 0xC
   493  002C                     	ds	2
   494  002E                     ___altoft@exp:	
   495                           
   496                           ; 1 bytes @ 0xE
   497  002E                     	ds	1
   498  002F                     ___altoft@sign:	
   499                           
   500                           ; 1 bytes @ 0xF
   501  002F                     	ds	1
   502  0030                     ?___ftneg:	
   503  0030                     ___ftneg@f1:	
   504                           ; 3 bytes @ 0x10
   505                           
   506                           
   507                           ; 3 bytes @ 0x10
   508  0030                     	ds	3
   509  0033                     ??___ftneg:	
   510  0033                     ?___ftdiv:	
   511                           ; 1 bytes @ 0x13
   512                           
   513  0033                     ___ftdiv@f2:	
   514                           ; 3 bytes @ 0x13
   515                           
   516                           
   517                           ; 3 bytes @ 0x13
   518  0033                     	ds	3
   519  0036                     ___ftdiv@f1:	
   520                           
   521                           ; 3 bytes @ 0x16
   522  0036                     	ds	3
   523  0039                     ??___ftdiv:	
   524                           
   525                           ; 1 bytes @ 0x19
   526  0039                     	ds	4
   527  003D                     ___ftdiv@cntr:	
   528                           
   529                           ; 1 bytes @ 0x1D
   530  003D                     	ds	1
   531  003E                     ___ftdiv@f3:	
   532                           
   533                           ; 3 bytes @ 0x1E
   534  003E                     	ds	3
   535  0041                     ___ftdiv@exp:	
   536                           
   537                           ; 1 bytes @ 0x21
   538  0041                     	ds	1
   539  0042                     ___ftdiv@sign:	
   540                           
   541                           ; 1 bytes @ 0x22
   542  0042                     	ds	1
   543  0043                     ?___fttol:	
   544  0043                     ___fttol@f1:	
   545                           ; 4 bytes @ 0x23
   546                           
   547                           
   548                           ; 3 bytes @ 0x23
   549  0043                     	ds	4
   550  0047                     ??___fttol:	
   551                           
   552                           ; 1 bytes @ 0x27
   553  0047                     	ds	4
   554  004B                     ___fttol@sign1:	
   555                           
   556                           ; 1 bytes @ 0x2B
   557  004B                     	ds	1
   558  004C                     ___fttol@lval:	
   559                           
   560                           ; 4 bytes @ 0x2C
   561  004C                     	ds	4
   562  0050                     ___fttol@exp1:	
   563                           
   564                           ; 1 bytes @ 0x30
   565  0050                     	ds	1
   566  0051                     ?_trunc:	
   567  0051                     trunc@x:	
   568                           ; 3 bytes @ 0x31
   569                           
   570                           
   571                           ; 3 bytes @ 0x31
   572  0051                     	ds	3
   573  0054                     ??_trunc:	
   574                           
   575                           ; 1 bytes @ 0x34
   576  0054                     	ds	1
   577  0055                     trunc@i:	
   578                           
   579                           ; 3 bytes @ 0x35
   580  0055                     	ds	3
   581  0058                     trunc@expon:	
   582                           
   583                           ; 2 bytes @ 0x38
   584  0058                     	ds	2
   585  005A                     ?___ftadd:	
   586  005A                     ___ftadd@f1:	
   587                           ; 3 bytes @ 0x3A
   588                           
   589                           
   590                           ; 3 bytes @ 0x3A
   591  005A                     	ds	3
   592  005D                     ___ftadd@f2:	
   593                           
   594                           ; 3 bytes @ 0x3D
   595  005D                     	ds	3
   596  0060                     ??___ftadd:	
   597                           
   598                           ; 1 bytes @ 0x40
   599  0060                     	ds	4
   600  0064                     ___ftadd@sign:	
   601                           
   602                           ; 1 bytes @ 0x44
   603  0064                     	ds	1
   604  0065                     ___ftadd@exp2:	
   605                           
   606                           ; 1 bytes @ 0x45
   607  0065                     	ds	1
   608  0066                     ___ftadd@exp1:	
   609                           
   610                           ; 1 bytes @ 0x46
   611  0066                     	ds	1
   612  0067                     ?_round:	
   613  0067                     round@x:	
   614                           ; 3 bytes @ 0x47
   615                           
   616                           
   617                           ; 3 bytes @ 0x47
   618  0067                     	ds	3
   619  006A                     ??_round:	
   620  006A                     round@f:	
   621                           ; 1 bytes @ 0x4A
   622                           
   623                           
   624                           ; 3 bytes @ 0x4A
   625  006A                     	ds	3
   626  006D                     ?_moveDeg:	
   627  006D                     moveDeg@deg:	
   628                           ; 1 bytes @ 0x4D
   629                           
   630                           
   631                           ; 3 bytes @ 0x4D
   632  006D                     	ds	3
   633                           
   634                           	psect	maintext
   635  0546                     __pmaintext:	
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   638 ;;
   639 ;; *************** function _main *****************
   640 ;; Defined at:
   641 ;;		line 41 in file "main.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;		None
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      void 
   648 ;; Registers used:
   649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   650 ;; Tracked objects:
   651 ;;		On entry : B00/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   655 ;;      Params:         0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0
   657 ;;      Temps:          0       0       2       0       0
   658 ;;      Totals:         0       0       2       0       0
   659 ;;Total ram usage:        2 bytes
   660 ;; Hardware stack levels required when called:    7
   661 ;; This function calls:
   662 ;;		_initialise
   663 ;;		_move
   664 ;;		_moveDeg
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _main
   672  0546                     _main:	
   673                           
   674                           ;main.c: 43: initialise();
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   678  0546  120A  118A  266D  120A  118A  	fcall	_initialise
   679  054B                     l1738:	
   680                           ;main.c: 45: while(1){
   681                           
   682                           
   683                           ;main.c: 46: if(pb0Pressed){
   684  054B  1CF0               	btfss	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   685  054C  2D57               	goto	l1744
   686                           
   687                           ;main.c: 47: move(1,0);
   688  054D  1283               	bcf	3,5	;RP0=0, select bank0
   689  054E  1303               	bcf	3,6	;RP1=0, select bank0
   690  054F  01A0               	clrf	move@direction
   691  0550  3001               	movlw	1
   692  0551  120A  118A  23DA  120A  118A  	fcall	_move
   693                           
   694                           ;main.c: 48: pb0Pressed = 0;
   695  0556  10F0               	bcf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
   696  0557                     l1744:	
   697                           
   698                           ;main.c: 49: }
   699                           ;main.c: 50: if(pb1Pressed){
   700  0557  1DF0               	btfss	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   701  0558  2D64               	goto	l1750
   702                           
   703                           ;main.c: 51: move(1,1);
   704  0559  1283               	bcf	3,5	;RP0=0, select bank0
   705  055A  1303               	bcf	3,6	;RP1=0, select bank0
   706  055B  01A0               	clrf	move@direction
   707  055C  0AA0               	incf	move@direction,f
   708  055D  3001               	movlw	1
   709  055E  120A  118A  23DA  120A  118A  	fcall	_move
   710                           
   711                           ;main.c: 52: pb1Pressed = 0;
   712  0563  11F0               	bcf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
   713  0564                     l1750:	
   714                           
   715                           ;main.c: 53: }
   716                           ;main.c: 54: if(pb2Pressed){
   717  0564  1EF0               	btfss	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
   718  0565  2D80               	goto	l1762
   719                           
   720                           ;main.c: 55: if(motorToggle){
   721  0566  1C70               	btfss	_motorToggle/(0+8),_motorToggle& (0+7)
   722  0567  2D70               	goto	l1756
   723                           
   724                           ;main.c: 56: moveDeg(-180);
   725  0568  3000               	movlw	0
   726  0569  1283               	bcf	3,5	;RP0=0, select bank0
   727  056A  1303               	bcf	3,6	;RP1=0, select bank0
   728  056B  00ED               	movwf	moveDeg@deg
   729  056C  3034               	movlw	52
   730  056D  00EE               	movwf	moveDeg@deg+1
   731  056E  30C3               	movlw	195
   732  056F  2D77               	goto	L1
   733  0570                     l1756:	
   734                           ;main.c: 57: }
   735                           
   736                           
   737                           ;main.c: 58: else{
   738                           ;main.c: 59: moveDeg(180);
   739  0570  3000               	movlw	0
   740  0571  1283               	bcf	3,5	;RP0=0, select bank0
   741  0572  1303               	bcf	3,6	;RP1=0, select bank0
   742  0573  00ED               	movwf	moveDeg@deg
   743  0574  3034               	movlw	52
   744  0575  00EE               	movwf	moveDeg@deg+1
   745  0576  3043               	movlw	67
   746  0577                     L1:	
   747  0577  00EF               	movwf	moveDeg@deg+2
   748  0578  120A  118A  2137  120A  118A  	fcall	_moveDeg
   749                           
   750                           ;main.c: 60: }
   751                           ;main.c: 61: motorToggle = !motorToggle;
   752  057D  3001               	movlw	(0+1) shl (_motorToggle& (0+7))
   753  057E  06F0               	xorwf	_motorToggle/(0+8),f
   754                           
   755                           ;main.c: 62: pb2Pressed = 0;
   756  057F  12F0               	bcf	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
   757  0580                     l1762:	
   758                           
   759                           ;main.c: 63: }
   760                           ;main.c: 64: _delay((unsigned long)((20)*(20000000/4000.0)));
   761  0580  3082               	movlw	130
   762  0581  1683               	bsf	3,5	;RP0=1, select bank1
   763  0582  1303               	bcf	3,6	;RP1=0, select bank1
   764  0583  00C4               	movwf	(??_main^(0+128)+1)
   765  0584  30DD               	movlw	221
   766  0585  00C3               	movwf	??_main^(0+128)
   767  0586                     u2367:	
   768  0586  0BC3               	decfsz	??_main^(0+128),f
   769  0587  2D86               	goto	u2367
   770  0588  0BC4               	decfsz	(??_main^(0+128)+1),f
   771  0589  2D86               	goto	u2367
   772  058A  2D8B               	nop2
   773  058B  2D4B               	goto	l1738
   774  058C                     __end_of_main:	
   775                           
   776                           	psect	text1
   777  0137                     __ptext1:	
   778 ;; *************** function _moveDeg *****************
   779 ;; Defined at:
   780 ;;		line 46 in file "motor.c"
   781 ;; Parameters:    Size  Location     Type
   782 ;;  deg             3   77[BANK0 ] void 
   783 ;; Auto vars:     Size  Location     Type
   784 ;;  stepsToMove     1   10[BANK1 ] unsigned char 
   785 ;; Return value:  Size  Location     Type
   786 ;;                  1    wreg      void 
   787 ;; Registers used:
   788 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   789 ;; Tracked objects:
   790 ;;		On entry : 0/0
   791 ;;		On exit  : 0/0
   792 ;;		Unchanged: 0/0
   793 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   794 ;;      Params:         0       3       0       0       0
   795 ;;      Locals:         0       0      10       0       0
   796 ;;      Temps:          0       0       1       0       0
   797 ;;      Totals:         0       3      11       0       0
   798 ;;Total ram usage:       14 bytes
   799 ;; Hardware stack levels used:    1
   800 ;; Hardware stack levels required when called:    6
   801 ;; This function calls:
   802 ;;		___ftdiv
   803 ;;		___ftge
   804 ;;		___ftneg
   805 ;;		___fttol
   806 ;;		_move
   807 ;;		_round
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _moveDeg
   815  0137                     _moveDeg:	
   816                           
   817                           ;motor.c: 47: char stepsToMove;
   818                           ;motor.c: 48: if(deg<0){
   819                           
   820                           ;incstack = 0
   821                           ; Regs used in _moveDeg: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   822  0137  1283               	bcf	3,5	;RP0=0, select bank0
   823  0138  1303               	bcf	3,6	;RP1=0, select bank0
   824  0139  086D               	movf	moveDeg@deg,w
   825  013A  00A0               	movwf	___ftge@ff1
   826  013B  086E               	movf	moveDeg@deg+1,w
   827  013C  00A1               	movwf	___ftge@ff1+1
   828  013D  086F               	movf	moveDeg@deg+2,w
   829  013E  00A2               	movwf	___ftge@ff1+2
   830  013F  3000               	movlw	0
   831  0140  00A3               	movwf	___ftge@ff2
   832  0141  3000               	movlw	0
   833  0142  00A4               	movwf	___ftge@ff2+1
   834  0143  3000               	movlw	0
   835  0144  00A5               	movwf	___ftge@ff2+2
   836  0145  120A  118A  249D  120A  118A  	fcall	___ftge
   837  014A  1803               	btfsc	3,0
   838  014B  29CC               	goto	l1730
   839                           
   840                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   841  014C  1283               	bcf	3,5	;RP0=0, select bank0
   842  014D  1303               	bcf	3,6	;RP1=0, select bank0
   843  014E  086D               	movf	moveDeg@deg,w
   844  014F  00B0               	movwf	___ftneg@f1
   845  0150  086E               	movf	moveDeg@deg+1,w
   846  0151  00B1               	movwf	___ftneg@f1+1
   847  0152  086F               	movf	moveDeg@deg+2,w
   848  0153  00B2               	movwf	___ftneg@f1+2
   849  0154  120A  118A  2694  120A  118A  	fcall	___ftneg
   850  0159  1283               	bcf	3,5	;RP0=0, select bank0
   851  015A  1303               	bcf	3,6	;RP1=0, select bank0
   852  015B  0830               	movf	?___ftneg,w
   853  015C  00B6               	movwf	___ftdiv@f1
   854  015D  0831               	movf	?___ftneg+1,w
   855  015E  00B7               	movwf	___ftdiv@f1+1
   856  015F  0832               	movf	?___ftneg+2,w
   857  0160  00B8               	movwf	___ftdiv@f1+2
   858  0161  3000               	movlw	0
   859  0162  00B3               	movwf	___ftdiv@f2
   860  0163  3070               	movlw	112
   861  0164  00B4               	movwf	___ftdiv@f2+1
   862  0165  3040               	movlw	64
   863  0166  00B5               	movwf	___ftdiv@f2+2
   864  0167  120A  118A  2226  120A  118A  	fcall	___ftdiv
   865  016C  1283               	bcf	3,5	;RP0=0, select bank0
   866  016D  1303               	bcf	3,6	;RP1=0, select bank0
   867  016E  0833               	movf	?___ftdiv,w
   868  016F  1683               	bsf	3,5	;RP0=1, select bank1
   869  0170  1303               	bcf	3,6	;RP1=0, select bank1
   870  0171  00B9               	movwf	_moveDeg$537^(0+128)
   871  0172  1283               	bcf	3,5	;RP0=0, select bank0
   872  0173  1303               	bcf	3,6	;RP1=0, select bank0
   873  0174  0834               	movf	?___ftdiv+1,w
   874  0175  1683               	bsf	3,5	;RP0=1, select bank1
   875  0176  1303               	bcf	3,6	;RP1=0, select bank1
   876  0177  00BA               	movwf	(_moveDeg$537+1)^(0+128)
   877  0178  1283               	bcf	3,5	;RP0=0, select bank0
   878  0179  1303               	bcf	3,6	;RP1=0, select bank0
   879  017A  0835               	movf	?___ftdiv+2,w
   880  017B  1683               	bsf	3,5	;RP0=1, select bank1
   881  017C  1303               	bcf	3,6	;RP1=0, select bank1
   882  017D  00BB               	movwf	(_moveDeg$537+2)^(0+128)
   883                           
   884                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   885  017E  0839               	movf	_moveDeg$537^(0+128),w
   886  017F  1283               	bcf	3,5	;RP0=0, select bank0
   887  0180  1303               	bcf	3,6	;RP1=0, select bank0
   888  0181  00E7               	movwf	round@x
   889  0182  1683               	bsf	3,5	;RP0=1, select bank1
   890  0183  1303               	bcf	3,6	;RP1=0, select bank1
   891  0184  083A               	movf	(_moveDeg$537+1)^(0+128),w
   892  0185  1283               	bcf	3,5	;RP0=0, select bank0
   893  0186  1303               	bcf	3,6	;RP1=0, select bank0
   894  0187  00E8               	movwf	round@x+1
   895  0188  1683               	bsf	3,5	;RP0=1, select bank1
   896  0189  1303               	bcf	3,6	;RP1=0, select bank1
   897  018A  083B               	movf	(_moveDeg$537+2)^(0+128),w
   898  018B  1283               	bcf	3,5	;RP0=0, select bank0
   899  018C  1303               	bcf	3,6	;RP1=0, select bank0
   900  018D  00E9               	movwf	round@x+2
   901  018E  120A  118A  243D  120A  118A  	fcall	_round
   902  0193  1283               	bcf	3,5	;RP0=0, select bank0
   903  0194  1303               	bcf	3,6	;RP1=0, select bank0
   904  0195  0867               	movf	?_round,w
   905  0196  1683               	bsf	3,5	;RP0=1, select bank1
   906  0197  1303               	bcf	3,6	;RP1=0, select bank1
   907  0198  00BC               	movwf	_moveDeg$538^(0+128)
   908  0199  1283               	bcf	3,5	;RP0=0, select bank0
   909  019A  1303               	bcf	3,6	;RP1=0, select bank0
   910  019B  0868               	movf	?_round+1,w
   911  019C  1683               	bsf	3,5	;RP0=1, select bank1
   912  019D  1303               	bcf	3,6	;RP1=0, select bank1
   913  019E  00BD               	movwf	(_moveDeg$538+1)^(0+128)
   914  019F  1283               	bcf	3,5	;RP0=0, select bank0
   915  01A0  1303               	bcf	3,6	;RP1=0, select bank0
   916  01A1  0869               	movf	?_round+2,w
   917  01A2  1683               	bsf	3,5	;RP0=1, select bank1
   918  01A3  1303               	bcf	3,6	;RP1=0, select bank1
   919  01A4  00BE               	movwf	(_moveDeg$538+2)^(0+128)
   920                           
   921                           ;motor.c: 49: stepsToMove = (char) round(-deg/(7.5/2.0));
   922  01A5  083C               	movf	_moveDeg$538^(0+128),w
   923  01A6  1283               	bcf	3,5	;RP0=0, select bank0
   924  01A7  1303               	bcf	3,6	;RP1=0, select bank0
   925  01A8  00C3               	movwf	___fttol@f1
   926  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   927  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   928  01AB  083D               	movf	(_moveDeg$538+1)^(0+128),w
   929  01AC  1283               	bcf	3,5	;RP0=0, select bank0
   930  01AD  1303               	bcf	3,6	;RP1=0, select bank0
   931  01AE  00C4               	movwf	___fttol@f1+1
   932  01AF  1683               	bsf	3,5	;RP0=1, select bank1
   933  01B0  1303               	bcf	3,6	;RP1=0, select bank1
   934  01B1  083E               	movf	(_moveDeg$538+2)^(0+128),w
   935  01B2  1283               	bcf	3,5	;RP0=0, select bank0
   936  01B3  1303               	bcf	3,6	;RP1=0, select bank0
   937  01B4  00C5               	movwf	___fttol@f1+2
   938  01B5  120A  118A  22DE  120A  118A  	fcall	___fttol
   939  01BA  1283               	bcf	3,5	;RP0=0, select bank0
   940  01BB  1303               	bcf	3,6	;RP1=0, select bank0
   941  01BC  0843               	movf	?___fttol,w
   942  01BD  1683               	bsf	3,5	;RP0=1, select bank1
   943  01BE  1303               	bcf	3,6	;RP1=0, select bank1
   944  01BF  00B8               	movwf	??_moveDeg^(0+128)
   945  01C0  0838               	movf	??_moveDeg^(0+128),w
   946  01C1  00C2               	movwf	moveDeg@stepsToMove^(0+128)
   947                           
   948                           ;motor.c: 50: move(stepsToMove,0);
   949  01C2  1283               	bcf	3,5	;RP0=0, select bank0
   950  01C3  1303               	bcf	3,6	;RP1=0, select bank0
   951  01C4  01A0               	clrf	move@direction
   952  01C5  1683               	bsf	3,5	;RP0=1, select bank1
   953  01C6  1303               	bcf	3,6	;RP1=0, select bank1
   954  01C7  0842               	movf	moveDeg@stepsToMove^(0+128),w
   955  01C8  120A  118A  23DA   	fcall	_move
   956                           
   957                           ;motor.c: 51: }
   958  01CB  0008               	return
   959  01CC                     l1730:	
   960                           
   961                           ;motor.c: 52: else{
   962                           ;motor.c: 53: stepsToMove = (char) round(deg/(7.5/2.0));
   963  01CC  1283               	bcf	3,5	;RP0=0, select bank0
   964  01CD  1303               	bcf	3,6	;RP1=0, select bank0
   965  01CE  086D               	movf	moveDeg@deg,w
   966  01CF  00B6               	movwf	___ftdiv@f1
   967  01D0  086E               	movf	moveDeg@deg+1,w
   968  01D1  00B7               	movwf	___ftdiv@f1+1
   969  01D2  086F               	movf	moveDeg@deg+2,w
   970  01D3  00B8               	movwf	___ftdiv@f1+2
   971  01D4  3000               	movlw	0
   972  01D5  00B3               	movwf	___ftdiv@f2
   973  01D6  3070               	movlw	112
   974  01D7  00B4               	movwf	___ftdiv@f2+1
   975  01D8  3040               	movlw	64
   976  01D9  00B5               	movwf	___ftdiv@f2+2
   977  01DA  120A  118A  2226  120A  118A  	fcall	___ftdiv
   978  01DF  1283               	bcf	3,5	;RP0=0, select bank0
   979  01E0  1303               	bcf	3,6	;RP1=0, select bank0
   980  01E1  0833               	movf	?___ftdiv,w
   981  01E2  00E7               	movwf	round@x
   982  01E3  0834               	movf	?___ftdiv+1,w
   983  01E4  00E8               	movwf	round@x+1
   984  01E5  0835               	movf	?___ftdiv+2,w
   985  01E6  00E9               	movwf	round@x+2
   986  01E7  120A  118A  243D  120A  118A  	fcall	_round
   987  01EC  1283               	bcf	3,5	;RP0=0, select bank0
   988  01ED  1303               	bcf	3,6	;RP1=0, select bank0
   989  01EE  0867               	movf	?_round,w
   990  01EF  1683               	bsf	3,5	;RP0=1, select bank1
   991  01F0  1303               	bcf	3,6	;RP1=0, select bank1
   992  01F1  00BF               	movwf	_moveDeg$539^(0+128)
   993  01F2  1283               	bcf	3,5	;RP0=0, select bank0
   994  01F3  1303               	bcf	3,6	;RP1=0, select bank0
   995  01F4  0868               	movf	?_round+1,w
   996  01F5  1683               	bsf	3,5	;RP0=1, select bank1
   997  01F6  1303               	bcf	3,6	;RP1=0, select bank1
   998  01F7  00C0               	movwf	(_moveDeg$539+1)^(0+128)
   999  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1000  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1001  01FA  0869               	movf	?_round+2,w
  1002  01FB  1683               	bsf	3,5	;RP0=1, select bank1
  1003  01FC  1303               	bcf	3,6	;RP1=0, select bank1
  1004  01FD  00C1               	movwf	(_moveDeg$539+2)^(0+128)
  1005                           
  1006                           ;motor.c: 52: else{
  1007                           ;motor.c: 53: stepsToMove = (char) round(deg/(7.5/2.0));
  1008  01FE  083F               	movf	_moveDeg$539^(0+128),w
  1009  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  1010  0200  1303               	bcf	3,6	;RP1=0, select bank0
  1011  0201  00C3               	movwf	___fttol@f1
  1012  0202  1683               	bsf	3,5	;RP0=1, select bank1
  1013  0203  1303               	bcf	3,6	;RP1=0, select bank1
  1014  0204  0840               	movf	(_moveDeg$539+1)^(0+128),w
  1015  0205  1283               	bcf	3,5	;RP0=0, select bank0
  1016  0206  1303               	bcf	3,6	;RP1=0, select bank0
  1017  0207  00C4               	movwf	___fttol@f1+1
  1018  0208  1683               	bsf	3,5	;RP0=1, select bank1
  1019  0209  1303               	bcf	3,6	;RP1=0, select bank1
  1020  020A  0841               	movf	(_moveDeg$539+2)^(0+128),w
  1021  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1022  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1023  020D  00C5               	movwf	___fttol@f1+2
  1024  020E  120A  118A  22DE  120A  118A  	fcall	___fttol
  1025  0213  1283               	bcf	3,5	;RP0=0, select bank0
  1026  0214  1303               	bcf	3,6	;RP1=0, select bank0
  1027  0215  0843               	movf	?___fttol,w
  1028  0216  1683               	bsf	3,5	;RP0=1, select bank1
  1029  0217  1303               	bcf	3,6	;RP1=0, select bank1
  1030  0218  00B8               	movwf	??_moveDeg^(0+128)
  1031  0219  0838               	movf	??_moveDeg^(0+128),w
  1032  021A  00C2               	movwf	moveDeg@stepsToMove^(0+128)
  1033                           
  1034                           ;motor.c: 54: move(stepsToMove,1);
  1035  021B  1283               	bcf	3,5	;RP0=0, select bank0
  1036  021C  1303               	bcf	3,6	;RP1=0, select bank0
  1037  021D  01A0               	clrf	move@direction
  1038  021E  0AA0               	incf	move@direction,f
  1039  021F  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0220  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0221  0842               	movf	moveDeg@stepsToMove^(0+128),w
  1042  0222  120A  118A  23DA   	fcall	_move
  1043  0225  0008               	return
  1044  0226                     __end_of_moveDeg:	
  1045                           
  1046                           	psect	text2
  1047  043D                     __ptext2:	
  1048 ;; *************** function _round *****************
  1049 ;; Defined at:
  1050 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\round.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;  x               3   71[BANK0 ] void 
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;  f               3   74[BANK0 ] void 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  3   71[BANK0 ] void 
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       3       0       0       0
  1065 ;;      Locals:         0       3       0       0       0
  1066 ;;      Temps:          0       0       0       0       0
  1067 ;;      Totals:         0       6       0       0       0
  1068 ;;Total ram usage:        6 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    5
  1071 ;; This function calls:
  1072 ;;		___ftadd
  1073 ;;		___ftneg
  1074 ;;		_trunc
  1075 ;; This function is called by:
  1076 ;;		_moveDeg
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           
  1081                           ;psect for function _round
  1082  043D                     _round:	
  1083                           
  1084                           ;incstack = 0
  1085                           ; Regs used in _round: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1086  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1087  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1088  043F  0867               	movf	round@x,w
  1089  0440  00DA               	movwf	___ftadd@f1
  1090  0441  0868               	movf	round@x+1,w
  1091  0442  00DB               	movwf	___ftadd@f1+1
  1092  0443  0869               	movf	round@x+2,w
  1093  0444  00DC               	movwf	___ftadd@f1+2
  1094  0445  0867               	movf	round@x,w
  1095  0446  00D1               	movwf	trunc@x
  1096  0447  0868               	movf	round@x+1,w
  1097  0448  00D2               	movwf	trunc@x+1
  1098  0449  0869               	movf	round@x+2,w
  1099  044A  00D3               	movwf	trunc@x+2
  1100  044B  120A  118A  24FC  120A  118A  	fcall	_trunc
  1101  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1102  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1103  0452  0851               	movf	?_trunc,w
  1104  0453  00B0               	movwf	___ftneg@f1
  1105  0454  0852               	movf	?_trunc+1,w
  1106  0455  00B1               	movwf	___ftneg@f1+1
  1107  0456  0853               	movf	?_trunc+2,w
  1108  0457  00B2               	movwf	___ftneg@f1+2
  1109  0458  120A  118A  2694  120A  118A  	fcall	___ftneg
  1110  045D  1283               	bcf	3,5	;RP0=0, select bank0
  1111  045E  1303               	bcf	3,6	;RP1=0, select bank0
  1112  045F  0830               	movf	?___ftneg,w
  1113  0460  00DD               	movwf	___ftadd@f2
  1114  0461  0831               	movf	?___ftneg+1,w
  1115  0462  00DE               	movwf	___ftadd@f2+1
  1116  0463  0832               	movf	?___ftneg+2,w
  1117  0464  00DF               	movwf	___ftadd@f2+2
  1118  0465  120A  118A  202E  120A  118A  	fcall	___ftadd
  1119  046A  1283               	bcf	3,5	;RP0=0, select bank0
  1120  046B  1303               	bcf	3,6	;RP1=0, select bank0
  1121  046C  085A               	movf	?___ftadd,w
  1122  046D  00EA               	movwf	round@f
  1123  046E  085B               	movf	?___ftadd+1,w
  1124  046F  00EB               	movwf	round@f+1
  1125  0470  085C               	movf	?___ftadd+2,w
  1126  0471  00EC               	movwf	round@f+2
  1127  0472  086A               	movf	round@f,w
  1128  0473  00DA               	movwf	___ftadd@f1
  1129  0474  086B               	movf	round@f+1,w
  1130  0475  00DB               	movwf	___ftadd@f1+1
  1131  0476  086C               	movf	round@f+2,w
  1132  0477  00DC               	movwf	___ftadd@f1+2
  1133  0478  0867               	movf	round@x,w
  1134  0479  00DD               	movwf	___ftadd@f2
  1135  047A  0868               	movf	round@x+1,w
  1136  047B  00DE               	movwf	___ftadd@f2+1
  1137  047C  0869               	movf	round@x+2,w
  1138  047D  00DF               	movwf	___ftadd@f2+2
  1139  047E  120A  118A  202E  120A  118A  	fcall	___ftadd
  1140  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0485  085A               	movf	?___ftadd,w
  1143  0486  00E7               	movwf	round@x
  1144  0487  085B               	movf	?___ftadd+1,w
  1145  0488  00E8               	movwf	round@x+1
  1146  0489  085C               	movf	?___ftadd+2,w
  1147  048A  00E9               	movwf	round@x+2
  1148  048B  0867               	movf	round@x,w
  1149  048C  00D1               	movwf	trunc@x
  1150  048D  0868               	movf	round@x+1,w
  1151  048E  00D2               	movwf	trunc@x+1
  1152  048F  0869               	movf	round@x+2,w
  1153  0490  00D3               	movwf	trunc@x+2
  1154  0491  120A  118A  24FC   	fcall	_trunc
  1155  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1156  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1157  0496  0851               	movf	?_trunc,w
  1158  0497  00E7               	movwf	?_round
  1159  0498  0852               	movf	?_trunc+1,w
  1160  0499  00E8               	movwf	?_round+1
  1161  049A  0853               	movf	?_trunc+2,w
  1162  049B  00E9               	movwf	?_round+2
  1163  049C  0008               	return
  1164  049D                     __end_of_round:	
  1165                           
  1166                           	psect	text3
  1167  04FC                     __ptext3:	
  1168 ;; *************** function _trunc *****************
  1169 ;; Defined at:
  1170 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\trunc.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  x               3   49[BANK0 ] void 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  i               3   53[BANK0 ] void 
  1175 ;;  expon           2   56[BANK0 ] int 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  3   49[BANK0 ] int 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1185 ;;      Params:         0       3       0       0       0
  1186 ;;      Locals:         0       5       0       0       0
  1187 ;;      Temps:          0       1       0       0       0
  1188 ;;      Totals:         0       9       0       0       0
  1189 ;;Total ram usage:        9 bytes
  1190 ;; Hardware stack levels used:    1
  1191 ;; Hardware stack levels required when called:    4
  1192 ;; This function calls:
  1193 ;;		___altoft
  1194 ;;		___fttol
  1195 ;;		_frexp
  1196 ;; This function is called by:
  1197 ;;		_round
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           
  1202                           ;psect for function _trunc
  1203  04FC                     _trunc:	
  1204                           
  1205                           ;incstack = 0
  1206                           ; Regs used in _trunc: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1207  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  1208  04FD  1303               	bcf	3,6	;RP1=0, select bank0
  1209  04FE  0851               	movf	trunc@x,w
  1210  04FF  00A0               	movwf	frexp@value
  1211  0500  0852               	movf	trunc@x+1,w
  1212  0501  00A1               	movwf	frexp@value+1
  1213  0502  0853               	movf	trunc@x+2,w
  1214  0503  00A2               	movwf	frexp@value+2
  1215  0504  3058               	movlw	(low (trunc@expon| 0))& (0+255)
  1216  0505  00D4               	movwf	??_trunc
  1217  0506  0854               	movf	??_trunc,w
  1218  0507  00A3               	movwf	frexp@eptr
  1219  0508  120A  118A  25CE  120A  118A  	fcall	_frexp
  1220  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1221  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1222  050F  1FD9               	btfss	trunc@expon+1,7
  1223  0510  2D18               	goto	l1596
  1224  0511  3000               	movlw	0
  1225  0512  00D1               	movwf	?_trunc
  1226  0513  3000               	movlw	0
  1227  0514  00D2               	movwf	?_trunc+1
  1228  0515  3000               	movlw	0
  1229  0516  00D3               	movwf	?_trunc+2
  1230  0517  0008               	return
  1231  0518                     l1596:	
  1232  0518  3000               	movlw	0
  1233  0519  0259               	subwf	trunc@expon+1,w
  1234  051A  3015               	movlw	21
  1235  051B  1903               	skipnz
  1236  051C  0258               	subwf	trunc@expon,w
  1237  051D  1803               	btfsc	3,0
  1238  051E  0008               	return
  1239  051F  0851               	movf	trunc@x,w
  1240  0520  00C3               	movwf	___fttol@f1
  1241  0521  0852               	movf	trunc@x+1,w
  1242  0522  00C4               	movwf	___fttol@f1+1
  1243  0523  0853               	movf	trunc@x+2,w
  1244  0524  00C5               	movwf	___fttol@f1+2
  1245  0525  120A  118A  22DE  120A  118A  	fcall	___fttol
  1246  052A  1283               	bcf	3,5	;RP0=0, select bank0
  1247  052B  1303               	bcf	3,6	;RP1=0, select bank0
  1248  052C  0846               	movf	?___fttol+3,w
  1249  052D  00AB               	movwf	___altoft@c+3
  1250  052E  0845               	movf	?___fttol+2,w
  1251  052F  00AA               	movwf	___altoft@c+2
  1252  0530  0844               	movf	?___fttol+1,w
  1253  0531  00A9               	movwf	___altoft@c+1
  1254  0532  0843               	movf	?___fttol,w
  1255  0533  00A8               	movwf	___altoft@c
  1256  0534  120A  118A  258C   	fcall	___altoft
  1257  0537  1283               	bcf	3,5	;RP0=0, select bank0
  1258  0538  1303               	bcf	3,6	;RP1=0, select bank0
  1259  0539  0828               	movf	?___altoft,w
  1260  053A  00D5               	movwf	trunc@i
  1261  053B  0829               	movf	?___altoft+1,w
  1262  053C  00D6               	movwf	trunc@i+1
  1263  053D  082A               	movf	?___altoft+2,w
  1264  053E  00D7               	movwf	trunc@i+2
  1265  053F  0855               	movf	trunc@i,w
  1266  0540  00D1               	movwf	?_trunc
  1267  0541  0856               	movf	trunc@i+1,w
  1268  0542  00D2               	movwf	?_trunc+1
  1269  0543  0857               	movf	trunc@i+2,w
  1270  0544  00D3               	movwf	?_trunc+2
  1271  0545  0008               	return
  1272  0546                     __end_of_trunc:	
  1273                           
  1274                           	psect	text4
  1275  05CE                     __ptext4:	
  1276 ;; *************** function _frexp *****************
  1277 ;; Defined at:
  1278 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\frexp.c"
  1279 ;; Parameters:    Size  Location     Type
  1280 ;;  value           3    0[BANK0 ] int 
  1281 ;;  eptr            1    3[BANK0 ] PTR int 
  1282 ;;		 -> trunc@expon(2), 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;		None
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  3    0[BANK0 ] PTR int 
  1287 ;; Registers used:
  1288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       4       0       0       0
  1295 ;;      Locals:         0       0       0       0       0
  1296 ;;      Temps:          0       2       0       0       0
  1297 ;;      Totals:         0       6       0       0       0
  1298 ;;Total ram usage:        6 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    2
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_trunc
  1305 ;; This function uses a non-reentrant model
  1306 ;;
  1307                           
  1308                           
  1309                           ;psect for function _frexp
  1310  05CE                     _frexp:	
  1311                           
  1312                           ;incstack = 0
  1313                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1]
  1314  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  1315  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  1316  05D0  0822               	movf	frexp@value+2,w
  1317  05D1  0421               	iorwf	frexp@value+1,w
  1318  05D2  0420               	iorwf	frexp@value,w
  1319  05D3  1D03               	skipz
  1320  05D4  2DDC               	goto	l1500
  1321  05D5  0823               	movf	frexp@eptr,w
  1322  05D6  0084               	movwf	4
  1323  05D7  1383               	bcf	3,7	;select IRP bank0
  1324  05D8  0180               	clrf	0
  1325  05D9  0A84               	incf	4,f
  1326  05DA  0180               	clrf	0
  1327                           
  1328                           ;	Return value of _frexp is never used
  1329  05DB  0008               	return
  1330  05DC                     l1500:	
  1331  05DC  0822               	movf	frexp@value+2,w
  1332  05DD  397F               	andlw	127
  1333  05DE  00A4               	movwf	??_frexp
  1334  05DF  01A5               	clrf	??_frexp+1
  1335  05E0  1003               	clrc
  1336  05E1  0DA4               	rlf	??_frexp,f
  1337  05E2  0DA5               	rlf	??_frexp+1,f
  1338  05E3  0823               	movf	frexp@eptr,w
  1339  05E4  0084               	movwf	4
  1340  05E5  0824               	movf	??_frexp,w
  1341  05E6  1383               	bcf	3,7	;select IRP bank0
  1342  05E7  0080               	movwf	0
  1343  05E8  0A84               	incf	4,f
  1344  05E9  0825               	movf	??_frexp+1,w
  1345  05EA  0080               	movwf	0
  1346  05EB  0D21               	rlf	frexp@value+1,w
  1347  05EC  0D21               	rlf	frexp@value+1,w
  1348  05ED  3901               	andlw	1
  1349  05EE  00A4               	movwf	??_frexp
  1350  05EF  01A5               	clrf	??_frexp+1
  1351  05F0  0823               	movf	frexp@eptr,w
  1352  05F1  0084               	movwf	4
  1353  05F2  0824               	movf	??_frexp,w
  1354  05F3  0480               	iorwf	0,f
  1355  05F4  0A84               	incf	4,f
  1356  05F5  0825               	movf	??_frexp+1,w
  1357  05F6  0480               	iorwf	0,f
  1358  05F7  0823               	movf	frexp@eptr,w
  1359  05F8  0084               	movwf	4
  1360  05F9  3082               	movlw	130
  1361  05FA  0780               	addwf	0,f
  1362  05FB  0F84               	incfsz	4,f
  1363  05FC  0800               	movf	0,w
  1364  05FD  1803               	skipnc
  1365  05FE  0A00               	incf	0,w
  1366  05FF  00FF               	movwf	127
  1367  0600  30FF               	movlw	255
  1368  0601  077F               	addwf	127,w
  1369  0602  0080               	movwf	0
  1370  0603  0384               	decf	4,f
  1371  0604  0822               	movf	frexp@value+2,w
  1372  0605  3980               	andlw	-128
  1373  0606  383F               	iorlw	63
  1374  0607  00A2               	movwf	frexp@value+2
  1375  0608  13A1               	bcf	frexp@value+1,7
  1376  0609  0008               	return
  1377  060A                     __end_of_frexp:	
  1378                           ;	Return value of _frexp is never used
  1379                           
  1380                           
  1381                           	psect	text5
  1382  02DE                     __ptext5:	
  1383 ;; *************** function ___fttol *****************
  1384 ;; Defined at:
  1385 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;  f1              3   35[BANK0 ] float 
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;  lval            4   44[BANK0 ] unsigned long 
  1390 ;;  exp1            1   48[BANK0 ] unsigned char 
  1391 ;;  sign1           1   43[BANK0 ] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  4   35[BANK0 ] long 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       4       0       0       0
  1402 ;;      Locals:         0       6       0       0       0
  1403 ;;      Temps:          0       4       0       0       0
  1404 ;;      Totals:         0      14       0       0       0
  1405 ;;Total ram usage:       14 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    2
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_moveDeg
  1412 ;;		_trunc
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function ___fttol
  1418  02DE                     ___fttol:	
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  1422  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  1423  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  1424  02E0  0843               	movf	___fttol@f1,w
  1425  02E1  00C7               	movwf	??___fttol
  1426  02E2  0844               	movf	___fttol@f1+1,w
  1427  02E3  00C8               	movwf	??___fttol+1
  1428  02E4  0845               	movf	___fttol@f1+2,w
  1429  02E5  00C9               	movwf	??___fttol+2
  1430  02E6  1003               	clrc
  1431  02E7  0D48               	rlf	??___fttol+1,w
  1432  02E8  0D49               	rlf	??___fttol+2,w
  1433  02E9  00CA               	movwf	??___fttol+3
  1434  02EA  084A               	movf	??___fttol+3,w
  1435  02EB  00D0               	movwf	___fttol@exp1
  1436  02EC  0850               	movf	___fttol@exp1,w
  1437  02ED  1D03               	btfss	3,2
  1438  02EE  2AF8               	goto	l1146
  1439  02EF  3000               	movlw	0
  1440  02F0  00C6               	movwf	?___fttol+3
  1441  02F1  3000               	movlw	0
  1442  02F2  00C5               	movwf	?___fttol+2
  1443  02F3  3000               	movlw	0
  1444  02F4  00C4               	movwf	?___fttol+1
  1445  02F5  3000               	movlw	0
  1446  02F6  00C3               	movwf	?___fttol
  1447  02F7  0008               	return
  1448  02F8                     l1146:	
  1449  02F8  0843               	movf	___fttol@f1,w
  1450  02F9  00C7               	movwf	??___fttol
  1451  02FA  0844               	movf	___fttol@f1+1,w
  1452  02FB  00C8               	movwf	??___fttol+1
  1453  02FC  0845               	movf	___fttol@f1+2,w
  1454  02FD  00C9               	movwf	??___fttol+2
  1455  02FE  3017               	movlw	23
  1456  02FF                     u1075:	
  1457  02FF  1003               	clrc
  1458  0300  0CC9               	rrf	??___fttol+2,f
  1459  0301  0CC8               	rrf	??___fttol+1,f
  1460  0302  0CC7               	rrf	??___fttol,f
  1461  0303  3EFF               	addlw	-1
  1462  0304  1D03               	skipz
  1463  0305  2AFF               	goto	u1075
  1464  0306  0847               	movf	??___fttol,w
  1465  0307  00CA               	movwf	??___fttol+3
  1466  0308  084A               	movf	??___fttol+3,w
  1467  0309  00CB               	movwf	___fttol@sign1
  1468  030A  17C4               	bsf	___fttol@f1+1,7
  1469  030B  30FF               	movlw	255
  1470  030C  05C3               	andwf	___fttol@f1,f
  1471  030D  30FF               	movlw	255
  1472  030E  05C4               	andwf	___fttol@f1+1,f
  1473  030F  3000               	movlw	0
  1474  0310  05C5               	andwf	___fttol@f1+2,f
  1475  0311  0843               	movf	___fttol@f1,w
  1476  0312  00CC               	movwf	___fttol@lval
  1477  0313  0844               	movf	___fttol@f1+1,w
  1478  0314  00CD               	movwf	___fttol@lval+1
  1479  0315  0845               	movf	___fttol@f1+2,w
  1480  0316  00CE               	movwf	___fttol@lval+2
  1481  0317  01CF               	clrf	___fttol@lval+3
  1482  0318  308E               	movlw	142
  1483  0319  02D0               	subwf	___fttol@exp1,f
  1484  031A  1FD0               	btfss	___fttol@exp1,7
  1485  031B  2B3A               	goto	l1166
  1486  031C  0850               	movf	___fttol@exp1,w
  1487  031D  3A80               	xorlw	128
  1488  031E  3E8F               	addlw	143
  1489  031F  1803               	skipnc
  1490  0320  2B2A               	goto	l1164
  1491  0321  3000               	movlw	0
  1492  0322  00C6               	movwf	?___fttol+3
  1493  0323  3000               	movlw	0
  1494  0324  00C5               	movwf	?___fttol+2
  1495  0325  3000               	movlw	0
  1496  0326  00C4               	movwf	?___fttol+1
  1497  0327  3000               	movlw	0
  1498  0328  00C3               	movwf	?___fttol
  1499  0329  0008               	return
  1500  032A                     l1164:	
  1501  032A  3001               	movlw	1
  1502  032B                     u1105:	
  1503  032B  1003               	clrc
  1504  032C  0CCF               	rrf	___fttol@lval+3,f
  1505  032D  0CCE               	rrf	___fttol@lval+2,f
  1506  032E  0CCD               	rrf	___fttol@lval+1,f
  1507  032F  0CCC               	rrf	___fttol@lval,f
  1508  0330  3EFF               	addlw	-1
  1509  0331  1D03               	skipz
  1510  0332  2B2B               	goto	u1105
  1511  0333  3001               	movlw	1
  1512  0334  00C7               	movwf	??___fttol
  1513  0335  0847               	movf	??___fttol,w
  1514  0336  07D0               	addwf	___fttol@exp1,f
  1515  0337  1903               	btfsc	3,2
  1516  0338  2B55               	goto	l1174
  1517  0339  2B2A               	goto	l1164
  1518  033A                     l1166:	
  1519  033A  3018               	movlw	24
  1520  033B  0250               	subwf	___fttol@exp1,w
  1521  033C  1C03               	skipc
  1522  033D  2B52               	goto	l484
  1523  033E  3000               	movlw	0
  1524  033F  00C6               	movwf	?___fttol+3
  1525  0340  3000               	movlw	0
  1526  0341  00C5               	movwf	?___fttol+2
  1527  0342  3000               	movlw	0
  1528  0343  00C4               	movwf	?___fttol+1
  1529  0344  3000               	movlw	0
  1530  0345  00C3               	movwf	?___fttol
  1531  0346  0008               	return
  1532  0347                     l1172:	
  1533  0347  3001               	movlw	1
  1534  0348  00C7               	movwf	??___fttol
  1535  0349                     u1135:	
  1536  0349  1003               	clrc
  1537  034A  0DCC               	rlf	___fttol@lval,f
  1538  034B  0DCD               	rlf	___fttol@lval+1,f
  1539  034C  0DCE               	rlf	___fttol@lval+2,f
  1540  034D  0DCF               	rlf	___fttol@lval+3,f
  1541  034E  0BC7               	decfsz	??___fttol,f
  1542  034F  2B49               	goto	u1135
  1543  0350  3001               	movlw	1
  1544  0351  02D0               	subwf	___fttol@exp1,f
  1545  0352                     l484:	
  1546  0352  0850               	movf	___fttol@exp1,w
  1547  0353  1D03               	btfss	3,2
  1548  0354  2B47               	goto	l1172
  1549  0355                     l1174:	
  1550  0355  084B               	movf	___fttol@sign1,w
  1551  0356  1903               	btfsc	3,2
  1552  0357  2B63               	goto	l1178
  1553  0358  09CC               	comf	___fttol@lval,f
  1554  0359  09CD               	comf	___fttol@lval+1,f
  1555  035A  09CE               	comf	___fttol@lval+2,f
  1556  035B  09CF               	comf	___fttol@lval+3,f
  1557  035C  0ACC               	incf	___fttol@lval,f
  1558  035D  1903               	skipnz
  1559  035E  0ACD               	incf	___fttol@lval+1,f
  1560  035F  1903               	skipnz
  1561  0360  0ACE               	incf	___fttol@lval+2,f
  1562  0361  1903               	skipnz
  1563  0362  0ACF               	incf	___fttol@lval+3,f
  1564  0363                     l1178:	
  1565  0363  084F               	movf	___fttol@lval+3,w
  1566  0364  00C6               	movwf	?___fttol+3
  1567  0365  084E               	movf	___fttol@lval+2,w
  1568  0366  00C5               	movwf	?___fttol+2
  1569  0367  084D               	movf	___fttol@lval+1,w
  1570  0368  00C4               	movwf	?___fttol+1
  1571  0369  084C               	movf	___fttol@lval,w
  1572  036A  00C3               	movwf	?___fttol
  1573  036B  0008               	return
  1574  036C                     __end_of___fttol:	
  1575                           
  1576                           	psect	text6
  1577  058C                     __ptext6:	
  1578 ;; *************** function ___altoft *****************
  1579 ;; Defined at:
  1580 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\altoft.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  c               4    8[BANK0 ] long 
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;  sign            1   15[BANK0 ] unsigned char 
  1585 ;;  exp             1   14[BANK0 ] unsigned char 
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  3    8[BANK0 ] float 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         0       4       0       0       0
  1596 ;;      Locals:         0       2       0       0       0
  1597 ;;      Temps:          0       2       0       0       0
  1598 ;;      Totals:         0       8       0       0       0
  1599 ;;Total ram usage:        8 bytes
  1600 ;; Hardware stack levels used:    1
  1601 ;; Hardware stack levels required when called:    3
  1602 ;; This function calls:
  1603 ;;		___ftpack
  1604 ;; This function is called by:
  1605 ;;		_trunc
  1606 ;; This function uses a non-reentrant model
  1607 ;;
  1608                           
  1609                           
  1610                           ;psect for function ___altoft
  1611  058C                     ___altoft:	
  1612                           
  1613                           ;incstack = 0
  1614                           ; Regs used in ___altoft: [wreg+status,2+status,0+pclath+cstack]
  1615  058C  1283               	bcf	3,5	;RP0=0, select bank0
  1616  058D  1303               	bcf	3,6	;RP1=0, select bank0
  1617  058E  01AF               	clrf	___altoft@sign
  1618  058F  308E               	movlw	142
  1619  0590  00AC               	movwf	??___altoft
  1620  0591  082C               	movf	??___altoft,w
  1621  0592  00AE               	movwf	___altoft@exp
  1622  0593  1FAB               	btfss	___altoft@c+3,7
  1623  0594  2DA2               	goto	l1488
  1624  0595  09A8               	comf	___altoft@c,f
  1625  0596  09A9               	comf	___altoft@c+1,f
  1626  0597  09AA               	comf	___altoft@c+2,f
  1627  0598  09AB               	comf	___altoft@c+3,f
  1628  0599  0AA8               	incf	___altoft@c,f
  1629  059A  1903               	skipnz
  1630  059B  0AA9               	incf	___altoft@c+1,f
  1631  059C  1903               	skipnz
  1632  059D  0AAA               	incf	___altoft@c+2,f
  1633  059E  1903               	skipnz
  1634  059F  0AAB               	incf	___altoft@c+3,f
  1635  05A0  01AF               	clrf	___altoft@sign
  1636  05A1  0AAF               	incf	___altoft@sign,f
  1637  05A2                     l1488:	
  1638  05A2  30FF               	movlw	255
  1639  05A3  052B               	andwf	___altoft@c+3,w
  1640  05A4  1903               	btfsc	3,2
  1641  05A5  2DB4               	goto	l1490
  1642  05A6  3001               	movlw	1
  1643  05A7                     u1845:	
  1644  05A7  1003               	clrc
  1645  05A8  0CAB               	rrf	___altoft@c+3,f
  1646  05A9  0CAA               	rrf	___altoft@c+2,f
  1647  05AA  0CA9               	rrf	___altoft@c+1,f
  1648  05AB  0CA8               	rrf	___altoft@c,f
  1649  05AC  3EFF               	addlw	-1
  1650  05AD  1D03               	skipz
  1651  05AE  2DA7               	goto	u1845
  1652  05AF  3001               	movlw	1
  1653  05B0  00AC               	movwf	??___altoft
  1654  05B1  082C               	movf	??___altoft,w
  1655  05B2  07AE               	addwf	___altoft@exp,f
  1656  05B3  2DA2               	goto	l1488
  1657  05B4                     l1490:	
  1658  05B4  0828               	movf	___altoft@c,w
  1659  05B5  00A0               	movwf	___ftpack@arg
  1660  05B6  0829               	movf	___altoft@c+1,w
  1661  05B7  00A1               	movwf	___ftpack@arg+1
  1662  05B8  082A               	movf	___altoft@c+2,w
  1663  05B9  00A2               	movwf	___ftpack@arg+2
  1664  05BA  082E               	movf	___altoft@exp,w
  1665  05BB  00AC               	movwf	??___altoft
  1666  05BC  082C               	movf	??___altoft,w
  1667  05BD  00A3               	movwf	___ftpack@exp
  1668  05BE  082F               	movf	___altoft@sign,w
  1669  05BF  00AD               	movwf	??___altoft+1
  1670  05C0  082D               	movf	??___altoft+1,w
  1671  05C1  00A4               	movwf	___ftpack@sign
  1672  05C2  120A  118A  236C   	fcall	___ftpack
  1673  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1674  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1675  05C7  0820               	movf	?___ftpack,w
  1676  05C8  00A8               	movwf	?___altoft
  1677  05C9  0821               	movf	?___ftpack+1,w
  1678  05CA  00A9               	movwf	?___altoft+1
  1679  05CB  0822               	movf	?___ftpack+2,w
  1680  05CC  00AA               	movwf	?___altoft+2
  1681  05CD  0008               	return
  1682  05CE                     __end_of___altoft:	
  1683                           
  1684                           	psect	text7
  1685  0694                     __ptext7:	
  1686 ;; *************** function ___ftneg *****************
  1687 ;; Defined at:
  1688 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftneg.c"
  1689 ;; Parameters:    Size  Location     Type
  1690 ;;  f1              3   16[BANK0 ] float 
  1691 ;; Auto vars:     Size  Location     Type
  1692 ;;		None
  1693 ;; Return value:  Size  Location     Type
  1694 ;;                  3   16[BANK0 ] float 
  1695 ;; Registers used:
  1696 ;;		wreg
  1697 ;; Tracked objects:
  1698 ;;		On entry : 0/0
  1699 ;;		On exit  : 0/0
  1700 ;;		Unchanged: 0/0
  1701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1702 ;;      Params:         0       3       0       0       0
  1703 ;;      Locals:         0       0       0       0       0
  1704 ;;      Temps:          0       0       0       0       0
  1705 ;;      Totals:         0       3       0       0       0
  1706 ;;Total ram usage:        3 bytes
  1707 ;; Hardware stack levels used:    1
  1708 ;; Hardware stack levels required when called:    2
  1709 ;; This function calls:
  1710 ;;		Nothing
  1711 ;; This function is called by:
  1712 ;;		_moveDeg
  1713 ;;		_round
  1714 ;; This function uses a non-reentrant model
  1715 ;;
  1716                           
  1717                           
  1718                           ;psect for function ___ftneg
  1719  0694                     ___ftneg:	
  1720                           
  1721                           ;incstack = 0
  1722                           ; Regs used in ___ftneg: [wreg]
  1723  0694  1283               	bcf	3,5	;RP0=0, select bank0
  1724  0695  1303               	bcf	3,6	;RP1=0, select bank0
  1725  0696  0832               	movf	___ftneg@f1+2,w
  1726  0697  0431               	iorwf	___ftneg@f1+1,w
  1727  0698  0430               	iorwf	___ftneg@f1,w
  1728  0699  1903               	skipnz
  1729  069A  0008               	return
  1730  069B  3080               	movlw	128
  1731  069C  06B2               	xorwf	___ftneg@f1+2,f
  1732  069D  0008               	return
  1733  069E                     __end_of___ftneg:	
  1734                           
  1735                           	psect	text8
  1736  002E                     __ptext8:	
  1737 ;; *************** function ___ftadd *****************
  1738 ;; Defined at:
  1739 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  1740 ;; Parameters:    Size  Location     Type
  1741 ;;  f1              3   58[BANK0 ] float 
  1742 ;;  f2              3   61[BANK0 ] float 
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;  exp1            1   70[BANK0 ] unsigned char 
  1745 ;;  exp2            1   69[BANK0 ] unsigned char 
  1746 ;;  sign            1   68[BANK0 ] unsigned char 
  1747 ;; Return value:  Size  Location     Type
  1748 ;;                  3   58[BANK0 ] float 
  1749 ;; Registers used:
  1750 ;;		wreg, status,2, status,0, pclath, cstack
  1751 ;; Tracked objects:
  1752 ;;		On entry : 0/0
  1753 ;;		On exit  : 0/0
  1754 ;;		Unchanged: 0/0
  1755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1756 ;;      Params:         0       6       0       0       0
  1757 ;;      Locals:         0       3       0       0       0
  1758 ;;      Temps:          0       4       0       0       0
  1759 ;;      Totals:         0      13       0       0       0
  1760 ;;Total ram usage:       13 bytes
  1761 ;; Hardware stack levels used:    1
  1762 ;; Hardware stack levels required when called:    3
  1763 ;; This function calls:
  1764 ;;		___ftpack
  1765 ;; This function is called by:
  1766 ;;		_round
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770                           
  1771                           ;psect for function ___ftadd
  1772  002E                     ___ftadd:	
  1773                           
  1774                           ;incstack = 0
  1775                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  1776  002E  1283               	bcf	3,5	;RP0=0, select bank0
  1777  002F  1303               	bcf	3,6	;RP1=0, select bank0
  1778  0030  085A               	movf	___ftadd@f1,w
  1779  0031  00E0               	movwf	??___ftadd
  1780  0032  085B               	movf	___ftadd@f1+1,w
  1781  0033  00E1               	movwf	??___ftadd+1
  1782  0034  085C               	movf	___ftadd@f1+2,w
  1783  0035  00E2               	movwf	??___ftadd+2
  1784  0036  1003               	clrc
  1785  0037  0D61               	rlf	??___ftadd+1,w
  1786  0038  0D62               	rlf	??___ftadd+2,w
  1787  0039  00E3               	movwf	??___ftadd+3
  1788  003A  0863               	movf	??___ftadd+3,w
  1789  003B  00E6               	movwf	___ftadd@exp1
  1790  003C  085D               	movf	___ftadd@f2,w
  1791  003D  00E0               	movwf	??___ftadd
  1792  003E  085E               	movf	___ftadd@f2+1,w
  1793  003F  00E1               	movwf	??___ftadd+1
  1794  0040  085F               	movf	___ftadd@f2+2,w
  1795  0041  00E2               	movwf	??___ftadd+2
  1796  0042  1003               	clrc
  1797  0043  0D61               	rlf	??___ftadd+1,w
  1798  0044  0D62               	rlf	??___ftadd+2,w
  1799  0045  00E3               	movwf	??___ftadd+3
  1800  0046  0863               	movf	??___ftadd+3,w
  1801  0047  00E5               	movwf	___ftadd@exp2
  1802  0048  0866               	movf	___ftadd@exp1,w
  1803  0049  1903               	btfsc	3,2
  1804  004A  2857               	goto	l1516
  1805  004B  0865               	movf	___ftadd@exp2,w
  1806  004C  0266               	subwf	___ftadd@exp1,w
  1807  004D  1803               	skipnc
  1808  004E  285E               	goto	l1520
  1809  004F  0366               	decf	___ftadd@exp1,w
  1810  0050  3AFF               	xorlw	255
  1811  0051  0765               	addwf	___ftadd@exp2,w
  1812  0052  00E0               	movwf	??___ftadd
  1813  0053  3019               	movlw	25
  1814  0054  0260               	subwf	??___ftadd,w
  1815  0055  1C03               	skipc
  1816  0056  285E               	goto	l1520
  1817  0057                     l1516:	
  1818  0057  085D               	movf	___ftadd@f2,w
  1819  0058  00DA               	movwf	?___ftadd
  1820  0059  085E               	movf	___ftadd@f2+1,w
  1821  005A  00DB               	movwf	?___ftadd+1
  1822  005B  085F               	movf	___ftadd@f2+2,w
  1823  005C  00DC               	movwf	?___ftadd+2
  1824  005D  0008               	return
  1825  005E                     l1520:	
  1826  005E  0865               	movf	___ftadd@exp2,w
  1827  005F  1903               	btfsc	3,2
  1828  0060  0008               	return
  1829  0061  0866               	movf	___ftadd@exp1,w
  1830  0062  0265               	subwf	___ftadd@exp2,w
  1831  0063  1803               	skipnc
  1832  0064  286D               	goto	l1526
  1833  0065  0365               	decf	___ftadd@exp2,w
  1834  0066  3AFF               	xorlw	255
  1835  0067  0766               	addwf	___ftadd@exp1,w
  1836  0068  00E0               	movwf	??___ftadd
  1837  0069  3019               	movlw	25
  1838  006A  0260               	subwf	??___ftadd,w
  1839  006B  1803               	btfsc	3,0
  1840  006C  0008               	return
  1841  006D                     l1526:	
  1842  006D  3006               	movlw	6
  1843  006E  00E0               	movwf	??___ftadd
  1844  006F  0860               	movf	??___ftadd,w
  1845  0070  00E4               	movwf	___ftadd@sign
  1846  0071  1BDC               	btfsc	___ftadd@f1+2,7
  1847  0072  17E4               	bsf	___ftadd@sign,7
  1848  0073  1BDF               	btfsc	___ftadd@f2+2,7
  1849  0074  1764               	bsf	___ftadd@sign,6
  1850  0075  17DB               	bsf	___ftadd@f1+1,7
  1851  0076  30FF               	movlw	255
  1852  0077  05DA               	andwf	___ftadd@f1,f
  1853  0078  30FF               	movlw	255
  1854  0079  05DB               	andwf	___ftadd@f1+1,f
  1855  007A  3000               	movlw	0
  1856  007B  05DC               	andwf	___ftadd@f1+2,f
  1857  007C  17DE               	bsf	___ftadd@f2+1,7
  1858  007D  30FF               	movlw	255
  1859  007E  05DD               	andwf	___ftadd@f2,f
  1860  007F  30FF               	movlw	255
  1861  0080  05DE               	andwf	___ftadd@f2+1,f
  1862  0081  3000               	movlw	0
  1863  0082  05DF               	andwf	___ftadd@f2+2,f
  1864  0083  0865               	movf	___ftadd@exp2,w
  1865  0084  0266               	subwf	___ftadd@exp1,w
  1866  0085  1803               	skipnc
  1867  0086  28AD               	goto	l1548
  1868  0087                     l1538:	
  1869  0087  3001               	movlw	1
  1870  0088                     u1965:	
  1871  0088  1003               	clrc
  1872  0089  0DDD               	rlf	___ftadd@f2,f
  1873  008A  0DDE               	rlf	___ftadd@f2+1,f
  1874  008B  0DDF               	rlf	___ftadd@f2+2,f
  1875  008C  3EFF               	addlw	-1
  1876  008D  1D03               	skipz
  1877  008E  2888               	goto	u1965
  1878  008F  3001               	movlw	1
  1879  0090  02E5               	subwf	___ftadd@exp2,f
  1880  0091  0865               	movf	___ftadd@exp2,w
  1881  0092  0666               	xorwf	___ftadd@exp1,w
  1882  0093  1903               	skipnz
  1883  0094  28A8               	goto	l1546
  1884  0095  3001               	movlw	1
  1885  0096  02E4               	subwf	___ftadd@sign,f
  1886  0097  0864               	movf	___ftadd@sign,w
  1887  0098  3907               	andlw	7
  1888  0099  1903               	btfsc	3,2
  1889  009A  28A8               	goto	l1546
  1890  009B  2887               	goto	l1538
  1891  009C                     l1544:	
  1892  009C  3001               	movlw	1
  1893  009D                     u1995:	
  1894  009D  1003               	clrc
  1895  009E  0CDC               	rrf	___ftadd@f1+2,f
  1896  009F  0CDB               	rrf	___ftadd@f1+1,f
  1897  00A0  0CDA               	rrf	___ftadd@f1,f
  1898  00A1  3EFF               	addlw	-1
  1899  00A2  1D03               	skipz
  1900  00A3  289D               	goto	u1995
  1901  00A4  3001               	movlw	1
  1902  00A5  00E0               	movwf	??___ftadd
  1903  00A6  0860               	movf	??___ftadd,w
  1904  00A7  07E6               	addwf	___ftadd@exp1,f
  1905  00A8                     l1546:	
  1906  00A8  0866               	movf	___ftadd@exp1,w
  1907  00A9  0665               	xorwf	___ftadd@exp2,w
  1908  00AA  1903               	btfsc	3,2
  1909  00AB  28D6               	goto	l424
  1910  00AC  289C               	goto	l1544
  1911  00AD                     l1548:	
  1912  00AD  0866               	movf	___ftadd@exp1,w
  1913  00AE  0265               	subwf	___ftadd@exp2,w
  1914  00AF  1803               	skipnc
  1915  00B0  28D6               	goto	l424
  1916  00B1                     l1550:	
  1917  00B1  3001               	movlw	1
  1918  00B2                     u2025:	
  1919  00B2  1003               	clrc
  1920  00B3  0DDA               	rlf	___ftadd@f1,f
  1921  00B4  0DDB               	rlf	___ftadd@f1+1,f
  1922  00B5  0DDC               	rlf	___ftadd@f1+2,f
  1923  00B6  3EFF               	addlw	-1
  1924  00B7  1D03               	skipz
  1925  00B8  28B2               	goto	u2025
  1926  00B9  3001               	movlw	1
  1927  00BA  02E6               	subwf	___ftadd@exp1,f
  1928  00BB  0865               	movf	___ftadd@exp2,w
  1929  00BC  0666               	xorwf	___ftadd@exp1,w
  1930  00BD  1903               	skipnz
  1931  00BE  28D2               	goto	l1558
  1932  00BF  3001               	movlw	1
  1933  00C0  02E4               	subwf	___ftadd@sign,f
  1934  00C1  0864               	movf	___ftadd@sign,w
  1935  00C2  3907               	andlw	7
  1936  00C3  1903               	btfsc	3,2
  1937  00C4  28D2               	goto	l1558
  1938  00C5  28B1               	goto	l1550
  1939  00C6                     l1556:	
  1940  00C6  3001               	movlw	1
  1941  00C7                     u2055:	
  1942  00C7  1003               	clrc
  1943  00C8  0CDF               	rrf	___ftadd@f2+2,f
  1944  00C9  0CDE               	rrf	___ftadd@f2+1,f
  1945  00CA  0CDD               	rrf	___ftadd@f2,f
  1946  00CB  3EFF               	addlw	-1
  1947  00CC  1D03               	skipz
  1948  00CD  28C7               	goto	u2055
  1949  00CE  3001               	movlw	1
  1950  00CF  00E0               	movwf	??___ftadd
  1951  00D0  0860               	movf	??___ftadd,w
  1952  00D1  07E5               	addwf	___ftadd@exp2,f
  1953  00D2                     l1558:	
  1954  00D2  0866               	movf	___ftadd@exp1,w
  1955  00D3  0665               	xorwf	___ftadd@exp2,w
  1956  00D4  1D03               	skipz
  1957  00D5  28C6               	goto	l1556
  1958  00D6                     l424:	
  1959  00D6  1FE4               	btfss	___ftadd@sign,7
  1960  00D7  28E8               	goto	l1562
  1961  00D8  30FF               	movlw	255
  1962  00D9  06DA               	xorwf	___ftadd@f1,f
  1963  00DA  30FF               	movlw	255
  1964  00DB  06DB               	xorwf	___ftadd@f1+1,f
  1965  00DC  30FF               	movlw	255
  1966  00DD  06DC               	xorwf	___ftadd@f1+2,f
  1967  00DE  3001               	movlw	1
  1968  00DF  07DA               	addwf	___ftadd@f1,f
  1969  00E0  3000               	movlw	0
  1970  00E1  1803               	skipnc
  1971  00E2  3001               	movlw	1
  1972  00E3  07DB               	addwf	___ftadd@f1+1,f
  1973  00E4  3000               	movlw	0
  1974  00E5  1803               	skipnc
  1975  00E6  3001               	movlw	1
  1976  00E7  07DC               	addwf	___ftadd@f1+2,f
  1977  00E8                     l1562:	
  1978  00E8  1F64               	btfss	___ftadd@sign,6
  1979  00E9  28FA               	goto	l1566
  1980  00EA  30FF               	movlw	255
  1981  00EB  06DD               	xorwf	___ftadd@f2,f
  1982  00EC  30FF               	movlw	255
  1983  00ED  06DE               	xorwf	___ftadd@f2+1,f
  1984  00EE  30FF               	movlw	255
  1985  00EF  06DF               	xorwf	___ftadd@f2+2,f
  1986  00F0  3001               	movlw	1
  1987  00F1  07DD               	addwf	___ftadd@f2,f
  1988  00F2  3000               	movlw	0
  1989  00F3  1803               	skipnc
  1990  00F4  3001               	movlw	1
  1991  00F5  07DE               	addwf	___ftadd@f2+1,f
  1992  00F6  3000               	movlw	0
  1993  00F7  1803               	skipnc
  1994  00F8  3001               	movlw	1
  1995  00F9  07DF               	addwf	___ftadd@f2+2,f
  1996  00FA                     l1566:	
  1997  00FA  01E4               	clrf	___ftadd@sign
  1998  00FB  085A               	movf	___ftadd@f1,w
  1999  00FC  07DD               	addwf	___ftadd@f2,f
  2000  00FD  085B               	movf	___ftadd@f1+1,w
  2001  00FE  1103               	clrz
  2002  00FF  1803               	skipnc
  2003  0100  0A5B               	incf	___ftadd@f1+1,w
  2004  0101  1D03               	btfss	3,2
  2005  0102  07DE               	addwf	___ftadd@f2+1,f
  2006  0103  085C               	movf	___ftadd@f1+2,w
  2007  0104  1103               	clrz
  2008  0105  1803               	skipnc
  2009  0106  0A5C               	incf	___ftadd@f1+2,w
  2010  0107  1D03               	btfss	3,2
  2011  0108  07DF               	addwf	___ftadd@f2+2,f
  2012  0109  1FDF               	btfss	___ftadd@f2+2,7
  2013  010A  291D               	goto	l1576
  2014  010B  30FF               	movlw	255
  2015  010C  06DD               	xorwf	___ftadd@f2,f
  2016  010D  30FF               	movlw	255
  2017  010E  06DE               	xorwf	___ftadd@f2+1,f
  2018  010F  30FF               	movlw	255
  2019  0110  06DF               	xorwf	___ftadd@f2+2,f
  2020  0111  3001               	movlw	1
  2021  0112  07DD               	addwf	___ftadd@f2,f
  2022  0113  3000               	movlw	0
  2023  0114  1803               	skipnc
  2024  0115  3001               	movlw	1
  2025  0116  07DE               	addwf	___ftadd@f2+1,f
  2026  0117  3000               	movlw	0
  2027  0118  1803               	skipnc
  2028  0119  3001               	movlw	1
  2029  011A  07DF               	addwf	___ftadd@f2+2,f
  2030  011B  01E4               	clrf	___ftadd@sign
  2031  011C  0AE4               	incf	___ftadd@sign,f
  2032  011D                     l1576:	
  2033  011D  085D               	movf	___ftadd@f2,w
  2034  011E  00A0               	movwf	___ftpack@arg
  2035  011F  085E               	movf	___ftadd@f2+1,w
  2036  0120  00A1               	movwf	___ftpack@arg+1
  2037  0121  085F               	movf	___ftadd@f2+2,w
  2038  0122  00A2               	movwf	___ftpack@arg+2
  2039  0123  0866               	movf	___ftadd@exp1,w
  2040  0124  00E0               	movwf	??___ftadd
  2041  0125  0860               	movf	??___ftadd,w
  2042  0126  00A3               	movwf	___ftpack@exp
  2043  0127  0864               	movf	___ftadd@sign,w
  2044  0128  00E1               	movwf	??___ftadd+1
  2045  0129  0861               	movf	??___ftadd+1,w
  2046  012A  00A4               	movwf	___ftpack@sign
  2047  012B  120A  118A  236C   	fcall	___ftpack
  2048  012E  1283               	bcf	3,5	;RP0=0, select bank0
  2049  012F  1303               	bcf	3,6	;RP1=0, select bank0
  2050  0130  0820               	movf	?___ftpack,w
  2051  0131  00DA               	movwf	?___ftadd
  2052  0132  0821               	movf	?___ftpack+1,w
  2053  0133  00DB               	movwf	?___ftadd+1
  2054  0134  0822               	movf	?___ftpack+2,w
  2055  0135  00DC               	movwf	?___ftadd+2
  2056  0136  0008               	return
  2057  0137                     __end_of___ftadd:	
  2058                           
  2059                           	psect	text9
  2060  03DA                     __ptext9:	
  2061 ;; *************** function _move *****************
  2062 ;; Defined at:
  2063 ;;		line 18 in file "motor.c"
  2064 ;; Parameters:    Size  Location     Type
  2065 ;;  steps           1    wreg     unsigned char 
  2066 ;;  direction       1    0[BANK0 ] unsigned char 
  2067 ;; Auto vars:     Size  Location     Type
  2068 ;;  steps           1    4[BANK0 ] unsigned char 
  2069 ;;  i               1    5[BANK0 ] unsigned char 
  2070 ;; Return value:  Size  Location     Type
  2071 ;;                  1    wreg      void 
  2072 ;; Registers used:
  2073 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2074 ;; Tracked objects:
  2075 ;;		On entry : 0/0
  2076 ;;		On exit  : 0/0
  2077 ;;		Unchanged: 0/0
  2078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2079 ;;      Params:         0       1       0       0       0
  2080 ;;      Locals:         0       2       0       0       0
  2081 ;;      Temps:          0       3       0       0       0
  2082 ;;      Totals:         0       6       0       0       0
  2083 ;;Total ram usage:        6 bytes
  2084 ;; Hardware stack levels used:    1
  2085 ;; Hardware stack levels required when called:    2
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_main
  2090 ;;		_moveDeg
  2091 ;; This function uses a non-reentrant model
  2092 ;;
  2093                           
  2094                           
  2095                           ;psect for function _move
  2096  03DA                     _move:	
  2097                           
  2098                           ;incstack = 0
  2099                           ; Regs used in _move: [wreg-fsr0h+status,2+status,0]
  2100                           ;move@steps stored from wreg
  2101  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2102  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2103  03DC  00A4               	movwf	move@steps
  2104                           
  2105                           ;motor.c: 19: for(char i = 0; i<steps; i++){
  2106  03DD  01A5               	clrf	move@i
  2107  03DE                     l1642:	
  2108  03DE  0824               	movf	move@steps,w
  2109  03DF  0225               	subwf	move@i,w
  2110  03E0  1803               	btfsc	3,0
  2111  03E1  0008               	return
  2112                           
  2113                           ;motor.c: 20: if(cstep == 7 && direction == 1){
  2114  03E2  3007               	movlw	7
  2115  03E3  0676               	xorwf	_cstep,w
  2116  03E4  1D03               	btfss	3,2
  2117  03E5  2BF1               	goto	l1616
  2118  03E6  0320               	decf	move@direction,w
  2119  03E7  1D03               	btfss	3,2
  2120  03E8  2BF1               	goto	l1616
  2121                           
  2122                           ;motor.c: 21: PORTC = halfSteps[0];
  2123  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  2124  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  2125  03EB  0820               	movf	_halfSteps^(0+128),w
  2126  03EC  1283               	bcf	3,5	;RP0=0, select bank0
  2127  03ED  1303               	bcf	3,6	;RP1=0, select bank0
  2128  03EE  0087               	movwf	7	;volatile
  2129                           
  2130                           ;motor.c: 22: cstep = 0;
  2131  03EF  01F6               	clrf	_cstep
  2132                           
  2133                           ;motor.c: 23: }
  2134  03F0  2C29               	goto	l1638
  2135  03F1                     l1616:	
  2136                           
  2137                           ;motor.c: 24: else if(cstep == 0 && direction == 0){
  2138  03F1  0876               	movf	_cstep,w
  2139  03F2  1D03               	btfss	3,2
  2140  03F3  2C02               	goto	l99
  2141  03F4  0820               	movf	move@direction,w
  2142  03F5  1D03               	btfss	3,2
  2143  03F6  2C02               	goto	l99
  2144                           
  2145                           ;motor.c: 25: PORTC = halfSteps[7];
  2146  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2147  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2148  03F9  082E               	movf	(_halfSteps^(0+128)+14),w
  2149  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2150  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2151  03FC  0087               	movwf	7	;volatile
  2152                           
  2153                           ;motor.c: 26: cstep = 7;
  2154  03FD  3007               	movlw	7
  2155  03FE  00A1               	movwf	??_move
  2156  03FF  0821               	movf	??_move,w
  2157  0400  00F6               	movwf	_cstep
  2158                           
  2159                           ;motor.c: 27: }
  2160  0401  2C29               	goto	l1638
  2161  0402                     l99:	
  2162                           
  2163                           ;motor.c: 28: else if (cstep >= 0 && cstep <= 7){
  2164  0402  1BF6               	btfsc	_cstep,7
  2165  0403  2C28               	goto	l1636
  2166  0404  0876               	movf	_cstep,w
  2167  0405  3A80               	xorlw	128
  2168  0406  3E78               	addlw	-136
  2169  0407  1803               	skipnc
  2170  0408  2C28               	goto	l1636
  2171                           
  2172                           ;motor.c: 29: if(direction == 1){
  2173  0409  0320               	decf	move@direction,w
  2174  040A  1D03               	btfss	3,2
  2175  040B  2C17               	goto	l1630
  2176                           
  2177                           ;motor.c: 30: PORTC = halfSteps[cstep+1];
  2178  040C  0876               	movf	_cstep,w
  2179  040D  00A1               	movwf	??_move
  2180  040E  0721               	addwf	??_move,w
  2181  040F  3E02               	addlw	2
  2182  0410  3EA0               	addlw	(low (_halfSteps| 0))& (0+255)
  2183  0411  0084               	movwf	4
  2184  0412  1383               	bcf	3,7	;select IRP bank1
  2185  0413  0800               	movf	0,w
  2186  0414  0087               	movwf	7	;volatile
  2187                           
  2188                           ;motor.c: 31: cstep++;
  2189  0415  3001               	movlw	1
  2190  0416  2C24               	goto	L2
  2191  0417                     l1630:	
  2192                           ;motor.c: 32: }
  2193                           
  2194                           
  2195                           ;motor.c: 33: else if(direction == 0){
  2196  0417  0820               	movf	move@direction,w
  2197  0418  1D03               	btfss	3,2
  2198  0419  2C29               	goto	l1638
  2199                           
  2200                           ;motor.c: 34: PORTC = halfSteps[cstep-1];
  2201  041A  0876               	movf	_cstep,w
  2202  041B  00A1               	movwf	??_move
  2203  041C  0721               	addwf	??_move,w
  2204  041D  3EFE               	addlw	254
  2205  041E  3EA0               	addlw	(low (_halfSteps| 0))& (0+255)
  2206  041F  0084               	movwf	4
  2207  0420  1383               	bcf	3,7	;select IRP bank1
  2208  0421  0800               	movf	0,w
  2209  0422  0087               	movwf	7	;volatile
  2210                           
  2211                           ;motor.c: 35: cstep--;
  2212  0423  30FF               	movlw	255
  2213  0424                     L2:	
  2214  0424  00A1               	movwf	??_move
  2215  0425  0821               	movf	??_move,w
  2216  0426  07F6               	addwf	_cstep,f
  2217                           
  2218                           ;motor.c: 36: }
  2219                           ;motor.c: 38: }
  2220  0427  2C29               	goto	l1638
  2221  0428                     l1636:	
  2222                           
  2223                           ;motor.c: 39: else{
  2224                           ;motor.c: 40: PORTC = 0x00;
  2225  0428  0187               	clrf	7	;volatile
  2226  0429                     l1638:	
  2227                           
  2228                           ;motor.c: 41: }
  2229                           ;motor.c: 42: _delay((unsigned long)((100)*(20000000/4000.0)));
  2230  0429  3003               	movlw	3
  2231  042A  00A3               	movwf	??_move+2
  2232  042B  308A               	movlw	138
  2233  042C  00A2               	movwf	??_move+1
  2234  042D  3056               	movlw	86
  2235  042E  00A1               	movwf	??_move
  2236  042F                     u2377:	
  2237  042F  0BA1               	decfsz	??_move,f
  2238  0430  2C2F               	goto	u2377
  2239  0431  0BA2               	decfsz	??_move+1,f
  2240  0432  2C2F               	goto	u2377
  2241  0433  0BA3               	decfsz	??_move+2,f
  2242  0434  2C2F               	goto	u2377
  2243  0435  2C36               	nop2
  2244  0436  3001               	movlw	1
  2245  0437  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0438  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0439  00A1               	movwf	??_move
  2248  043A  0821               	movf	??_move,w
  2249  043B  07A5               	addwf	move@i,f
  2250  043C  2BDE               	goto	l1642
  2251  043D                     __end_of_move:	
  2252                           
  2253                           	psect	text10
  2254  049D                     __ptext10:	
  2255 ;; *************** function ___ftge *****************
  2256 ;; Defined at:
  2257 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftge.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  ff1             3    0[BANK0 ] float 
  2260 ;;  ff2             3    3[BANK0 ] float 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;		None               void
  2265 ;; Registers used:
  2266 ;;		wreg, status,2, status,0
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       6       0       0       0
  2273 ;;      Locals:         0       0       0       0       0
  2274 ;;      Temps:          0       6       0       0       0
  2275 ;;      Totals:         0      12       0       0       0
  2276 ;;Total ram usage:       12 bytes
  2277 ;; Hardware stack levels used:    1
  2278 ;; Hardware stack levels required when called:    2
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_moveDeg
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           
  2287                           ;psect for function ___ftge
  2288  049D                     ___ftge:	
  2289                           
  2290                           ;incstack = 0
  2291                           ; Regs used in ___ftge: [wreg+status,2+status,0]
  2292  049D  1283               	bcf	3,5	;RP0=0, select bank0
  2293  049E  1303               	bcf	3,6	;RP1=0, select bank0
  2294  049F  1FA2               	btfss	___ftge@ff1+2,7
  2295  04A0  2CC6               	goto	l1386
  2296  04A1  3000               	movlw	0
  2297  04A2  00A6               	movwf	??___ftge
  2298  04A3  3000               	movlw	0
  2299  04A4  00A7               	movwf	??___ftge+1
  2300  04A5  3080               	movlw	128
  2301  04A6  00A8               	movwf	??___ftge+2
  2302  04A7  0920               	comf	___ftge@ff1,w
  2303  04A8  00A9               	movwf	??___ftge+3
  2304  04A9  0921               	comf	___ftge@ff1+1,w
  2305  04AA  00AA               	movwf	??___ftge+4
  2306  04AB  0922               	comf	___ftge@ff1+2,w
  2307  04AC  00AB               	movwf	??___ftge+5
  2308  04AD  0AA9               	incf	??___ftge+3,f
  2309  04AE  1903               	skipnz
  2310  04AF  0AAA               	incf	??___ftge+4,f
  2311  04B0  1903               	skipnz
  2312  04B1  0AAB               	incf	??___ftge+5,f
  2313  04B2  0829               	movf	??___ftge+3,w
  2314  04B3  07A6               	addwf	??___ftge,f
  2315  04B4  082A               	movf	??___ftge+4,w
  2316  04B5  1803               	skipnc
  2317  04B6  0F2A               	incfsz	??___ftge+4,w
  2318  04B7  2CB9               	goto	u1621
  2319  04B8  2CBA               	goto	u1622
  2320  04B9                     u1621:	
  2321  04B9  07A7               	addwf	??___ftge+1,f
  2322  04BA                     u1622:	
  2323  04BA  082B               	movf	??___ftge+5,w
  2324  04BB  1803               	skipnc
  2325  04BC  0F2B               	incfsz	??___ftge+5,w
  2326  04BD  2CBF               	goto	u1623
  2327  04BE  2CC0               	goto	u1624
  2328  04BF                     u1623:	
  2329  04BF  07A8               	addwf	??___ftge+2,f
  2330  04C0                     u1624:	
  2331  04C0  0826               	movf	??___ftge,w
  2332  04C1  00A0               	movwf	___ftge@ff1
  2333  04C2  0827               	movf	??___ftge+1,w
  2334  04C3  00A1               	movwf	___ftge@ff1+1
  2335  04C4  0828               	movf	??___ftge+2,w
  2336  04C5  00A2               	movwf	___ftge@ff1+2
  2337  04C6                     l1386:	
  2338  04C6  1FA5               	btfss	___ftge@ff2+2,7
  2339  04C7  2CED               	goto	l1390
  2340  04C8  3000               	movlw	0
  2341  04C9  00A6               	movwf	??___ftge
  2342  04CA  3000               	movlw	0
  2343  04CB  00A7               	movwf	??___ftge+1
  2344  04CC  3080               	movlw	128
  2345  04CD  00A8               	movwf	??___ftge+2
  2346  04CE  0923               	comf	___ftge@ff2,w
  2347  04CF  00A9               	movwf	??___ftge+3
  2348  04D0  0924               	comf	___ftge@ff2+1,w
  2349  04D1  00AA               	movwf	??___ftge+4
  2350  04D2  0925               	comf	___ftge@ff2+2,w
  2351  04D3  00AB               	movwf	??___ftge+5
  2352  04D4  0AA9               	incf	??___ftge+3,f
  2353  04D5  1903               	skipnz
  2354  04D6  0AAA               	incf	??___ftge+4,f
  2355  04D7  1903               	skipnz
  2356  04D8  0AAB               	incf	??___ftge+5,f
  2357  04D9  0829               	movf	??___ftge+3,w
  2358  04DA  07A6               	addwf	??___ftge,f
  2359  04DB  082A               	movf	??___ftge+4,w
  2360  04DC  1803               	skipnc
  2361  04DD  0F2A               	incfsz	??___ftge+4,w
  2362  04DE  2CE0               	goto	u1641
  2363  04DF  2CE1               	goto	u1642
  2364  04E0                     u1641:	
  2365  04E0  07A7               	addwf	??___ftge+1,f
  2366  04E1                     u1642:	
  2367  04E1  082B               	movf	??___ftge+5,w
  2368  04E2  1803               	skipnc
  2369  04E3  0F2B               	incfsz	??___ftge+5,w
  2370  04E4  2CE6               	goto	u1643
  2371  04E5  2CE7               	goto	u1644
  2372  04E6                     u1643:	
  2373  04E6  07A8               	addwf	??___ftge+2,f
  2374  04E7                     u1644:	
  2375  04E7  0826               	movf	??___ftge,w
  2376  04E8  00A3               	movwf	___ftge@ff2
  2377  04E9  0827               	movf	??___ftge+1,w
  2378  04EA  00A4               	movwf	___ftge@ff2+1
  2379  04EB  0828               	movf	??___ftge+2,w
  2380  04EC  00A5               	movwf	___ftge@ff2+2
  2381  04ED                     l1390:	
  2382  04ED  3080               	movlw	128
  2383  04EE  06A2               	xorwf	___ftge@ff1+2,f
  2384  04EF  3080               	movlw	128
  2385  04F0  06A5               	xorwf	___ftge@ff2+2,f
  2386  04F1  0825               	movf	___ftge@ff2+2,w
  2387  04F2  0222               	subwf	___ftge@ff1+2,w
  2388  04F3  1D03               	skipz
  2389  04F4  0008               	return
  2390  04F5  0824               	movf	___ftge@ff2+1,w
  2391  04F6  0221               	subwf	___ftge@ff1+1,w
  2392  04F7  1D03               	skipz
  2393  04F8  0008               	return
  2394  04F9  0823               	movf	___ftge@ff2,w
  2395  04FA  0220               	subwf	___ftge@ff1,w
  2396  04FB  0008               	return
  2397  04FC                     __end_of___ftge:	
  2398                           
  2399                           	psect	text11
  2400  0226                     __ptext11:	
  2401 ;; *************** function ___ftdiv *****************
  2402 ;; Defined at:
  2403 ;;		line 56 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  f2              3   19[BANK0 ] float 
  2406 ;;  f1              3   22[BANK0 ] float 
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  f3              3   30[BANK0 ] float 
  2409 ;;  sign            1   34[BANK0 ] unsigned char 
  2410 ;;  exp             1   33[BANK0 ] unsigned char 
  2411 ;;  cntr            1   29[BANK0 ] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;                  3   19[BANK0 ] float 
  2414 ;; Registers used:
  2415 ;;		wreg, status,2, status,0, pclath, cstack
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2421 ;;      Params:         0       6       0       0       0
  2422 ;;      Locals:         0       6       0       0       0
  2423 ;;      Temps:          0       4       0       0       0
  2424 ;;      Totals:         0      16       0       0       0
  2425 ;;Total ram usage:       16 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; Hardware stack levels required when called:    3
  2428 ;; This function calls:
  2429 ;;		___ftpack
  2430 ;; This function is called by:
  2431 ;;		_moveDeg
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           
  2436                           ;psect for function ___ftdiv
  2437  0226                     ___ftdiv:	
  2438                           
  2439                           ;incstack = 0
  2440                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2441  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0228  0836               	movf	___ftdiv@f1,w
  2444  0229  00B9               	movwf	??___ftdiv
  2445  022A  0837               	movf	___ftdiv@f1+1,w
  2446  022B  00BA               	movwf	??___ftdiv+1
  2447  022C  0838               	movf	___ftdiv@f1+2,w
  2448  022D  00BB               	movwf	??___ftdiv+2
  2449  022E  1003               	clrc
  2450  022F  0D3A               	rlf	??___ftdiv+1,w
  2451  0230  0D3B               	rlf	??___ftdiv+2,w
  2452  0231  00BC               	movwf	??___ftdiv+3
  2453  0232  083C               	movf	??___ftdiv+3,w
  2454  0233  00C1               	movwf	___ftdiv@exp
  2455  0234  0841               	movf	___ftdiv@exp,w
  2456  0235  1D03               	btfss	3,2
  2457  0236  2A3E               	goto	l1658
  2458  0237  3000               	movlw	0
  2459  0238  00B3               	movwf	?___ftdiv
  2460  0239  3000               	movlw	0
  2461  023A  00B4               	movwf	?___ftdiv+1
  2462  023B  3000               	movlw	0
  2463  023C  00B5               	movwf	?___ftdiv+2
  2464  023D  0008               	return
  2465  023E                     l1658:	
  2466  023E  0833               	movf	___ftdiv@f2,w
  2467  023F  00B9               	movwf	??___ftdiv
  2468  0240  0834               	movf	___ftdiv@f2+1,w
  2469  0241  00BA               	movwf	??___ftdiv+1
  2470  0242  0835               	movf	___ftdiv@f2+2,w
  2471  0243  00BB               	movwf	??___ftdiv+2
  2472  0244  1003               	clrc
  2473  0245  0D3A               	rlf	??___ftdiv+1,w
  2474  0246  0D3B               	rlf	??___ftdiv+2,w
  2475  0247  00BC               	movwf	??___ftdiv+3
  2476  0248  083C               	movf	??___ftdiv+3,w
  2477  0249  00C2               	movwf	___ftdiv@sign
  2478  024A  0842               	movf	___ftdiv@sign,w
  2479  024B  1D03               	btfss	3,2
  2480  024C  2A54               	goto	l1664
  2481  024D  3000               	movlw	0
  2482  024E  00B3               	movwf	?___ftdiv
  2483  024F  3000               	movlw	0
  2484  0250  00B4               	movwf	?___ftdiv+1
  2485  0251  3000               	movlw	0
  2486  0252  00B5               	movwf	?___ftdiv+2
  2487  0253  0008               	return
  2488  0254                     l1664:	
  2489  0254  3000               	movlw	0
  2490  0255  00BE               	movwf	___ftdiv@f3
  2491  0256  3000               	movlw	0
  2492  0257  00BF               	movwf	___ftdiv@f3+1
  2493  0258  3000               	movlw	0
  2494  0259  00C0               	movwf	___ftdiv@f3+2
  2495  025A  3089               	movlw	137
  2496  025B  0742               	addwf	___ftdiv@sign,w
  2497  025C  00B9               	movwf	??___ftdiv
  2498  025D  0839               	movf	??___ftdiv,w
  2499  025E  02C1               	subwf	___ftdiv@exp,f
  2500  025F  0836               	movf	___ftdiv@f1,w
  2501  0260  00B9               	movwf	??___ftdiv
  2502  0261  0837               	movf	___ftdiv@f1+1,w
  2503  0262  00BA               	movwf	??___ftdiv+1
  2504  0263  0838               	movf	___ftdiv@f1+2,w
  2505  0264  00BB               	movwf	??___ftdiv+2
  2506  0265  3010               	movlw	16
  2507  0266                     u2255:	
  2508  0266  1003               	clrc
  2509  0267  0CBB               	rrf	??___ftdiv+2,f
  2510  0268  0CBA               	rrf	??___ftdiv+1,f
  2511  0269  0CB9               	rrf	??___ftdiv,f
  2512  026A  3EFF               	addlw	-1
  2513  026B  1D03               	skipz
  2514  026C  2A66               	goto	u2255
  2515  026D  0839               	movf	??___ftdiv,w
  2516  026E  00BC               	movwf	??___ftdiv+3
  2517  026F  083C               	movf	??___ftdiv+3,w
  2518  0270  00C2               	movwf	___ftdiv@sign
  2519  0271  0833               	movf	___ftdiv@f2,w
  2520  0272  00B9               	movwf	??___ftdiv
  2521  0273  0834               	movf	___ftdiv@f2+1,w
  2522  0274  00BA               	movwf	??___ftdiv+1
  2523  0275  0835               	movf	___ftdiv@f2+2,w
  2524  0276  00BB               	movwf	??___ftdiv+2
  2525  0277  3010               	movlw	16
  2526  0278                     u2265:	
  2527  0278  1003               	clrc
  2528  0279  0CBB               	rrf	??___ftdiv+2,f
  2529  027A  0CBA               	rrf	??___ftdiv+1,f
  2530  027B  0CB9               	rrf	??___ftdiv,f
  2531  027C  3EFF               	addlw	-1
  2532  027D  1D03               	skipz
  2533  027E  2A78               	goto	u2265
  2534  027F  0839               	movf	??___ftdiv,w
  2535  0280  00BC               	movwf	??___ftdiv+3
  2536  0281  083C               	movf	??___ftdiv+3,w
  2537  0282  06C2               	xorwf	___ftdiv@sign,f
  2538  0283  3080               	movlw	128
  2539  0284  00B9               	movwf	??___ftdiv
  2540  0285  0839               	movf	??___ftdiv,w
  2541  0286  05C2               	andwf	___ftdiv@sign,f
  2542  0287  17B7               	bsf	___ftdiv@f1+1,7
  2543  0288  30FF               	movlw	255
  2544  0289  05B6               	andwf	___ftdiv@f1,f
  2545  028A  30FF               	movlw	255
  2546  028B  05B7               	andwf	___ftdiv@f1+1,f
  2547  028C  3000               	movlw	0
  2548  028D  05B8               	andwf	___ftdiv@f1+2,f
  2549  028E  17B4               	bsf	___ftdiv@f2+1,7
  2550  028F  30FF               	movlw	255
  2551  0290  05B3               	andwf	___ftdiv@f2,f
  2552  0291  30FF               	movlw	255
  2553  0292  05B4               	andwf	___ftdiv@f2+1,f
  2554  0293  3000               	movlw	0
  2555  0294  05B5               	andwf	___ftdiv@f2+2,f
  2556  0295  3018               	movlw	24
  2557  0296  00B9               	movwf	??___ftdiv
  2558  0297  0839               	movf	??___ftdiv,w
  2559  0298  00BD               	movwf	___ftdiv@cntr
  2560  0299                     l1678:	
  2561  0299  3001               	movlw	1
  2562  029A                     u2275:	
  2563  029A  1003               	clrc
  2564  029B  0DBE               	rlf	___ftdiv@f3,f
  2565  029C  0DBF               	rlf	___ftdiv@f3+1,f
  2566  029D  0DC0               	rlf	___ftdiv@f3+2,f
  2567  029E  3EFF               	addlw	-1
  2568  029F  1D03               	skipz
  2569  02A0  2A9A               	goto	u2275
  2570  02A1  0835               	movf	___ftdiv@f2+2,w
  2571  02A2  0238               	subwf	___ftdiv@f1+2,w
  2572  02A3  1D03               	skipz
  2573  02A4  2AAB               	goto	u2285
  2574  02A5  0834               	movf	___ftdiv@f2+1,w
  2575  02A6  0237               	subwf	___ftdiv@f1+1,w
  2576  02A7  1D03               	skipz
  2577  02A8  2AAB               	goto	u2285
  2578  02A9  0833               	movf	___ftdiv@f2,w
  2579  02AA  0236               	subwf	___ftdiv@f1,w
  2580  02AB                     u2285:	
  2581  02AB  1C03               	skipc
  2582  02AC  2AB8               	goto	l1686
  2583  02AD  0833               	movf	___ftdiv@f2,w
  2584  02AE  02B6               	subwf	___ftdiv@f1,f
  2585  02AF  0834               	movf	___ftdiv@f2+1,w
  2586  02B0  1C03               	skipc
  2587  02B1  0F34               	incfsz	___ftdiv@f2+1,w
  2588  02B2  02B7               	subwf	___ftdiv@f1+1,f
  2589  02B3  0835               	movf	___ftdiv@f2+2,w
  2590  02B4  1C03               	skipc
  2591  02B5  0A35               	incf	___ftdiv@f2+2,w
  2592  02B6  02B8               	subwf	___ftdiv@f1+2,f
  2593  02B7  143E               	bsf	___ftdiv@f3,0
  2594  02B8                     l1686:	
  2595  02B8  3001               	movlw	1
  2596  02B9                     u2295:	
  2597  02B9  1003               	clrc
  2598  02BA  0DB6               	rlf	___ftdiv@f1,f
  2599  02BB  0DB7               	rlf	___ftdiv@f1+1,f
  2600  02BC  0DB8               	rlf	___ftdiv@f1+2,f
  2601  02BD  3EFF               	addlw	-1
  2602  02BE  1D03               	skipz
  2603  02BF  2AB9               	goto	u2295
  2604  02C0  3001               	movlw	1
  2605  02C1  02BD               	subwf	___ftdiv@cntr,f
  2606  02C2  1D03               	btfss	3,2
  2607  02C3  2A99               	goto	l1678
  2608  02C4  083E               	movf	___ftdiv@f3,w
  2609  02C5  00A0               	movwf	___ftpack@arg
  2610  02C6  083F               	movf	___ftdiv@f3+1,w
  2611  02C7  00A1               	movwf	___ftpack@arg+1
  2612  02C8  0840               	movf	___ftdiv@f3+2,w
  2613  02C9  00A2               	movwf	___ftpack@arg+2
  2614  02CA  0841               	movf	___ftdiv@exp,w
  2615  02CB  00B9               	movwf	??___ftdiv
  2616  02CC  0839               	movf	??___ftdiv,w
  2617  02CD  00A3               	movwf	___ftpack@exp
  2618  02CE  0842               	movf	___ftdiv@sign,w
  2619  02CF  00BA               	movwf	??___ftdiv+1
  2620  02D0  083A               	movf	??___ftdiv+1,w
  2621  02D1  00A4               	movwf	___ftpack@sign
  2622  02D2  120A  118A  236C   	fcall	___ftpack
  2623  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  2624  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  2625  02D7  0820               	movf	?___ftpack,w
  2626  02D8  00B3               	movwf	?___ftdiv
  2627  02D9  0821               	movf	?___ftpack+1,w
  2628  02DA  00B4               	movwf	?___ftdiv+1
  2629  02DB  0822               	movf	?___ftpack+2,w
  2630  02DC  00B5               	movwf	?___ftdiv+2
  2631  02DD  0008               	return
  2632  02DE                     __end_of___ftdiv:	
  2633                           
  2634                           	psect	text12
  2635  036C                     __ptext12:	
  2636 ;; *************** function ___ftpack *****************
  2637 ;; Defined at:
  2638 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  2639 ;; Parameters:    Size  Location     Type
  2640 ;;  arg             3    0[BANK0 ] unsigned um
  2641 ;;  exp             1    3[BANK0 ] unsigned char 
  2642 ;;  sign            1    4[BANK0 ] unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  3    0[BANK0 ] float 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2, status,0
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       5       0       0       0
  2655 ;;      Locals:         0       0       0       0       0
  2656 ;;      Temps:          0       3       0       0       0
  2657 ;;      Totals:         0       8       0       0       0
  2658 ;;Total ram usage:        8 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    2
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		___altoft
  2665 ;;		___ftadd
  2666 ;;		___ftdiv
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function ___ftpack
  2672  036C                     ___ftpack:	
  2673                           
  2674                           ;incstack = 0
  2675                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  2676  036C  1283               	bcf	3,5	;RP0=0, select bank0
  2677  036D  1303               	bcf	3,6	;RP1=0, select bank0
  2678  036E  0823               	movf	___ftpack@exp,w
  2679  036F  1903               	btfsc	3,2
  2680  0370  2B76               	goto	l1450
  2681  0371  0822               	movf	___ftpack@arg+2,w
  2682  0372  0421               	iorwf	___ftpack@arg+1,w
  2683  0373  0420               	iorwf	___ftpack@arg,w
  2684  0374  1D03               	skipz
  2685  0375  2B89               	goto	l1456
  2686  0376                     l1450:	
  2687  0376  3000               	movlw	0
  2688  0377  00A0               	movwf	?___ftpack
  2689  0378  3000               	movlw	0
  2690  0379  00A1               	movwf	?___ftpack+1
  2691  037A  3000               	movlw	0
  2692  037B  00A2               	movwf	?___ftpack+2
  2693  037C  0008               	return
  2694  037D                     l1454:	
  2695  037D  3001               	movlw	1
  2696  037E  00A5               	movwf	??___ftpack
  2697  037F  0825               	movf	??___ftpack,w
  2698  0380  07A3               	addwf	___ftpack@exp,f
  2699  0381  3001               	movlw	1
  2700  0382                     u1735:	
  2701  0382  1003               	clrc
  2702  0383  0CA2               	rrf	___ftpack@arg+2,f
  2703  0384  0CA1               	rrf	___ftpack@arg+1,f
  2704  0385  0CA0               	rrf	___ftpack@arg,f
  2705  0386  3EFF               	addlw	-1
  2706  0387  1D03               	skipz
  2707  0388  2B82               	goto	u1735
  2708  0389                     l1456:	
  2709  0389  30FE               	movlw	254
  2710  038A  0522               	andwf	___ftpack@arg+2,w
  2711  038B  1903               	btfsc	3,2
  2712  038C  2BA4               	goto	l393
  2713  038D  2B7D               	goto	l1454
  2714  038E                     l1458:	
  2715  038E  3001               	movlw	1
  2716  038F  00A5               	movwf	??___ftpack
  2717  0390  0825               	movf	??___ftpack,w
  2718  0391  07A3               	addwf	___ftpack@exp,f
  2719  0392  3001               	movlw	1
  2720  0393  07A0               	addwf	___ftpack@arg,f
  2721  0394  3000               	movlw	0
  2722  0395  1803               	skipnc
  2723  0396  3001               	movlw	1
  2724  0397  07A1               	addwf	___ftpack@arg+1,f
  2725  0398  3000               	movlw	0
  2726  0399  1803               	skipnc
  2727  039A  3001               	movlw	1
  2728  039B  07A2               	addwf	___ftpack@arg+2,f
  2729  039C  3001               	movlw	1
  2730  039D                     u1755:	
  2731  039D  1003               	clrc
  2732  039E  0CA2               	rrf	___ftpack@arg+2,f
  2733  039F  0CA1               	rrf	___ftpack@arg+1,f
  2734  03A0  0CA0               	rrf	___ftpack@arg,f
  2735  03A1  3EFF               	addlw	-1
  2736  03A2  1D03               	skipz
  2737  03A3  2B9D               	goto	u1755
  2738  03A4                     l393:	
  2739  03A4  30FF               	movlw	255
  2740  03A5  0522               	andwf	___ftpack@arg+2,w
  2741  03A6  1903               	btfsc	3,2
  2742  03A7  2BB3               	goto	l1466
  2743  03A8  2B8E               	goto	l1458
  2744  03A9                     l1464:	
  2745  03A9  3001               	movlw	1
  2746  03AA  02A3               	subwf	___ftpack@exp,f
  2747  03AB  3001               	movlw	1
  2748  03AC                     u1775:	
  2749  03AC  1003               	clrc
  2750  03AD  0DA0               	rlf	___ftpack@arg,f
  2751  03AE  0DA1               	rlf	___ftpack@arg+1,f
  2752  03AF  0DA2               	rlf	___ftpack@arg+2,f
  2753  03B0  3EFF               	addlw	-1
  2754  03B1  1D03               	skipz
  2755  03B2  2BAC               	goto	u1775
  2756  03B3                     l1466:	
  2757  03B3  1BA1               	btfsc	___ftpack@arg+1,7
  2758  03B4  2BB9               	goto	l400
  2759  03B5  3002               	movlw	2
  2760  03B6  0223               	subwf	___ftpack@exp,w
  2761  03B7  1803               	skipnc
  2762  03B8  2BA9               	goto	l1464
  2763  03B9                     l400:	
  2764  03B9  1823               	btfsc	___ftpack@exp,0
  2765  03BA  2BC1               	goto	l401
  2766  03BB  30FF               	movlw	255
  2767  03BC  05A0               	andwf	___ftpack@arg,f
  2768  03BD  307F               	movlw	127
  2769  03BE  05A1               	andwf	___ftpack@arg+1,f
  2770  03BF  30FF               	movlw	255
  2771  03C0  05A2               	andwf	___ftpack@arg+2,f
  2772  03C1                     l401:	
  2773  03C1  1003               	clrc
  2774  03C2  0CA3               	rrf	___ftpack@exp,f
  2775  03C3  0823               	movf	___ftpack@exp,w
  2776  03C4  00A5               	movwf	??___ftpack
  2777  03C5  01A6               	clrf	??___ftpack+1
  2778  03C6  01A7               	clrf	??___ftpack+2
  2779  03C7  3010               	movlw	16
  2780  03C8                     u1815:	
  2781  03C8  1003               	clrc
  2782  03C9  0DA5               	rlf	??___ftpack,f
  2783  03CA  0DA6               	rlf	??___ftpack+1,f
  2784  03CB  0DA7               	rlf	??___ftpack+2,f
  2785  03CC  3EFF               	addlw	-1
  2786  03CD  1D03               	skipz
  2787  03CE  2BC8               	goto	u1815
  2788  03CF  0825               	movf	??___ftpack,w
  2789  03D0  04A0               	iorwf	___ftpack@arg,f
  2790  03D1  0826               	movf	??___ftpack+1,w
  2791  03D2  04A1               	iorwf	___ftpack@arg+1,f
  2792  03D3  0827               	movf	??___ftpack+2,w
  2793  03D4  04A2               	iorwf	___ftpack@arg+2,f
  2794  03D5  0824               	movf	___ftpack@sign,w
  2795  03D6  1903               	btfsc	3,2
  2796  03D7  0008               	return
  2797  03D8  17A2               	bsf	___ftpack@arg+2,7
  2798  03D9  0008               	return
  2799  03DA                     __end_of___ftpack:	
  2800                           
  2801                           	psect	text13
  2802  066D                     __ptext13:	
  2803 ;; *************** function _initialise *****************
  2804 ;; Defined at:
  2805 ;;		line 19 in file "main.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used:    1
  2825 ;; Hardware stack levels required when called:    2
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _initialise
  2835  066D                     _initialise:	
  2836                           
  2837                           ;main.c: 22: TRISB = 0b00000111;
  2838                           
  2839                           ;incstack = 0
  2840                           ; Regs used in _initialise: [wreg+status,2]
  2841  066D  3007               	movlw	7
  2842  066E  1683               	bsf	3,5	;RP0=1, select bank1
  2843  066F  1303               	bcf	3,6	;RP1=0, select bank1
  2844  0670  0086               	movwf	6	;volatile
  2845                           
  2846                           ;main.c: 23: TRISC = 0;
  2847  0671  0187               	clrf	7	;volatile
  2848                           
  2849                           ;main.c: 25: RB3 = 1;
  2850  0672  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0673  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0674  1586               	bsf	6,3	;volatile
  2853                           
  2854                           ;main.c: 26: RB4 = 1;
  2855  0675  1606               	bsf	6,4	;volatile
  2856                           
  2857                           ;main.c: 29: TMR0 = 100;
  2858  0676  3064               	movlw	100
  2859  0677  0081               	movwf	1	;volatile
  2860                           
  2861                           ;main.c: 30: T0CS = 0;
  2862  0678  1683               	bsf	3,5	;RP0=1, select bank1
  2863  0679  1303               	bcf	3,6	;RP1=0, select bank1
  2864  067A  1281               	bcf	1,5	;volatile
  2865                           
  2866                           ;main.c: 31: T0SE = 0;
  2867  067B  1201               	bcf	1,4	;volatile
  2868                           
  2869                           ;main.c: 32: PSA = 0;
  2870  067C  1181               	bcf	1,3	;volatile
  2871                           
  2872                           ;main.c: 33: PS0 = 0;
  2873  067D  1001               	bcf	1,0	;volatile
  2874                           
  2875                           ;main.c: 34: PS1 = 0;
  2876  067E  1081               	bcf	1,1	;volatile
  2877                           
  2878                           ;main.c: 35: PS2 = 1;
  2879  067F  1501               	bsf	1,2	;volatile
  2880                           
  2881                           ;main.c: 37: TMR0IE = 1;
  2882  0680  168B               	bsf	11,5	;volatile
  2883                           
  2884                           ;main.c: 38: (GIE = 1);
  2885  0681  178B               	bsf	11,7	;volatile
  2886  0682  0008               	return
  2887  0683                     __end_of_initialise:	
  2888                           
  2889                           	psect	text14
  2890  0656                     __ptext14:	
  2891 ;; *************** function _isr *****************
  2892 ;; Defined at:
  2893 ;;		line 12 in file "main.c"
  2894 ;; Parameters:    Size  Location     Type
  2895 ;;		None
  2896 ;; Auto vars:     Size  Location     Type
  2897 ;;		None
  2898 ;; Return value:  Size  Location     Type
  2899 ;;                  1    wreg      void 
  2900 ;; Registers used:
  2901 ;;		wreg, status,2, status,0, pclath, cstack
  2902 ;; Tracked objects:
  2903 ;;		On entry : 0/0
  2904 ;;		On exit  : 0/0
  2905 ;;		Unchanged: 0/0
  2906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2907 ;;      Params:         0       0       0       0       0
  2908 ;;      Locals:         0       0       0       0       0
  2909 ;;      Temps:          4       0       0       0       0
  2910 ;;      Totals:         4       0       0       0       0
  2911 ;;Total ram usage:        4 bytes
  2912 ;; Hardware stack levels used:    1
  2913 ;; Hardware stack levels required when called:    1
  2914 ;; This function calls:
  2915 ;;		_debounceButtons
  2916 ;; This function is called by:
  2917 ;;		Interrupt level 1
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           
  2922                           ;psect for function _isr
  2923  0656                     _isr:	
  2924                           
  2925                           ;main.c: 13: if (T0IF){
  2926  0656  1D0B               	btfss	11,2	;volatile
  2927  0657  2E60               	goto	i1l66
  2928                           
  2929                           ;main.c: 14: T0IF = 0;
  2930  0658  110B               	bcf	11,2	;volatile
  2931                           
  2932                           ;main.c: 15: TMR0 = 100;
  2933  0659  3064               	movlw	100
  2934  065A  0081               	movwf	1	;volatile
  2935                           
  2936                           ;main.c: 16: debounceButtons();
  2937  065B  120A  118A  260A  120A  118A  	fcall	_debounceButtons
  2938  0660                     i1l66:	
  2939  0660  0875               	movf	??_isr+3,w
  2940  0661  1283               	bcf	3,5	;RP0=0, select bank0
  2941  0662  1303               	bcf	3,6	;RP1=0, select bank0
  2942  0663  00FF               	movwf	127
  2943  0664  0874               	movf	??_isr+2,w
  2944  0665  008A               	movwf	10
  2945  0666  0873               	movf	??_isr+1,w
  2946  0667  0084               	movwf	4
  2947  0668  0E72               	swapf	??_isr^(0+-128),w
  2948  0669  0083               	movwf	3
  2949  066A  0EFE               	swapf	126,f
  2950  066B  0E7E               	swapf	126,w
  2951  066C  0009               	retfie
  2952  066D                     __end_of_isr:	
  2953                           
  2954                           	psect	intentry
  2955  0004                     __pintentry:	
  2956                           ;incstack = 0
  2957                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2958                           
  2959  0004                     interrupt_function:	
  2960  007E                     saved_w	set	btemp
  2961  0004  00FE               	movwf	btemp
  2962  0005  0E03               	swapf	3,w
  2963  0006  00F2               	movwf	??_isr
  2964  0007  0804               	movf	4,w
  2965  0008  00F3               	movwf	??_isr+1
  2966  0009  080A               	movf	10,w
  2967  000A  00F4               	movwf	??_isr+2
  2968  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2969  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2970  000D  087F               	movf	btemp+1,w
  2971  000E  00F5               	movwf	??_isr+3
  2972  000F  120A  118A  2E56   	ljmp	_isr
  2973                           
  2974                           	psect	text15
  2975  060A                     __ptext15:	
  2976 ;; *************** function _debounceButtons *****************
  2977 ;; Defined at:
  2978 ;;		line 6 in file "timer0.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;		None
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0
  2994 ;;      Temps:          1       0       0       0       0
  2995 ;;      Totals:         1       0       0       0       0
  2996 ;;Total ram usage:        1 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_isr
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           
  3005                           
  3006                           ;psect for function _debounceButtons
  3007  060A                     _debounceButtons:	
  3008                           
  3009                           ;timer0.c: 8: if(!RB0) {
  3010                           
  3011                           ;incstack = 0
  3012                           ; Regs used in _debounceButtons: [wreg+status,2+status,0]
  3013  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3014  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3015  060C  1806               	btfsc	6,0	;volatile
  3016  060D  2E1A               	goto	i1l978
  3017                           
  3018                           ;timer0.c: 9: rtcCounter++;
  3019  060E  3001               	movlw	1
  3020  060F  00F1               	movwf	??_debounceButtons
  3021  0610  0871               	movf	??_debounceButtons,w
  3022  0611  07F7               	addwf	_rtcCounter,f	;volatile
  3023                           
  3024                           ;timer0.c: 10: if(rtcCounter >10 &&pb0Released){
  3025  0612  300B               	movlw	11
  3026  0613  0277               	subwf	_rtcCounter,w	;volatile
  3027  0614  1803               	btfsc	3,0
  3028  0615  1D70               	btfss	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3029  0616  2E1C               	goto	i1l982
  3030                           
  3031                           ;timer0.c: 11: pb0Pressed = 1;
  3032  0617  14F0               	bsf	_pb0Pressed/(0+8),_pb0Pressed& (0+7)	;volatile
  3033                           
  3034                           ;timer0.c: 12: pb0Released = 0;
  3035  0618  1170               	bcf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3036                           
  3037                           ;timer0.c: 13: }
  3038                           ;timer0.c: 14: }
  3039  0619  2E1C               	goto	i1l982
  3040  061A                     i1l978:	
  3041                           
  3042                           ;timer0.c: 15: else{
  3043                           ;timer0.c: 16: rtcCounter = 0;
  3044  061A  01F7               	clrf	_rtcCounter	;volatile
  3045                           
  3046                           ;timer0.c: 17: pb0Released = 1;
  3047  061B  1570               	bsf	_pb0Released/(0+8),_pb0Released& (0+7)	;volatile
  3048  061C                     i1l982:	
  3049                           
  3050                           ;timer0.c: 18: }
  3051                           ;timer0.c: 20: if(!RB1) {
  3052  061C  1886               	btfsc	6,1	;volatile
  3053  061D  2E2A               	goto	i1l992
  3054                           
  3055                           ;timer0.c: 21: rtcCounter2++;
  3056  061E  3001               	movlw	1
  3057  061F  00F1               	movwf	??_debounceButtons
  3058  0620  0871               	movf	??_debounceButtons,w
  3059  0621  07F8               	addwf	_rtcCounter2,f	;volatile
  3060                           
  3061                           ;timer0.c: 22: if(rtcCounter2 >10 &&pb1Released){
  3062  0622  300B               	movlw	11
  3063  0623  0278               	subwf	_rtcCounter2,w	;volatile
  3064  0624  1803               	btfsc	3,0
  3065  0625  1E70               	btfss	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3066  0626  2E2C               	goto	i1l996
  3067                           
  3068                           ;timer0.c: 23: pb1Pressed = 1;
  3069  0627  15F0               	bsf	_pb1Pressed/(0+8),_pb1Pressed& (0+7)	;volatile
  3070                           
  3071                           ;timer0.c: 24: pb1Released = 0;
  3072  0628  1270               	bcf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3073                           
  3074                           ;timer0.c: 25: }
  3075                           ;timer0.c: 26: }
  3076  0629  2E2C               	goto	i1l996
  3077  062A                     i1l992:	
  3078                           
  3079                           ;timer0.c: 27: else{
  3080                           ;timer0.c: 28: rtcCounter2 = 0;
  3081  062A  01F8               	clrf	_rtcCounter2	;volatile
  3082                           
  3083                           ;timer0.c: 29: pb1Released = 1;
  3084  062B  1670               	bsf	_pb1Released/(0+8),_pb1Released& (0+7)	;volatile
  3085  062C                     i1l996:	
  3086                           
  3087                           ;timer0.c: 30: }
  3088                           ;timer0.c: 31: if(!RB2) {
  3089  062C  1906               	btfsc	6,2	;volatile
  3090  062D  2E3B               	goto	i1l1006
  3091                           
  3092                           ;timer0.c: 32: rtcCounter3++;
  3093  062E  3001               	movlw	1
  3094  062F  00F1               	movwf	??_debounceButtons
  3095  0630  0871               	movf	??_debounceButtons,w
  3096  0631  07F9               	addwf	_rtcCounter3,f	;volatile
  3097                           
  3098                           ;timer0.c: 33: if(rtcCounter3 >10 &&pb2Released){
  3099  0632  300B               	movlw	11
  3100  0633  0279               	subwf	_rtcCounter3,w	;volatile
  3101  0634  1C03               	skipc
  3102  0635  0008               	return
  3103  0636  1F70               	btfss	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3104  0637  0008               	return
  3105                           
  3106                           ;timer0.c: 34: pb2Pressed = 1;
  3107  0638  16F0               	bsf	_pb2Pressed/(0+8),_pb2Pressed& (0+7)	;volatile
  3108                           
  3109                           ;timer0.c: 35: pb2Released = 0;
  3110  0639  1370               	bcf	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3111                           
  3112                           ;timer0.c: 36: }
  3113                           ;timer0.c: 37: }
  3114  063A  0008               	return
  3115  063B                     i1l1006:	
  3116                           
  3117                           ;timer0.c: 38: else{
  3118                           ;timer0.c: 39: rtcCounter3 = 0;
  3119  063B  01F9               	clrf	_rtcCounter3	;volatile
  3120                           
  3121                           ;timer0.c: 40: pb2Released = 1;
  3122  063C  1770               	bsf	_pb2Released/(0+8),_pb2Released& (0+7)	;volatile
  3123  063D  0008               	return
  3124  063E                     __end_of_debounceButtons:	
  3125  007E                     btemp	set	126	;btemp
  3126  007E                     wtemp	set	126
  3127  007E                     wtemp0	set	126
  3128  0080                     wtemp1	set	128
  3129  0082                     wtemp2	set	130
  3130  0084                     wtemp3	set	132
  3131  0086                     wtemp4	set	134
  3132  0088                     wtemp5	set	136
  3133  007F                     wtemp6	set	127
  3134  007E                     ttemp	set	126
  3135  007E                     ttemp0	set	126
  3136  0081                     ttemp1	set	129
  3137  0084                     ttemp2	set	132
  3138  0087                     ttemp3	set	135
  3139  007F                     ttemp4	set	127
  3140  007E                     ltemp	set	126
  3141  007E                     ltemp0	set	126
  3142  0082                     ltemp1	set	130
  3143  0086                     ltemp2	set	134
  3144  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        24
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     80      80
    BANK1            80     13      39
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> trunc@expon(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_debounceButtons

Critical Paths under _main in BANK0

    _main->_moveDeg
    _moveDeg->_round
    _round->___ftadd
    _trunc->___fttol
    ___fttol->___ftdiv
    ___altoft->___ftpack
    ___ftneg->___altoft
    ___ftadd->_trunc
    ___ftdiv->___ftneg

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_moveDeg

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   12562
                                             11 BANK1      2     2      0
                         _initialise
                               _move
                            _moveDeg
 ---------------------------------------------------------------------------------
 (1) _moveDeg                                             14    11      3   12110
                                             77 BANK0      3     0      3
                                              0 BANK1     11    11      0
                            ___ftdiv
                             ___ftge
                            ___ftneg
                            ___fttol
                               _move
                              _round
 ---------------------------------------------------------------------------------
 (2) _round                                                6     3      3    7604
                                             71 BANK0      6     3      3
                            ___ftadd
                            ___ftdiv (ARG)
                            ___ftneg
                              _trunc
 ---------------------------------------------------------------------------------
 (3) _trunc                                                9     6      3    3490
                                             49 BANK0      9     6      3
                           ___altoft
                            ___ftneg (ARG)
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                6     2      4     428
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             14    10      4     411
                                             35 BANK0     14    10      4
                           ___altoft (ARG)
                            ___ftdiv (ARG)
                            ___ftneg (ARG)
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             8     4      4    2277
                                              8 BANK0      8     4      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftneg                                              3     0      3     240
                                             16 BANK0      3     0      3
                           ___altoft (ARG)
                           ___ftpack (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             13     7      6    3583
                                             58 BANK0     13     7      6
                            ___ftneg (ARG)
                           ___ftpack
                              _trunc (ARG)
 ---------------------------------------------------------------------------------
 (2) _move                                                 6     5      1     452
                                              0 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (2) ___ftge                                              12     6      6     322
                                              0 BANK0     12     6      6
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2688
                                             19 BANK0     16    10      6
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2008
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (1) _initialise                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  4     4      0       0
                                              1 COMMON     4     4      0
                    _debounceButtons
 ---------------------------------------------------------------------------------
 (7) _debounceButtons                                      1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initialise
   _move
   _moveDeg
     ___ftdiv
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       ___ftpack (ARG)
     ___ftge
     ___ftneg
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       _frexp (ARG)
     ___fttol
       ___altoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
     _move
     _round
       ___ftadd
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
         _trunc (ARG)
           ___altoft
             ___ftpack
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
           ___fttol (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___ftneg (ARG)
                 ___altoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 _frexp (ARG)
               ___ftpack (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
           _frexp (ARG)
       ___ftdiv (ARG)
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___ftpack (ARG)
       ___ftneg (ARG)
         ___altoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         _frexp (ARG)
       _trunc (ARG)
         ___altoft
           ___ftpack
         ___ftneg (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           _frexp (ARG)
         ___fttol (ARG)
           ___altoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___ftneg (ARG)
               ___altoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               _frexp (ARG)
             ___ftpack (ARG)
           ___ftneg (ARG)
             ___altoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             _frexp (ARG)
         _frexp (ARG)

 _isr (ROOT)
   _debounceButtons

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      D      27       7       48.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     50      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       1       0        7.1%
CODE                 0      0       0       0        0.0%
DATA                 0      0      81      12        0.0%
ABS                  0      0      81       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Fri Apr 01 21:36:06 2016

            ___altoft@exp 002E                         pc 0002               __CFG_CP$OFF 0000  
           ___altoft@sign 002F                        l99 0402                        fsr 0004  
            ___ftadd@exp1 0066              ___ftadd@exp2 0065              ___ftadd@sign 0064  
                     l400 03B9                       l401 03C1                       l424 00D6  
                     l393 03A4                       l484 0352                       _GIE 005F  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       _RB4 0034                       _PS0 0408  
                     _PS1 0409                       _PS2 040A              __CFG_CPD$OFF 0000  
                     _PSA 040B                       _isr 0656                       fsr0 0004  
                     indf 0000              __CFG_FOSC$HS 0000              __CFG_LVP$OFF 0000  
            ___ftdiv@cntr 003D              ___ftdiv@sign 0042                      l1146 02F8  
                    l1172 0347                      l1164 032A                      l1500 05DC  
                    l1174 0355                      l1166 033A                      l1520 005E  
                    l1450 0376                      l1178 0363                      l1516 0057  
                    l1454 037D                      l1390 04ED                      l1630 0417  
                    l1550 00B1                      l1526 006D                      l1464 03A9  
                    l1456 0389                      l1616 03F1                      l1544 009C  
                    l1466 03B3                      l1458 038E                      l1386 04C6  
                    l1642 03DE                      l1562 00E8                      l1546 00A8  
                    l1538 0087                      l1490 05B4                      l1730 01CC  
                    l1636 0428                      l1556 00C6                      l1548 00AD  
                    l1638 0429                      l1566 00FA                      l1558 00D2  
                    l1750 0564                      l1664 0254                      l1576 011D  
                    l1488 05A2                      l1744 0557                      l1658 023E  
                    l1762 0580                      l1738 054B                      l1596 0518  
                    l1756 0570                      l1686 02B8                      l1678 0299  
                    ?_isr 0071                      _T0IF 005A                      _T0CS 040D  
                    u1105 032B                      u1135 0349                      u2025 00B2  
                    u1075 02FF                      _T0SE 040C                      u2055 00C7  
                    u1621 04B9                      u1622 04BA                      u2255 0266  
                    u1623 04BF                      u1624 04C0                      u2265 0278  
                    u1641 04E0                      u1642 04E1                      u2275 029A  
                    u1643 04E6                      u1644 04E7                      u2285 02AB  
                    u1815 03C8                      u1735 0382                      u2295 02B9  
                    u2367 0586                      u2377 042F                      u1755 039D  
                    u1845 05A7                      u1775 03AC                      u1965 0088  
                    u1995 009D                      i1l66 0660                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 0546              ___ftpack@arg 0020  
            ___ftpack@exp 0023                      _move 03DA                      btemp 007E  
                    ltemp 007E                      start 0012                      ttemp 007E  
                    wtemp 007E              ___fttol@exp1 0050              ___fttol@lval 004C  
                   ??_isr 0072                     ?_main 0071           __end_of___ftadd 0137  
                   ?_move 0020             __CFG_WDTE$OFF 0000           __end_of___ftdiv 02DE  
         __end_of___ftneg 069E           __end_of___fttol 036C                     i1l982 061C  
                   i1l992 062A                     i1l978 061A                     i1l996 062C  
                   _PORTC 0007                     _TRISB 0086                     _TRISC 0087  
                   _cstep 0076                     _frexp 05CE                     _errno 00C5  
       ??_debounceButtons 0071             ___ftpack@sign 0024                     _round 043D  
                   _trunc 04FC           __end_of_moveDeg 0226            __pbitbssCOMMON 0380  
          __CFG_BOREN$OFF 0000                     pclath 000A                     ltemp0 007E  
                   ltemp1 0082                     ltemp2 0086                     ltemp3 0080  
                   move@i 0025                     ttemp0 007E                     ttemp1 0081  
                   ttemp2 0084                     ttemp3 0087                     ttemp4 007F  
                   status 0003                     wtemp0 007E                     wtemp1 0080  
                   wtemp2 0082                     wtemp3 0084                     wtemp4 0086  
                   wtemp5 0088                     wtemp6 007F           __initialization 0015  
            __end_of_main 058C              __end_of_move 043D                    ??_main 00C3  
           ___fttol@sign1 004B                    ??_move 0021                    ?_frexp 0020  
        __end_of___altoft 05CE          __end_of___ftpack 03DA                    ?_round 0067  
                  ?_trunc 0051                    i1l1006 063B                    _TMR0IE 005D  
          __CFG_PWRTE$OFF 0000                    ___ftge 049D                 ??___ftadd 0060  
               ??___ftdiv 0039                 ??___ftneg 0033                 ??___fttol 0047  
               ??_moveDeg 00B8                    saved_w 007E                    round@f 006A  
                  round@x 0067                    trunc@i 0055                    trunc@x 0051  
 __end_of__initialization 002A                ___altoft@c 0028                ___ftadd@f1 005A  
              ___ftadd@f2 005D                ___ftge@ff1 0020                ___ftge@ff2 0023  
              ___ftdiv@f1 0036                ___ftdiv@f2 0033                ___ftdiv@f3 003E  
              ___ftneg@f1 0030                ___fttol@f1 0043            __pcstackCOMMON 0071  
            __pidataBANK1 063E                _pb0Pressed 0381                _pb1Pressed 0383  
           __end_of_frexp 060A                _pb2Pressed 0385             __end_of_round 049D  
           __end_of_trunc 0546                   ??_frexp 0024                   ??_round 006A  
                 ??_trunc 0054                __pbssBANK1 00C5                __pmaintext 0546  
                 ?___ftge 0020                __pintentry 0004                 ?___altoft 0028  
               ?___ftpack 0020           _debounceButtons 060A             move@direction 0020  
         __size_of___ftge 005F                   ___ftadd 002E                   ___ftdiv 0226  
                 ___ftneg 0694                   ___fttol 02DE                ??___altoft 002C  
              ??___ftpack 0025                _initialise 066D                   __ptext1 0137  
                 __ptext2 043D                   __ptext3 04FC                   __ptext4 05CE  
                 __ptext5 02DE                   __ptext6 058C                   __ptext7 0694  
                 __ptext8 002E                   __ptext9 03DA              __size_of_isr 0017  
                 _moveDeg 0137      end_of_initialization 002A        moveDeg@stepsToMove 00C2  
              _rtcCounter 0077   __end_of_debounceButtons 063E                _wholeSteps 00B0  
             ___ftdiv@exp 0041               _pb0Released 0382               _pb1Released 0384  
          __end_of___ftge 04FC               _pb2Released 0386               ?_initialise 0071  
     start_initialization 0015               __end_of_isr 066D                frexp@value 0020  
        ?_debounceButtons 0071                  ??___ftge 0026                init_fetch0 0683  
             __pdataBANK1 00A0         __size_of___altoft 0042         __size_of___ftpack 006E  
             __pbssCOMMON 0076                 ___latbits 0002             __pcstackBANK0 0020  
           __pcstackBANK1 00B8       __size_of_initialise 0016                 _halfSteps 00A0  
              moveDeg@deg 006D                  ?___ftadd 005A                  ?___ftdiv 0033  
                ?___ftneg 0030                  ?___fttol 0043                  ?_moveDeg 006D  
          __size_of_frexp 003C            __size_of_round 0060            __size_of_trunc 004A  
       interrupt_function 0004                 frexp@eptr 0023          __size_of___ftadd 0109  
        __size_of___ftdiv 00B8          __size_of___ftneg 000A                  ___altoft 058C  
        __size_of___fttol 008E              ??_initialise 0020                  ___ftpack 036C  
        __size_of_moveDeg 00EF                  __ptext10 049D                  __ptext11 0226  
                __ptext12 036C                  __ptext13 066D                  __ptext14 0656  
                __ptext15 060A                 move@steps 0024                trunc@expon 0058  
           __size_of_main 0046             __size_of_move 0063        __end_of_initialise 0683  
             _moveDeg$537 00B9               _moveDeg$538 00BC               _moveDeg$539 00BF  
                init_ram0 0687                  intlevel1 0000               _rtcCounter2 0078  
             _rtcCounter3 0079               _motorToggle 0380  __size_of_debounceButtons 0034  
